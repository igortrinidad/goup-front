{"version":3,"sources":["webpack:///static/js/1.c71b71b34a2076d55f72.js","webpack:///./src/modules/general/explorer/components/show.vue","webpack:///./src/models/Place.js?7977","webpack:///elements.vue","webpack:///show.vue?ef9d","webpack:///./src/translations/pages/index.js","webpack:///./src/components/elements.vue?f15f","webpack:///./src/modules/general/explorer/components/show.vue?5a0a","webpack:///./src/components/elements.vue?703f","webpack:///./src/modules/general/explorer/components/show.vue?8e71","webpack:///./~/hammerjs/hammer.js","webpack:///./~/jquery.transit/jquery.transit.js","webpack:///./src/components/elements.vue","webpack:///./src/components/elements.vue?d3e7","webpack:///./src/modules/general/explorer/components/show.vue?065d"],"names":["webpackJsonp","244","module","exports","__webpack_require__","Component","483","__webpack_exports__","484","cleanPlaceModel","id","google_placeId","name","slug","avatar","description","best_day_is_weekly","best_day","is_owner","category","name_en","name_pt","subcategories","style","phone","website","ranking","city","state","address","lat","lng","photos","comments","488","Object","defineProperty","value","components","data","computed","mounted","methods","491","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_2_hammerjs__","__WEBPACK_IMPORTED_MODULE_2_hammerjs___default","__WEBPACK_IMPORTED_MODULE_3_jquery_transit__","__WEBPACK_IMPORTED_MODULE_4_vuex__","__WEBPACK_IMPORTED_MODULE_5__components_main_header_vue__","__WEBPACK_IMPORTED_MODULE_5__components_main_header_vue___default","__WEBPACK_IMPORTED_MODULE_6__components_elements_vue__","__WEBPACK_IMPORTED_MODULE_6__components_elements_vue___default","__WEBPACK_IMPORTED_MODULE_7__models_Place__","__WEBPACK_IMPORTED_MODULE_8__translations_pages_index__","mainHeader","a","elements","interactions","up","down","skip","favorite","starting","placeholder","places","active","top","left","i","translations","language","localStorage","getItem","this","getPlaces","mountHammer","that","hammerCards","length","setTimeout","$refs","cardAnimated","get","set","direction","DIRECTION_ALL","on","ev","animateCurrentCard","$","bind","touchend","transition","x","y","opacity","resetPosition","splice","removeItem","setItem","e","isFinal","deltaY","deltaX","goUp","_this","goDown","_this2","_this3","_this4","JSON","parse","forEach","place","_","orderBy","console","log","504","d","en","pt","end_list","filter","510","push","version","sources","names","mappings","file","sourceRoot","511","sourcesContent","522","content","locals","523","534","__WEBPACK_AMD_DEFINE_RESULT__","window","document","exportName","undefined","setTimeoutContext","fn","timeout","context","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","call","hasOwnProperty","deprecate","method","message","deprecationMessage","Error","stack","replace","warn","apply","arguments","inherit","child","base","properties","childP","baseP","prototype","create","constructor","_super","assign","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","key","sort","results","values","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","self","options","inputTarget","domHandler","enable","init","createInputInstance","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","last","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","t","dx","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","cssProps","triggerDomEvent","event","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","TypeError","output","index","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","existing","remove","events","off","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","535","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","root","factory","getVendorPropertyName","div","prefixes","prop_","charAt","substr","vendorProp","Transform","callOrQueue","queue","getProperties","re","camelCase","transit","propertyMap","uncamel","support","getTransition","duration","easing","delay","cssEase","attribs","toMS","parseInt","transitions","registerCssHook","isPixels","cssNumber","transform","cssHooks","elem","css","setFromString","transit:transform","letter","unit","units","match","fx","speeds","_default","marginLeft","marginRight","marginBottom","marginTop","paddingLeft","paddingRight","paddingBottom","paddingTop","enabled","useTransitionEnd","isChrome","transitionDelay","transformOrigin","transform3d","eventNames","MozTransition","OTransition","WebkitTransition","msTransition","transitionEnd","in","out","in-out","snap","easeInCubic","easeOutCubic","easeInOutCubic","easeInCirc","easeOutCirc","easeInOutCirc","easeInExpo","easeOutExpo","easeInOutExpo","easeInQuad","easeOutQuad","easeInOutQuad","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInBack","easeOutBack","easeInOutBack","toString","jquery","unshift","setter","getter","rotate","theta","rotateX","rotateY","skewX","skewY","perspective","dist","translate","_translateX","_translateY","s","parseFloat","rotate3d","use3d","theseProperties","complete","transitionValue","work","next","oldTransitions","run","nextCall","bound","cb","unbind","offsetWidth","getTransitionValue","536","540","render","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","541","title","cursor","appear","mode","enter-active-class","leave-active-class","directives","rawName","expression","_s","ref","backgroundImage","staticStyle","margin-bottom","margin-top","tag","to","params","place_slug","_e","click","$event"],"mappings":"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","file":"static/js/1.c71b71b34a2076d55f72.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 244:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(523)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(491),\n  /* template */\n  __webpack_require__(541),\n  /* scopeId */\n  \"data-v-1484b8b2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 483:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony default export */ var _unused_webpack_default_export = ({\n    id: 'commentID01',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum gravida volutpat fringilla.',\n    from: {\n        last_name: 'Doe',\n        full_name: 'John Doe',\n        avatar: 'https://maisbartenders.com.br/img/portfolio/My_garden_Mais_Bartenders.png'\n    }\n});\n\n/***/ }),\n\n/***/ 484:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = cleanPlaceModel;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Comments__ = __webpack_require__(483);\n\n\nfunction cleanPlaceModel() {\n    return {\n        id: '',\n        google_placeId: '',\n        name: '',\n        slug: '',\n        avatar: '',\n        description: '',\n        best_day_is_weekly: false,\n        best_day: '',\n        is_owner: true,\n        category: {\n            name_en: '',\n            name_pt: '',\n            subcategories: []\n        },\n        style: '',\n        phone: '',\n        website: '',\n        ranking: 0,\n\n        city: '',\n        state: '',\n        address: '',\n        lat: 0,\n        lng: 0,\n\n        photos: [],\n\n        comments: []\n\n    };\n}\n\n/***/ }),\n\n/***/ 488:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    name: 'ui-element',\n\n    components: {},\n\n    data: function data() {\n        return {};\n    },\n\n\n    computed: {},\n\n    mounted: function mounted() {},\n\n\n    methods: {}\n});\n\n/***/ }),\n\n/***/ 491:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(239);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__ = __webpack_require__(238);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hammerjs__ = __webpack_require__(534);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hammerjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_hammerjs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery_transit__ = __webpack_require__(535);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery_transit___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_jquery_transit__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vuex__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_main_header_vue__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_main_header_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__components_main_header_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_elements_vue__ = __webpack_require__(536);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_elements_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__components_elements_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_Place__ = __webpack_require__(484);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__translations_pages_index__ = __webpack_require__(504);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    name: 'landing',\n\n    components: {\n        mainHeader: __WEBPACK_IMPORTED_MODULE_5__components_main_header_vue___default.a,\n        elements: __WEBPACK_IMPORTED_MODULE_6__components_elements_vue___default.a\n    },\n\n    data: function data() {\n        return {\n            interactions: {\n                up: false,\n                down: false,\n                skip: false,\n                favorite: false\n            },\n            starting: true,\n            placeholder: true,\n            places: [],\n            active: false,\n            top: 0,\n            left: 0\n        };\n    },\n\n\n    computed: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_vuex__[\"a\" /* mapGetters */])(['checkLanguage']), {\n\n        'translations': function translations() {\n            var language = localStorage.getItem('language');\n\n            if (language === 'en' || !language) {\n                return __WEBPACK_IMPORTED_MODULE_8__translations_pages_index__[\"a\" /* en */];\n            }\n            if (language === 'pt') {\n                return __WEBPACK_IMPORTED_MODULE_8__translations_pages_index__[\"b\" /* pt */];\n            }\n        }\n    }),\n\n    mounted: function mounted() {\n        this.getPlaces();\n    },\n\n\n    methods: {\n        mountHammer: function mountHammer() {\n            var that = this;\n\n            if (that.hammerCards) {\n                that.hammerCards = false;\n            }\n\n            if (this.places.length) {\n                setTimeout(function () {\n                    that.hammerCards = new __WEBPACK_IMPORTED_MODULE_2_hammerjs___default.a(that.$refs.cardAnimated);\n                    that.hammerCards.get('pan').set({ direction: __WEBPACK_IMPORTED_MODULE_2_hammerjs___default.a.DIRECTION_ALL });\n                    that.hammerCards.on('panleft panright panup pandown tap press', function (ev) {\n                        that.animateCurrentCard(ev);\n                    });\n\n                    $('#card-animated').bind('touchend', function (ev) {\n                        that.touchend();\n                    });\n                }, 200);\n            }\n        },\n        touchend: function touchend(top) {\n            var that = this;\n\n            if (that.top > -75 && that.top < 75 && that.left > -75 && that.left < 75) {\n                $('#card-animated').transition({ x: 0, y: 0 }, 300);\n            } else {\n                if (that.top < -75) {\n                    $('#card-animated').transition({ y: -200, opacity: 0 }, 300, function () {\n                        return that.resetPosition();\n                    });\n                }\n\n                if (that.top > 75) {\n                    $('#card-animated').transition({ y: 200, opacity: 0 }, 300, function () {\n                        return that.resetPosition();\n                    });\n                }\n\n                if (that.left > 75) {\n                    $('#card-animated').transition({ x: 300, opacity: 0 }, 300, function () {\n                        return that.resetPosition();\n                    });\n                }\n\n                if (that.left < -75) {\n                    $('#card-animated').transition({ x: -300, opacity: 0 }, 300, function () {\n                        return that.resetPosition();\n                    });\n                }\n            }\n        },\n        resetPosition: function resetPosition() {\n            this.top = 0;\n            this.left = 0;\n\n            this.interactions.up = false;\n            this.interactions.down = false;\n            this.interactions.skip = false;\n            this.interactions.favorite = false;\n\n            this.places.splice(0, 1);\n            $(this.$refs.cardAnimated).transition({ x: 0, y: 0, opacity: 1 }, 0);\n\n            localStorage.removeItem('places');\n            localStorage.setItem('places', __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(this.places));\n        },\n        animateCurrentCard: function animateCurrentCard(e) {\n\n            var that = this;\n\n            if (!e.isFinal) {\n                var top = e.deltaY;\n                var left = e.deltaX;\n\n                that.top = top;\n                that.left = left;\n\n                $('#card-animated').transition({ x: left, y: top }, 0);\n\n                if (top > -75 && top < 75 && left > -75 && left < 75) {\n                    that.interactions.up = false;\n                    that.interactions.down = false;\n                    that.interactions.favorite = false;\n                    that.interactions.skip = false;\n                } else {\n                    if (top < -75) {\n                        that.interactions.up = true;\n                        that.interactions.down = false;\n                        that.interactions.favorite = false;\n                        that.interactions.skip = false;\n                        return;\n                    }\n\n                    if (top > 75) {\n                        that.interactions.up = false;\n                        that.interactions.down = true;\n                        that.interactions.favorite = false;\n                        that.interactions.skip = false;\n                        return;\n                    }\n\n                    if (left > 75 && top > -75 && top < 75) {\n                        that.interactions.up = false;\n                        that.interactions.down = false;\n                        that.interactions.favorite = true;\n                        that.interactions.skip = false;\n                        return;\n                    }\n\n                    if (left < -75 && top > -75 && top < 75) {\n                        that.interactions.up = false;\n                        that.interactions.down = false;\n                        that.interactions.favorite = false;\n                        that.interactions.skip = true;\n                        return;\n                    }\n                }\n            }\n        },\n        goUp: function goUp() {\n            var _this = this;\n\n            this.interactions.up = true;\n\n            $('#card-animated').transition({ x: 0, y: -100, opacity: 0 }, 1000, function () {\n                return _this.resetPosition();\n            });\n        },\n        goDown: function goDown() {\n            var _this2 = this;\n\n            this.interactions.down = true;\n            $('#card-animated').transition({ x: 0, y: 100, opacity: 0 }, 1000, function () {\n                return _this2.resetPosition();\n            });\n        },\n        favorite: function favorite() {\n            var _this3 = this;\n\n            this.interactions.favorite = true;\n            $('#card-animated').transition({ x: 100, y: 0, opacity: 0 }, 1000, function () {\n                return _this3.resetPosition();\n            });\n        },\n        skip: function skip() {\n            var _this4 = this;\n\n            this.interactions.skip = true;\n            $('#card-animated').transition({ x: -100, y: 0, opacity: 0 }, 1000, function () {\n                return _this4.resetPosition();\n            });\n        },\n        getPlaces: function getPlaces() {\n            var that = this;\n\n            if (that.starting) {\n\n                that.starting = false;\n\n                if (localStorage.getItem('places')) {\n                    that.places = JSON.parse(localStorage.getItem('places'));\n                } else {\n                    that.places = [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__models_Place__[\"a\" /* cleanPlaceModel */])(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__models_Place__[\"a\" /* cleanPlaceModel */])(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__models_Place__[\"a\" /* cleanPlaceModel */])()];\n                    localStorage.setItem('places', __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(this.places));\n                }\n            } else {\n                that.places = [__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__models_Place__[\"a\" /* cleanPlaceModel */])(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__models_Place__[\"a\" /* cleanPlaceModel */])(), __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__models_Place__[\"a\" /* cleanPlaceModel */])()];\n                localStorage.removeItem('places');\n                localStorage.setItem('places', __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(that.places));\n            }\n\n            that.places.forEach(function (place) {\n                place.photos = _.orderBy(place.photos, ['is_cover'], ['desc']);\n            });\n\n            this.mountHammer();\n\n            console.log(that.places);\n        }\n    }\n});\n\n/***/ }),\n\n/***/ 504:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return en; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return pt; });\nvar en = {\n    end_list: 'Has no companies in nearby',\n    up: 'Go Up',\n    down: 'Go Down',\n    skip: 'Skip',\n    favorite: 'Save',\n    filter: 'Filter'\n};\n\nvar pt = {\n    end_list: 'Não tem empresas nas proximidades',\n    up: 'Go Up',\n    down: 'Go Down',\n    skip: 'Pular',\n    favorite: 'Salvar',\n    filter: 'Filtro'\n};\n\n/***/ }),\n\n/***/ 510:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(481)();\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"elements.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 511:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(481)();\n// imports\n\n\n// module\nexports.push([module.i, \".cards[data-v-1484b8b2]{position:relative;height:388px}.cards .card .card-header .card-header-container[data-v-1484b8b2]{position:absolute;top:0;left:0;bottom:0;right:0;width:100%;height:100%;z-index:10}@media (max-width:360px){.cards[data-v-1484b8b2]{height:330px}}.card[data-v-1484b8b2]{position:absolute;width:100%;left:0}.card .card-header.cover[data-v-1484b8b2]{position:relative}.cards #card-animated[data-v-1484b8b2]{z-index:10}.fadeInLeft[data-v-1484b8b2]{transition:.1s}.icon-information[data-v-1484b8b2]{position:absolute;top:0;right:10px;font-size:30px;color:#fff;z-index:7}.card .card-header .ch-content[data-v-1484b8b2]{position:absolute;bottom:0;left:0;width:100%;text-align:left;padding:10px;color:#fff!important}\", \"\", {\"version\":3,\"sources\":[\"/Users/igortrindade/Code/goup-front/src/modules/general/explorer/components/show.vue\"],\"names\":[],\"mappings\":\"AACA,wBACI,kBAAmB,AACnB,YAAc,CACjB,AACD,kEACI,kBAAmB,AACnB,MAAO,AAAC,OAAQ,AAChB,SAAU,AAAC,QAAS,AACpB,WAAY,AAAC,YAAa,AAC1B,UAAY,CACf,AACD,yBACA,wBAAyB,YAAa,CACrC,CACA,AACD,uBACI,kBAAmB,AACnB,WAAY,AACZ,MAAQ,CACX,AACD,0CAA4C,iBAAmB,CAC9D,AACD,uCAAwC,UAAY,CACnD,AACD,6BACI,cAAiB,CACpB,AACD,mCACI,kBAAmB,AACnB,MAAS,AACT,WAAY,AACZ,eAAgB,AAChB,WAAY,AACZ,SAAW,CACd,AACD,gDACI,kBAAmB,AACnB,SAAU,AACV,OAAQ,AACR,WAAY,AACZ,gBAAiB,AACjB,aAAc,AACd,oBAAuB,CAC1B\",\"file\":\"show.vue\",\"sourcesContent\":[\"\\n.cards[data-v-1484b8b2] {\\n    position: relative;\\n    height: 388px;\\n}\\n.cards .card .card-header .card-header-container[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0; left: 0;\\n    bottom: 0; right: 0;\\n    width: 100%; height: 100%;\\n    z-index: 10;\\n}\\n@media (max-width: 360px) {\\n.cards[data-v-1484b8b2]{ height: 330px\\n}\\n}\\n.card[data-v-1484b8b2] {\\n    position: absolute;\\n    width: 100%;\\n    left: 0;\\n}\\n.card .card-header.cover[data-v-1484b8b2] { position: relative;\\n}\\n.cards #card-animated[data-v-1484b8b2]{ z-index: 10;\\n}\\n.fadeInLeft[data-v-1484b8b2]{\\n    transition: 0.1s;\\n}\\n.icon-information[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0px;\\n    right: 10px;\\n    font-size: 30px;\\n    color: #fff;\\n    z-index: 7;\\n}\\n.card .card-header .ch-content[data-v-1484b8b2] {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    text-align: left;\\n    padding: 10px;\\n    color: #fff !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 522:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(510);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(482)(\"981c6922\", content, true);\n\n/***/ }),\n\n/***/ 523:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(511);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(482)(\"7e1e4792\", content, true);\n\n/***/ }),\n\n/***/ 534:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return Hammer;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n/***/ }),\n\n/***/ 535:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery Transit - CSS3 transitions and transformations\n * (c) 2011-2014 Rico Sta. Cruz\n * MIT Licensed.\n *\n * http://ricostacruz.com/jquery.transit\n * http://github.com/rstacruz/jquery.transit\n */\n\n/* jshint expr: true */\n\n;(function (root, factory) {\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(555)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('jquery'));\n  } else {\n    factory(root.jQuery);\n  }\n\n}(this, function($) {\n\n  $.transit = {\n    version: \"0.9.12\",\n\n    // Map of $.css() keys to values for 'transitionProperty'.\n    // See https://developer.mozilla.org/en/CSS/CSS_transitions#Properties_that_can_be_animated\n    propertyMap: {\n      marginLeft    : 'margin',\n      marginRight   : 'margin',\n      marginBottom  : 'margin',\n      marginTop     : 'margin',\n      paddingLeft   : 'padding',\n      paddingRight  : 'padding',\n      paddingBottom : 'padding',\n      paddingTop    : 'padding'\n    },\n\n    // Will simply transition \"instantly\" if false\n    enabled: true,\n\n    // Set this to false if you don't want to use the transition end property.\n    useTransitionEnd: false\n  };\n\n  var div = document.createElement('div');\n  var support = {};\n\n  // Helper function to get the proper vendor property name.\n  // (`transition` => `WebkitTransition`)\n  function getVendorPropertyName(prop) {\n    // Handle unprefixed versions (FF16+, for example)\n    if (prop in div.style) return prop;\n\n    var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n    var prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (var i=0; i<prefixes.length; ++i) {\n      var vendorProp = prefixes[i] + prop_;\n      if (vendorProp in div.style) { return vendorProp; }\n    }\n  }\n\n  // Helper function to check if transform3D is supported.\n  // Should return true for Webkits and Firefox 10+.\n  function checkTransform3dSupport() {\n    div.style[support.transform] = '';\n    div.style[support.transform] = 'rotateY(90deg)';\n    return div.style[support.transform] !== '';\n  }\n\n  var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  // Check for the browser's transitions support.\n  support.transition      = getVendorPropertyName('transition');\n  support.transitionDelay = getVendorPropertyName('transitionDelay');\n  support.transform       = getVendorPropertyName('transform');\n  support.transformOrigin = getVendorPropertyName('transformOrigin');\n  support.filter          = getVendorPropertyName('Filter');\n  support.transform3d     = checkTransform3dSupport();\n\n  var eventNames = {\n    'transition':       'transitionend',\n    'MozTransition':    'transitionend',\n    'OTransition':      'oTransitionEnd',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'msTransition':     'MSTransitionEnd'\n  };\n\n  // Detect the 'transitionend' event needed.\n  var transitionEnd = support.transitionEnd = eventNames[support.transition] || null;\n\n  // Populate jQuery's `$.support` with the vendor prefixes we know.\n  // As per [jQuery's cssHooks documentation](http://api.jquery.com/jQuery.cssHooks/),\n  // we set $.support.transition to a string of the actual property name used.\n  for (var key in support) {\n    if (support.hasOwnProperty(key) && typeof $.support[key] === 'undefined') {\n      $.support[key] = support[key];\n    }\n  }\n\n  // Avoid memory leak in IE.\n  div = null;\n\n  // ## $.cssEase\n  // List of easing aliases that you can use with `$.fn.transition`.\n  $.cssEase = {\n    '_default':       'ease',\n    'in':             'ease-in',\n    'out':            'ease-out',\n    'in-out':         'ease-in-out',\n    'snap':           'cubic-bezier(0,1,.5,1)',\n    // Penner equations\n    'easeInCubic':    'cubic-bezier(.550,.055,.675,.190)',\n    'easeOutCubic':   'cubic-bezier(.215,.61,.355,1)',\n    'easeInOutCubic': 'cubic-bezier(.645,.045,.355,1)',\n    'easeInCirc':     'cubic-bezier(.6,.04,.98,.335)',\n    'easeOutCirc':    'cubic-bezier(.075,.82,.165,1)',\n    'easeInOutCirc':  'cubic-bezier(.785,.135,.15,.86)',\n    'easeInExpo':     'cubic-bezier(.95,.05,.795,.035)',\n    'easeOutExpo':    'cubic-bezier(.19,1,.22,1)',\n    'easeInOutExpo':  'cubic-bezier(1,0,0,1)',\n    'easeInQuad':     'cubic-bezier(.55,.085,.68,.53)',\n    'easeOutQuad':    'cubic-bezier(.25,.46,.45,.94)',\n    'easeInOutQuad':  'cubic-bezier(.455,.03,.515,.955)',\n    'easeInQuart':    'cubic-bezier(.895,.03,.685,.22)',\n    'easeOutQuart':   'cubic-bezier(.165,.84,.44,1)',\n    'easeInOutQuart': 'cubic-bezier(.77,0,.175,1)',\n    'easeInQuint':    'cubic-bezier(.755,.05,.855,.06)',\n    'easeOutQuint':   'cubic-bezier(.23,1,.32,1)',\n    'easeInOutQuint': 'cubic-bezier(.86,0,.07,1)',\n    'easeInSine':     'cubic-bezier(.47,0,.745,.715)',\n    'easeOutSine':    'cubic-bezier(.39,.575,.565,1)',\n    'easeInOutSine':  'cubic-bezier(.445,.05,.55,.95)',\n    'easeInBack':     'cubic-bezier(.6,-.28,.735,.045)',\n    'easeOutBack':    'cubic-bezier(.175, .885,.32,1.275)',\n    'easeInOutBack':  'cubic-bezier(.68,-.55,.265,1.55)'\n  };\n\n  // ## 'transform' CSS hook\n  // Allows you to use the `transform` property in CSS.\n  //\n  //     $(\"#hello\").css({ transform: \"rotate(90deg)\" });\n  //\n  //     $(\"#hello\").css('transform');\n  //     //=> { rotate: '90deg' }\n  //\n  $.cssHooks['transit:transform'] = {\n    // The getter returns a `Transform` object.\n    get: function(elem) {\n      return $(elem).data('transform') || new Transform();\n    },\n\n    // The setter accepts a `Transform` object or a string.\n    set: function(elem, v) {\n      var value = v;\n\n      if (!(value instanceof Transform)) {\n        value = new Transform(value);\n      }\n\n      // We've seen the 3D version of Scale() not work in Chrome when the\n      // element being scaled extends outside of the viewport.  Thus, we're\n      // forcing Chrome to not use the 3d transforms as well.  Not sure if\n      // translate is affectede, but not risking it.  Detection code from\n      // http://davidwalsh.name/detecting-google-chrome-javascript\n      if (support.transform === 'WebkitTransform' && !isChrome) {\n        elem.style[support.transform] = value.toString(true);\n      } else {\n        elem.style[support.transform] = value.toString();\n      }\n\n      $(elem).data('transform', value);\n    }\n  };\n\n  // Add a CSS hook for `.css({ transform: '...' })`.\n  // In jQuery 1.8+, this will intentionally override the default `transform`\n  // CSS hook so it'll play well with Transit. (see issue #62)\n  $.cssHooks.transform = {\n    set: $.cssHooks['transit:transform'].set\n  };\n\n  // ## 'filter' CSS hook\n  // Allows you to use the `filter` property in CSS.\n  //\n  //     $(\"#hello\").css({ filter: 'blur(10px)' });\n  //\n  $.cssHooks.filter = {\n    get: function(elem) {\n      return elem.style[support.filter];\n    },\n    set: function(elem, value) {\n      elem.style[support.filter] = value;\n    }\n  };\n\n  // jQuery 1.8+ supports prefix-free transitions, so these polyfills will not\n  // be necessary.\n  if ($.fn.jquery < \"1.8\") {\n    // ## 'transformOrigin' CSS hook\n    // Allows the use for `transformOrigin` to define where scaling and rotation\n    // is pivoted.\n    //\n    //     $(\"#hello\").css({ transformOrigin: '0 0' });\n    //\n    $.cssHooks.transformOrigin = {\n      get: function(elem) {\n        return elem.style[support.transformOrigin];\n      },\n      set: function(elem, value) {\n        elem.style[support.transformOrigin] = value;\n      }\n    };\n\n    // ## 'transition' CSS hook\n    // Allows you to use the `transition` property in CSS.\n    //\n    //     $(\"#hello\").css({ transition: 'all 0 ease 0' });\n    //\n    $.cssHooks.transition = {\n      get: function(elem) {\n        return elem.style[support.transition];\n      },\n      set: function(elem, value) {\n        elem.style[support.transition] = value;\n      }\n    };\n  }\n\n  // ## Other CSS hooks\n  // Allows you to rotate, scale and translate.\n  registerCssHook('scale');\n  registerCssHook('scaleX');\n  registerCssHook('scaleY');\n  registerCssHook('translate');\n  registerCssHook('rotate');\n  registerCssHook('rotateX');\n  registerCssHook('rotateY');\n  registerCssHook('rotate3d');\n  registerCssHook('perspective');\n  registerCssHook('skewX');\n  registerCssHook('skewY');\n  registerCssHook('x', true);\n  registerCssHook('y', true);\n\n  // ## Transform class\n  // This is the main class of a transformation property that powers\n  // `$.fn.css({ transform: '...' })`.\n  //\n  // This is, in essence, a dictionary object with key/values as `-transform`\n  // properties.\n  //\n  //     var t = new Transform(\"rotate(90) scale(4)\");\n  //\n  //     t.rotate             //=> \"90deg\"\n  //     t.scale              //=> \"4,4\"\n  //\n  // Setters are accounted for.\n  //\n  //     t.set('rotate', 4)\n  //     t.rotate             //=> \"4deg\"\n  //\n  // Convert it to a CSS string using the `toString()` and `toString(true)` (for WebKit)\n  // functions.\n  //\n  //     t.toString()         //=> \"rotate(90deg) scale(4,4)\"\n  //     t.toString(true)     //=> \"rotate(90deg) scale3d(4,4,0)\" (WebKit version)\n  //\n  function Transform(str) {\n    if (typeof str === 'string') { this.parse(str); }\n    return this;\n  }\n\n  Transform.prototype = {\n    // ### setFromString()\n    // Sets a property from a string.\n    //\n    //     t.setFromString('scale', '2,4');\n    //     // Same as set('scale', '2', '4');\n    //\n    setFromString: function(prop, val) {\n      var args =\n        (typeof val === 'string')  ? val.split(',') :\n        (val.constructor === Array) ? val :\n        [ val ];\n\n      args.unshift(prop);\n\n      Transform.prototype.set.apply(this, args);\n    },\n\n    // ### set()\n    // Sets a property.\n    //\n    //     t.set('scale', 2, 4);\n    //\n    set: function(prop) {\n      var args = Array.prototype.slice.apply(arguments, [1]);\n      if (this.setter[prop]) {\n        this.setter[prop].apply(this, args);\n      } else {\n        this[prop] = args.join(',');\n      }\n    },\n\n    get: function(prop) {\n      if (this.getter[prop]) {\n        return this.getter[prop].apply(this);\n      } else {\n        return this[prop] || 0;\n      }\n    },\n\n    setter: {\n      // ### rotate\n      //\n      //     .css({ rotate: 30 })\n      //     .css({ rotate: \"30\" })\n      //     .css({ rotate: \"30deg\" })\n      //     .css({ rotate: \"30deg\" })\n      //\n      rotate: function(theta) {\n        this.rotate = unit(theta, 'deg');\n      },\n\n      rotateX: function(theta) {\n        this.rotateX = unit(theta, 'deg');\n      },\n\n      rotateY: function(theta) {\n        this.rotateY = unit(theta, 'deg');\n      },\n\n      // ### scale\n      //\n      //     .css({ scale: 9 })      //=> \"scale(9,9)\"\n      //     .css({ scale: '3,2' })  //=> \"scale(3,2)\"\n      //\n      scale: function(x, y) {\n        if (y === undefined) { y = x; }\n        this.scale = x + \",\" + y;\n      },\n\n      // ### skewX + skewY\n      skewX: function(x) {\n        this.skewX = unit(x, 'deg');\n      },\n\n      skewY: function(y) {\n        this.skewY = unit(y, 'deg');\n      },\n\n      // ### perspectvie\n      perspective: function(dist) {\n        this.perspective = unit(dist, 'px');\n      },\n\n      // ### x / y\n      // Translations. Notice how this keeps the other value.\n      //\n      //     .css({ x: 4 })       //=> \"translate(4px, 0)\"\n      //     .css({ y: 10 })      //=> \"translate(4px, 10px)\"\n      //\n      x: function(x) {\n        this.set('translate', x, null);\n      },\n\n      y: function(y) {\n        this.set('translate', null, y);\n      },\n\n      // ### translate\n      // Notice how this keeps the other value.\n      //\n      //     .css({ translate: '2, 5' })    //=> \"translate(2px, 5px)\"\n      //\n      translate: function(x, y) {\n        if (this._translateX === undefined) { this._translateX = 0; }\n        if (this._translateY === undefined) { this._translateY = 0; }\n\n        if (x !== null && x !== undefined) { this._translateX = unit(x, 'px'); }\n        if (y !== null && y !== undefined) { this._translateY = unit(y, 'px'); }\n\n        this.translate = this._translateX + \",\" + this._translateY;\n      }\n    },\n\n    getter: {\n      x: function() {\n        return this._translateX || 0;\n      },\n\n      y: function() {\n        return this._translateY || 0;\n      },\n\n      scale: function() {\n        var s = (this.scale || \"1,1\").split(',');\n        if (s[0]) { s[0] = parseFloat(s[0]); }\n        if (s[1]) { s[1] = parseFloat(s[1]); }\n\n        // \"2.5,2.5\" => 2.5\n        // \"2.5,1\" => [2.5,1]\n        return (s[0] === s[1]) ? s[0] : s;\n      },\n\n      rotate3d: function() {\n        var s = (this.rotate3d || \"0,0,0,0deg\").split(',');\n        for (var i=0; i<=3; ++i) {\n          if (s[i]) { s[i] = parseFloat(s[i]); }\n        }\n        if (s[3]) { s[3] = unit(s[3], 'deg'); }\n\n        return s;\n      }\n    },\n\n    // ### parse()\n    // Parses from a string. Called on constructor.\n    parse: function(str) {\n      var self = this;\n      str.replace(/([a-zA-Z0-9]+)\\((.*?)\\)/g, function(x, prop, val) {\n        self.setFromString(prop, val);\n      });\n    },\n\n    // ### toString()\n    // Converts to a `transition` CSS property string. If `use3d` is given,\n    // it converts to a `-webkit-transition` CSS property string instead.\n    toString: function(use3d) {\n      var re = [];\n\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          // Don't use 3D transformations if the browser can't support it.\n          if ((!support.transform3d) && (\n            (i === 'rotateX') ||\n            (i === 'rotateY') ||\n            (i === 'perspective') ||\n            (i === 'transformOrigin'))) { continue; }\n\n          if (i[0] !== '_') {\n            if (use3d && (i === 'scale')) {\n              re.push(i + \"3d(\" + this[i] + \",1)\");\n            } else if (use3d && (i === 'translate')) {\n              re.push(i + \"3d(\" + this[i] + \",0)\");\n            } else {\n              re.push(i + \"(\" + this[i] + \")\");\n            }\n          }\n        }\n      }\n\n      return re.join(\" \");\n    }\n  };\n\n  function callOrQueue(self, queue, fn) {\n    if (queue === true) {\n      self.queue(fn);\n    } else if (queue) {\n      self.queue(queue, fn);\n    } else {\n      self.each(function () {\n                fn.call(this);\n            });\n    }\n  }\n\n  // ### getProperties(dict)\n  // Returns properties (for `transition-property`) for dictionary `props`. The\n  // value of `props` is what you would expect in `$.css(...)`.\n  function getProperties(props) {\n    var re = [];\n\n    $.each(props, function(key) {\n      key = $.camelCase(key); // Convert \"text-align\" => \"textAlign\"\n      key = $.transit.propertyMap[key] || $.cssProps[key] || key;\n      key = uncamel(key); // Convert back to dasherized\n\n      // Get vendor specify propertie\n      if (support[key])\n        key = uncamel(support[key]);\n\n      if ($.inArray(key, re) === -1) { re.push(key); }\n    });\n\n    return re;\n  }\n\n  // ### getTransition()\n  // Returns the transition string to be used for the `transition` CSS property.\n  //\n  // Example:\n  //\n  //     getTransition({ opacity: 1, rotate: 30 }, 500, 'ease');\n  //     //=> 'opacity 500ms ease, -webkit-transform 500ms ease'\n  //\n  function getTransition(properties, duration, easing, delay) {\n    // Get the CSS properties needed.\n    var props = getProperties(properties);\n\n    // Account for aliases (`in` => `ease-in`).\n    if ($.cssEase[easing]) { easing = $.cssEase[easing]; }\n\n    // Build the duration/easing/delay attributes for it.\n    var attribs = '' + toMS(duration) + ' ' + easing;\n    if (parseInt(delay, 10) > 0) { attribs += ' ' + toMS(delay); }\n\n    // For more properties, add them this way:\n    // \"margin 200ms ease, padding 200ms ease, ...\"\n    var transitions = [];\n    $.each(props, function(i, name) {\n      transitions.push(name + ' ' + attribs);\n    });\n\n    return transitions.join(', ');\n  }\n\n  // ## $.fn.transition\n  // Works like $.fn.animate(), but uses CSS transitions.\n  //\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 });\n  //\n  //     // Specific duration\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500);\n  //\n  //     // With duration and easing\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in');\n  //\n  //     // With callback\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, function() { ... });\n  //\n  //     // With everything\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in', function() { ... });\n  //\n  //     // Alternate syntax\n  //     $(\"...\").transition({\n  //       opacity: 0.1,\n  //       duration: 200,\n  //       delay: 40,\n  //       easing: 'in',\n  //       complete: function() { /* ... */ }\n  //      });\n  //\n  $.fn.transition = $.fn.transit = function(properties, duration, easing, callback) {\n    var self  = this;\n    var delay = 0;\n    var queue = true;\n\n    var theseProperties = $.extend(true, {}, properties);\n\n    // Account for `.transition(properties, callback)`.\n    if (typeof duration === 'function') {\n      callback = duration;\n      duration = undefined;\n    }\n\n    // Account for `.transition(properties, options)`.\n    if (typeof duration === 'object') {\n      easing = duration.easing;\n      delay = duration.delay || 0;\n      queue = typeof duration.queue === \"undefined\" ? true : duration.queue;\n      callback = duration.complete;\n      duration = duration.duration;\n    }\n\n    // Account for `.transition(properties, duration, callback)`.\n    if (typeof easing === 'function') {\n      callback = easing;\n      easing = undefined;\n    }\n\n    // Alternate syntax.\n    if (typeof theseProperties.easing !== 'undefined') {\n      easing = theseProperties.easing;\n      delete theseProperties.easing;\n    }\n\n    if (typeof theseProperties.duration !== 'undefined') {\n      duration = theseProperties.duration;\n      delete theseProperties.duration;\n    }\n\n    if (typeof theseProperties.complete !== 'undefined') {\n      callback = theseProperties.complete;\n      delete theseProperties.complete;\n    }\n\n    if (typeof theseProperties.queue !== 'undefined') {\n      queue = theseProperties.queue;\n      delete theseProperties.queue;\n    }\n\n    if (typeof theseProperties.delay !== 'undefined') {\n      delay = theseProperties.delay;\n      delete theseProperties.delay;\n    }\n\n    // Set defaults. (`400` duration, `ease` easing)\n    if (typeof duration === 'undefined') { duration = $.fx.speeds._default; }\n    if (typeof easing === 'undefined')   { easing = $.cssEase._default; }\n\n    duration = toMS(duration);\n\n    // Build the `transition` property.\n    var transitionValue = getTransition(theseProperties, duration, easing, delay);\n\n    // Compute delay until callback.\n    // If this becomes 0, don't bother setting the transition property.\n    var work = $.transit.enabled && support.transition;\n    var i = work ? (parseInt(duration, 10) + parseInt(delay, 10)) : 0;\n\n    // If there's nothing to do...\n    if (i === 0) {\n      var fn = function(next) {\n        self.css(theseProperties);\n        if (callback) { callback.apply(self); }\n        if (next) { next(); }\n      };\n\n      callOrQueue(self, queue, fn);\n      return self;\n    }\n\n    // Save the old transitions of each element so we can restore it later.\n    var oldTransitions = {};\n\n    var run = function(nextCall) {\n      var bound = false;\n\n      // Prepare the callback.\n      var cb = function() {\n        if (bound) { self.unbind(transitionEnd, cb); }\n\n        if (i > 0) {\n          self.each(function() {\n            this.style[support.transition] = (oldTransitions[this] || null);\n          });\n        }\n\n        if (typeof callback === 'function') { callback.apply(self); }\n        if (typeof nextCall === 'function') { nextCall(); }\n      };\n\n      if ((i > 0) && (transitionEnd) && ($.transit.useTransitionEnd)) {\n        // Use the 'transitionend' event if it's available.\n        bound = true;\n        self.bind(transitionEnd, cb);\n      } else {\n        // Fallback to timers if the 'transitionend' event isn't supported.\n        window.setTimeout(cb, i);\n      }\n\n      // Apply transitions.\n      self.each(function() {\n        if (i > 0) {\n          this.style[support.transition] = transitionValue;\n        }\n        $(this).css(theseProperties);\n      });\n    };\n\n    // Defer running. This allows the browser to paint any pending CSS it hasn't\n    // painted yet before doing the transitions.\n    var deferredRun = function(next) {\n        this.offsetWidth; // force a repaint\n        run(next);\n    };\n\n    // Use jQuery's fx queue.\n    callOrQueue(self, queue, deferredRun);\n\n    // Chainability.\n    return this;\n  };\n\n  function registerCssHook(prop, isPixels) {\n    // For certain properties, the 'px' should not be implied.\n    if (!isPixels) { $.cssNumber[prop] = true; }\n\n    $.transit.propertyMap[prop] = support.transform;\n\n    $.cssHooks[prop] = {\n      get: function(elem) {\n        var t = $(elem).css('transit:transform');\n        return t.get(prop);\n      },\n\n      set: function(elem, value) {\n        var t = $(elem).css('transit:transform');\n        t.setFromString(prop, value);\n\n        $(elem).css({ 'transit:transform': t });\n      }\n    };\n\n  }\n\n  // ### uncamel(str)\n  // Converts a camelcase string to a dasherized string.\n  // (`marginLeft` => `margin-left`)\n  function uncamel(str) {\n    return str.replace(/([A-Z])/g, function(letter) { return '-' + letter.toLowerCase(); });\n  }\n\n  // ### unit(number, unit)\n  // Ensures that number `number` has a unit. If no unit is found, assume the\n  // default is `unit`.\n  //\n  //     unit(2, 'px')          //=> \"2px\"\n  //     unit(\"30deg\", 'rad')   //=> \"30deg\"\n  //\n  function unit(i, units) {\n    if ((typeof i === \"string\") && (!i.match(/^[\\-0-9\\.]+$/))) {\n      return i;\n    } else {\n      return \"\" + i + units;\n    }\n  }\n\n  // ### toMS(duration)\n  // Converts given `duration` to a millisecond string.\n  //\n  // toMS('fast') => $.fx.speeds[i] => \"200ms\"\n  // toMS('normal') //=> $.fx.speeds._default => \"400ms\"\n  // toMS(10) //=> '10ms'\n  // toMS('100ms') //=> '100ms'  \n  //\n  function toMS(duration) {\n    var i = duration;\n\n    // Allow string durations like 'fast' and 'slow', without overriding numeric values.\n    if (typeof i === 'string' && (!i.match(/^[\\-0-9\\.]+/))) { i = $.fx.speeds[i] || $.fx.speeds._default; }\n\n    return unit(i, 'ms');\n  }\n\n  // Export some functions for testable-ness.\n  $.transit.getTransitionValue = getTransition;\n\n  return $;\n}));\n\n\n/***/ }),\n\n/***/ 536:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(522)\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(488),\n  /* template */\n  __webpack_require__(540),\n  /* scopeId */\n  \"data-v-04381e03\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 540:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {}, [_c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Buttons\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-default\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Default\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-primary\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Primary\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-success\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Success\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-info\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Info\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-danger\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Danger\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Card\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"card\"\n  }, [_c('div', {\n    staticClass: \"card-header ch-alt\"\n  }, [_c('h2', {\n    staticClass: \"title\"\n  }, [_vm._v(\"Título do card\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"card-body card-padding\"\n  }, [_c('p', [_vm._v(\"\\n                Some content to card\\n            \")])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Form\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"form-group\"\n  }, [_c('input', {\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"Qualquer valor\"\n    }\n  })])])\n}]}\n\n/***/ }),\n\n/***/ 541:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"first-container\"\n  }, [_c('main-header', {\n    attrs: {\n      \"title\": 'home',\n      \"type\": 'main',\n      \"cursor\": false\n    }\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"appear\": \"\",\n      \"mode\": \"in-out\",\n      \"enter-active-class\": \"animated fadeIn\",\n      \"leave-active-class\": \"animated fadeOut\"\n    }\n  }, [_c('div', {\n    staticClass: \"main\"\n  }, [_c('div', {\n    staticClass: \"container\"\n  }, [_c('h1', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.places.length),\n      expression: \"!places.length\"\n    }],\n    staticClass: \"text-center m-b-30\"\n  }, [_vm._v(\"\\n                    \" + _vm._s(_vm.translations.end_list) + \"\\n                \")]), _vm._v(\" \"), (_vm.places.length) ? _c('div', {\n    staticClass: \"cards\"\n  }, [_c('div', {\n    ref: \"cardAnimated\",\n    staticClass: \"card m-0\",\n    attrs: {\n      \"id\": \"card-animated\"\n    }\n  }, [_c('div', {\n    staticClass: \"card-header cover\",\n    style: ({\n      backgroundImage: (\"url(\" + (_vm.places[0].avatar) + \")\")\n    })\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.up),\n      expression: \"interactions.up\"\n    }],\n    staticClass: \"card-action up\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.up) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.down),\n      expression: \"interactions.down\"\n    }],\n    staticClass: \"card-action down\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.down) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.skip),\n      expression: \"interactions.skip\"\n    }],\n    staticClass: \"card-action skip\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.skip) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.favorite),\n      expression: \"interactions.favorite\"\n    }],\n    staticClass: \"card-action save\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.favorite) + \"\\n                            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ch-content\"\n  }, [_c('h3', {\n    staticClass: \"title f-700 t-overflow\"\n  }, [_vm._v(_vm._s(_vm.places[0].name))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-bottom\": \"0px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-ios-location m-r-5\"\n  }), _vm._v(\" \" + _vm._s(_vm.places[0].city) + \" - \" + _vm._s(_vm.places[0].state))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-top\": \"0px\",\n      \"margin-bottom\": \"-5px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-android-calendar m-r-5\"\n  }), _vm._v(\"\\n                                    \" + _vm._s(_vm.places[0].best_day) + \"\\n                                \")])]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"icon-information ion-ios-information\",\n    attrs: {\n      \"tag\": \"span\",\n      \"to\": {\n        name: 'general.places.show',\n        params: {\n          place_slug: _vm.places[0].slug\n        }\n      }\n    }\n  })], 1)]), _vm._v(\" \"), (_vm.places.length > 1) ? _c('div', {\n    staticClass: \"card m-0\"\n  }, [_c('div', {\n    staticClass: \"card-header cover\",\n    style: ({\n      backgroundImage: (\"url(\" + (_vm.places[1].avatar) + \")\")\n    })\n  }, [_c('div', {\n    staticClass: \"ch-content\"\n  }, [_c('h3', {\n    staticClass: \"title f-700 t-overflow\"\n  }, [_vm._v(_vm._s(_vm.places[1].name))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-bottom\": \"0px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-ios-location m-r-5\"\n  }), _vm._v(\" \" + _vm._s(_vm.places[1].city) + \" - \" + _vm._s(_vm.places[1].state))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-top\": \"0px\",\n      \"margin-bottom\": \"-5px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-android-calendar m-r-5\"\n  }), _vm._v(\"\\n                                    \" + _vm._s(_vm.places[1].best_day) + \"\\n                                \")])]), _vm._v(\" \"), _c('span', {\n    staticClass: \"icon-information ion-ios-information\"\n  })])]) : _vm._e()]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-sm-12\"\n  }, [_c('div', {\n    staticClass: \"actions\"\n  }, [(!_vm.places.length) ? _c('div', [_c('span', {\n    staticClass: \"action\",\n    on: {\n      \"click\": function($event) {\n        _vm.getPlaces()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-refresh f-default\"\n  })])]) : _vm._e(), _vm._v(\" \"), (_vm.places.length) ? _c('div', [_c('span', {\n    staticClass: \"action skip\",\n    on: {\n      \"click\": function($event) {\n        _vm.skip()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-ios-rewind f-default\"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action xl down\",\n    on: {\n      \"click\": function($event) {\n        _vm.goDown()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-chevron-down f-red \"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action xl up\",\n    on: {\n      \"click\": function($event) {\n        _vm.goUp()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-chevron-up f-green\"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action favorite\",\n    on: {\n      \"click\": function($event) {\n        _vm.favorite()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-ios-star f-primary\"\n  })])]) : _vm._e()])])])])])])], 1)\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.c71b71b34a2076d55f72.js","\n/* styles */\nrequire(\"!!../../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1484b8b2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./show.vue\")\n\nvar Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./show.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1484b8b2\\\"}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./show.vue\"),\n  /* scopeId */\n  \"data-v-1484b8b2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/general/explorer/components/show.vue\n// module id = 244\n// module chunks = 1","import Comments from './Comments'\n\nexport function cleanPlaceModel() {\n\treturn {\n        id: '',\n        google_placeId: '',\n        name: '',\n        slug: '',\n        avatar: '',\n        description: '',\n        best_day_is_weekly: false,\n        best_day: '',\n        is_owner: true,\n        category: {\n            name_en: '',\n            name_pt: '',\n            subcategories: [\n\n            ]\n        },\n        style: '',\n        phone: '',\n        website: '',\n        ranking: 0,\n\n        // Address\n        city: '',\n        state: '',\n        address: '',\n        lat: 0,\n        lng: 0,\n\n        // Photos\n        photos: [\n        ],\n\n        // Comments\n        comments: [\n        ]\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Place.js","<template lang=\"html\">\n    <div class=\"\">\n        <h1 class=\"title m-b-30\">Buttons</h1>\n\n        <button type=\"button\" class=\"btn btn-block btn-default\">Default</button>\n        <button type=\"button\" class=\"btn btn-block btn-primary\">Primary</button>\n        <button type=\"button\" class=\"btn btn-block btn-success\">Success</button>\n        <button type=\"button\" class=\"btn btn-block btn-info\">Info</button>\n        <button type=\"button\" class=\"btn btn-block btn-danger\">Danger</button>\n\n        <hr>\n\n        <h1 class=\"title m-b-30\">Card</h1>\n\n        <div class=\"card\">\n            <div class=\"card-header ch-alt\">\n                <h2 class=\"title\">Título do card</h2>\n            </div>\n            <div class=\"card-body card-padding\">\n                <p>\n                    Some content to card\n                </p>\n            </div>\n        </div>\n\n        <hr>\n\n        <h1 class=\"title m-b-30\">Form</h1>\n\n        <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Qualquer valor\">\n        </div>\n\n    </div>\n</template>\n\n<script>\n\n    export default {\n        name: 'ui-element',\n\n        components: {\n        },\n\n        data () {\n            return {\n            }\n        },\n\n        computed: {\n\n        },\n\n        mounted(){\n        },\n\n        methods: {\n\n        }\n    }\n</script>\n\n<style scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// elements.vue?f7cc7f9e","<template>\n\n    <div class=\"first-container\">\n\n        <main-header\n            :title=\"'home'\"\n            :type=\"'main'\"\n            :cursor=\"false\"\n        ></main-header>\n\n        <transition appear mode=\"in-out\" enter-active-class=\"animated fadeIn\" leave-active-class=\"animated fadeOut\">\n            <div class=\"main\">\n                <div class=\"container\">\n                    <h1 class=\"text-center m-b-30\" v-show=\"!places.length\">\n                        {{ translations.end_list }}\n                    </h1>\n\n                    <!-- Cards -->\n                    <div class=\"cards\" v-if=\"places.length\">\n\n                        <!-- FIRST PLACE -->\n                        <div id=\"card-animated\" class=\"card m-0\" ref=\"cardAnimated\">\n                            <!-- Card Header -->\n                            <div class=\"card-header cover\" :style=\"{ backgroundImage: `url(${ places[0].avatar })` }\">\n                                <!-- Current Action -->\n                                <span class=\"card-action up\" v-show=\"interactions.up\">\n                                    {{ translations.up }}\n                                </span>\n                                <span class=\"card-action down\" v-show=\"interactions.down\">\n                                    {{ translations.down }}\n                                </span>\n                                <span class=\"card-action skip\" v-show=\"interactions.skip\">\n                                    {{ translations.skip }}\n                                </span>\n                                <span class=\"card-action save\" v-show=\"interactions.favorite\">\n                                    {{ translations.favorite }}\n                                </span>\n                                <!-- / Current Action -->\n\n                                <div class=\"ch-content\">\n                                    <h3 class=\"title f-700 t-overflow\">{{ places[0].name }}</h3>\n                                    <p class=\"title f-700 t-overflow\" style=\"margin-bottom: 0px;\"><i class=\"ion-ios-location m-r-5\"></i> {{ places[0].city }} - {{places[0].state}}</p>\n                                    <p class=\"title f-700 t-overflow\" style=\"margin-top: 0px; margin-bottom: -5px;\"><i class=\"ion-android-calendar m-r-5\"></i>\n                                        {{ places[0].best_day }}\n                                    </p>\n                                </div>\n\n                                <router-link\n                                    tag=\"span\"\n                                    class=\"icon-information ion-ios-information\"\n                                    :to=\"{ name: 'general.places.show', params: { place_slug: places[0].slug } }\"\n                                >\n                                </router-link>\n\n                            </div>\n                            <!-- / Card Header -->\n                        </div>\n                        <!-- / FIRST PLACE -->\n\n                        <!-- SECOND PLACE -->\n                        <div class=\"card m-0\" v-if=\"places.length > 1\">\n                            <!-- Card Header -->\n                            <div class=\"card-header cover\" :style=\"{ backgroundImage: `url(${ places[1].avatar })` }\">\n                                <div class=\"ch-content\">\n                                    <h3 class=\"title f-700 t-overflow\">{{ places[1].name }}</h3>\n                                    <p class=\"title f-700 t-overflow\" style=\"margin-bottom: 0px;\"><i class=\"ion-ios-location m-r-5\"></i> {{ places[1].city }} - {{places[1].state}}</p>\n                                    <p class=\"title f-700 t-overflow\" style=\"margin-top: 0px; margin-bottom: -5px;\"><i class=\"ion-android-calendar m-r-5\"></i>\n                                        {{ places[1].best_day }}\n                                    </p>\n                                </div>\n                                <span class=\"icon-information ion-ios-information\">\n                                </span>\n                            </div>\n                            <!-- / Card Header -->\n                        </div>\n                        <!-- SECOND PLACE -->\n\n                    </div>\n                    <!-- Cards -->\n\n                    <!-- Actions -->\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"actions\">\n                                <div v-if=\"!places.length\">\n                                    <span class=\"action\" @click=\"getPlaces()\">\n                                        <span class=\"ion-refresh f-default\"></span>\n                                    </span>\n                                </div>\n                                <div v-if=\"places.length\">\n                                    <span class=\"action skip\" @click=\"skip()\">\n                                        <span class=\"ion-ios-rewind f-default\"></span>\n                                    </span>\n\n                                    <span class=\"action xl down\"  @click=\"goDown()\">\n                                        <span class=\"ion-chevron-down f-red \"></span>\n                                    </span>\n\n                                    <span class=\"action xl up\" @click=\"goUp()\">\n                                        <span class=\"ion-chevron-up f-green\"></span>\n                                    </span>\n\n                                    <span class=\"action favorite\" @click=\"favorite()\">\n                                        <span class=\"ion-ios-star f-primary\"></span>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- / Actions -->\n\n                </div>\n            </div>\n        </transition>\n\n    </div>\n\n</template>\n\n<script>\n    import Hammer from 'hammerjs'\n    import { transition } from 'jquery.transit'\n    import { mapGetters } from 'vuex'\n\n    import mainHeader from '@/components/main-header.vue'\n    import elements from '@/components/elements.vue'\n    import { cleanPlaceModel } from '@/models/Place'\n\n    import * as translations from '@/translations/pages/index'\n\n    export default {\n        name: 'landing',\n\n        components: {\n            mainHeader,\n            elements,\n        },\n\n        data () {\n            return {\n                interactions: {\n                    up: false,\n                    down: false,\n                    skip: false,\n                    favorite: false\n                },\n                starting: true,\n                placeholder: true,\n                places: [],\n                active: false,\n                top: 0,\n                left: 0\n            }\n        },\n\n        computed: {\n\n            ...mapGetters(['checkLanguage']),\n\n            'translations': function() {\n                const language = localStorage.getItem('language')\n\n                if (language === 'en' || !language) {\n                    return translations.en\n                }\n                if (language === 'pt') {\n                    return translations.pt\n                }\n            }\n        },\n\n        mounted(){\n            this.getPlaces()\n        },\n\n\n        methods: {\n\n            mountHammer() {\n                let that = this\n\n                if (that.hammerCards) {\n                    that.hammerCards = false\n                }\n\n                if (this.places.length) {\n                    setTimeout(() => {\n                        that.hammerCards = new Hammer(that.$refs.cardAnimated)\n                        that.hammerCards.get('pan').set({ direction: Hammer.DIRECTION_ALL })\n                        that.hammerCards.on('panleft panright panup pandown tap press', function(ev) {\n                            that.animateCurrentCard(ev)\n                        })\n\n                        $('#card-animated').bind('touchend', function(ev) {\n                            that.touchend()\n                        })\n\n                    }, 200)\n                }\n            },\n\n            touchend(top) {\n                let that = this\n                // Não passou da distancia minima para nenhum lado. Volta a posição inicial\n                if (that.top > -75 && that.top < 75 && that.left > -75 && that.left < 75) {\n                    $('#card-animated').transition({ x: 0, y: 0 }, 300)\n                } else {\n                    // UP\n                    if (that.top < -75) {\n                        $('#card-animated').transition({ y: -200, opacity: 0 }, 300, () => that.resetPosition())\n                    }\n                    // DOWN\n                    if (that.top > 75) {\n                        $('#card-animated').transition({ y: 200, opacity: 0 }, 300, () => that.resetPosition())\n                    }\n                    // Skip\n                    if (that.left > 75) {\n                        $('#card-animated').transition({ x: 300, opacity: 0 }, 300, () => that.resetPosition())\n                    }\n                    // Favorite\n                    if (that.left < -75) {\n                        $('#card-animated').transition({ x: -300, opacity: 0 }, 300, () => that.resetPosition())\n                    }\n                }\n            },\n\n            resetPosition() {\n                // Reset Global Top And Left\n                this.top = 0\n                this.left = 0\n\n                // Reset Interactions\n                this.interactions.up = false\n                this.interactions.down = false\n                this.interactions.skip = false\n                this.interactions.favorite = false\n\n                // Remove From Array\n                this.places.splice(0, 1)\n                $(this.$refs.cardAnimated).transition({ x: 0, y: 0, opacity: 1 }, 0)\n\n                // Update localStorage\n                localStorage.removeItem('places')\n                localStorage.setItem('places', JSON.stringify(this.places))\n            },\n\n            animateCurrentCard(e) {\n\n                let that = this\n\n                if (!e.isFinal) {\n                    const top = e.deltaY\n                    const left = e.deltaX\n\n                    that.top = top\n                    that.left = left\n\n                    $('#card-animated').transition({ x: left, y: top }, 0)\n\n                    if (top > -75 && top < 75 && left > -75 && left < 75) {\n                        // Do nothing just reset position\n                        that.interactions.up = false\n                        that.interactions.down = false\n                        that.interactions.favorite = false\n                        that.interactions.skip = false\n                    } else {\n                        // UP\n                        if (top < -75) {\n                            that.interactions.up = true\n                            that.interactions.down = false\n                            that.interactions.favorite = false\n                            that.interactions.skip = false\n                            return\n                        }\n                        // DOWN\n                        if(top > 75) {\n                            that.interactions.up = false\n                            that.interactions.down = true\n                            that.interactions.favorite = false\n                            that.interactions.skip = false\n                            return\n                        }\n                        // FAVORITE\n                        if (left > 75 && (top > -75 && top < 75)) {\n                            that.interactions.up = false\n                            that.interactions.down = false\n                            that.interactions.favorite = true\n                            that.interactions.skip = false\n                            return\n                        }\n                        // SKIP\n                        if (left < -75 && (top > -75 && top < 75)) {\n                            that.interactions.up = false\n                            that.interactions.down = false\n                            that.interactions.favorite = false\n                            that.interactions.skip = true\n                            return\n                        }\n                    }\n                }\n            },\n\n            // Button Action UP\n            goUp() {\n                this.interactions.up = true\n\n                $('#card-animated').transition({ x: 0, y: -100, opacity: 0 }, 1000, () => this.resetPosition())\n            },\n            // Button Action DOWN\n            goDown() {\n                this.interactions.down = true\n                $('#card-animated').transition({ x: 0, y: 100, opacity: 0 }, 1000, () => this.resetPosition())\n            },\n            // Button Action FAVORITE\n            favorite() {\n                this.interactions.favorite = true\n                $('#card-animated').transition({ x: 100, y: 0, opacity: 0 }, 1000, () => this.resetPosition())\n            },\n            // Button Action SKIP\n            skip() {\n                this.interactions.skip = true\n                $('#card-animated').transition({ x: -100, y: 0, opacity: 0 }, 1000, () => this.resetPosition())\n            },\n\n            getPlaces() {\n                let that = this\n\n                if (that.starting) {\n\n                    that.starting = false\n\n                    if (localStorage.getItem('places')) {\n                        that.places = JSON.parse(localStorage.getItem('places'))\n                    } else {\n                        that.places = [ cleanPlaceModel(), cleanPlaceModel(), cleanPlaceModel() ]\n                        localStorage.setItem('places', JSON.stringify(this.places))\n                    }\n\n                } else {\n                    that.places = [ cleanPlaceModel(), cleanPlaceModel(), cleanPlaceModel() ]\n                    localStorage.removeItem('places')\n                    localStorage.setItem('places', JSON.stringify(that.places))\n                }\n\n                that.places.forEach((place) => {\n                    place.photos = _.orderBy(place.photos, ['is_cover'], ['desc'])\n                })\n\n                this.mountHammer()\n\n                console.log(that.places);\n\n\n            },\n        }\n    }\n</script>\n\n<style scoped>\n    .cards {\n        position: relative;\n        height: 388px;\n    }\n    .cards .card .card-header .card-header-container {\n        position: absolute;\n        top: 0; left: 0;\n        bottom: 0; right: 0;\n        width: 100%; height: 100%;\n        z-index: 10;\n    }\n\n    @media (max-width: 360px) {\n        .cards{ height: 330px}\n    }\n\n    .card {\n        position: absolute;\n        width: 100%;\n        left: 0;\n    }\n\n    .card .card-header.cover { position: relative; }\n\n    .cards #card-animated{ z-index: 10; }\n\n    .fadeInLeft{\n        transition: 0.1s;\n    }\n\n    .icon-information {\n        position: absolute;\n        top: 0px;\n        right: 10px;\n        font-size: 30px;\n        color: #fff;\n        z-index: 7;\n    }\n\n    .card .card-header .ch-content {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        text-align: left;\n        padding: 10px;\n        color: #fff !important;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// show.vue?36d049e5","export const en = {\n    end_list: 'Has no companies in nearby',\n    up: 'Go Up',\n    down: 'Go Down',\n    skip: 'Skip',\n    favorite: 'Save',\n    filter: 'Filter'\n}\n\nexport const pt = {\n    end_list: 'Não tem empresas nas proximidades',\n    up: 'Go Up',\n    down: 'Go Down',\n    skip: 'Pular',\n    favorite: 'Salvar',\n    filter: 'Filtro'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/translations/pages/index.js","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"elements.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-04381e03\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/elements.vue\n// module id = 510\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".cards[data-v-1484b8b2]{position:relative;height:388px}.cards .card .card-header .card-header-container[data-v-1484b8b2]{position:absolute;top:0;left:0;bottom:0;right:0;width:100%;height:100%;z-index:10}@media (max-width:360px){.cards[data-v-1484b8b2]{height:330px}}.card[data-v-1484b8b2]{position:absolute;width:100%;left:0}.card .card-header.cover[data-v-1484b8b2]{position:relative}.cards #card-animated[data-v-1484b8b2]{z-index:10}.fadeInLeft[data-v-1484b8b2]{transition:.1s}.icon-information[data-v-1484b8b2]{position:absolute;top:0;right:10px;font-size:30px;color:#fff;z-index:7}.card .card-header .ch-content[data-v-1484b8b2]{position:absolute;bottom:0;left:0;width:100%;text-align:left;padding:10px;color:#fff!important}\", \"\", {\"version\":3,\"sources\":[\"/Users/igortrindade/Code/goup-front/src/modules/general/explorer/components/show.vue\"],\"names\":[],\"mappings\":\"AACA,wBACI,kBAAmB,AACnB,YAAc,CACjB,AACD,kEACI,kBAAmB,AACnB,MAAO,AAAC,OAAQ,AAChB,SAAU,AAAC,QAAS,AACpB,WAAY,AAAC,YAAa,AAC1B,UAAY,CACf,AACD,yBACA,wBAAyB,YAAa,CACrC,CACA,AACD,uBACI,kBAAmB,AACnB,WAAY,AACZ,MAAQ,CACX,AACD,0CAA4C,iBAAmB,CAC9D,AACD,uCAAwC,UAAY,CACnD,AACD,6BACI,cAAiB,CACpB,AACD,mCACI,kBAAmB,AACnB,MAAS,AACT,WAAY,AACZ,eAAgB,AAChB,WAAY,AACZ,SAAW,CACd,AACD,gDACI,kBAAmB,AACnB,SAAU,AACV,OAAQ,AACR,WAAY,AACZ,gBAAiB,AACjB,aAAc,AACd,oBAAuB,CAC1B\",\"file\":\"show.vue\",\"sourcesContent\":[\"\\n.cards[data-v-1484b8b2] {\\n    position: relative;\\n    height: 388px;\\n}\\n.cards .card .card-header .card-header-container[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0; left: 0;\\n    bottom: 0; right: 0;\\n    width: 100%; height: 100%;\\n    z-index: 10;\\n}\\n@media (max-width: 360px) {\\n.cards[data-v-1484b8b2]{ height: 330px\\n}\\n}\\n.card[data-v-1484b8b2] {\\n    position: absolute;\\n    width: 100%;\\n    left: 0;\\n}\\n.card .card-header.cover[data-v-1484b8b2] { position: relative;\\n}\\n.cards #card-animated[data-v-1484b8b2]{ z-index: 10;\\n}\\n.fadeInLeft[data-v-1484b8b2]{\\n    transition: 0.1s;\\n}\\n.icon-information[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0px;\\n    right: 10px;\\n    font-size: 30px;\\n    color: #fff;\\n    z-index: 7;\\n}\\n.card .card-header .ch-content[data-v-1484b8b2] {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    text-align: left;\\n    padding: 10px;\\n    color: #fff !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-1484b8b2\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/modules/general/explorer/components/show.vue\n// module id = 511\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-04381e03\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./elements.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"981c6922\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-04381e03\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/elements.vue\n// module id = 522\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-1484b8b2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./show.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"7e1e4792\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-1484b8b2\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/modules/general/explorer/components/show.vue\n// module id = 523\n// module chunks = 1","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hammerjs/hammer.js\n// module id = 534\n// module chunks = 1","/*!\n * jQuery Transit - CSS3 transitions and transformations\n * (c) 2011-2014 Rico Sta. Cruz\n * MIT Licensed.\n *\n * http://ricostacruz.com/jquery.transit\n * http://github.com/rstacruz/jquery.transit\n */\n\n/* jshint expr: true */\n\n;(function (root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('jquery'));\n  } else {\n    factory(root.jQuery);\n  }\n\n}(this, function($) {\n\n  $.transit = {\n    version: \"0.9.12\",\n\n    // Map of $.css() keys to values for 'transitionProperty'.\n    // See https://developer.mozilla.org/en/CSS/CSS_transitions#Properties_that_can_be_animated\n    propertyMap: {\n      marginLeft    : 'margin',\n      marginRight   : 'margin',\n      marginBottom  : 'margin',\n      marginTop     : 'margin',\n      paddingLeft   : 'padding',\n      paddingRight  : 'padding',\n      paddingBottom : 'padding',\n      paddingTop    : 'padding'\n    },\n\n    // Will simply transition \"instantly\" if false\n    enabled: true,\n\n    // Set this to false if you don't want to use the transition end property.\n    useTransitionEnd: false\n  };\n\n  var div = document.createElement('div');\n  var support = {};\n\n  // Helper function to get the proper vendor property name.\n  // (`transition` => `WebkitTransition`)\n  function getVendorPropertyName(prop) {\n    // Handle unprefixed versions (FF16+, for example)\n    if (prop in div.style) return prop;\n\n    var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n    var prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (var i=0; i<prefixes.length; ++i) {\n      var vendorProp = prefixes[i] + prop_;\n      if (vendorProp in div.style) { return vendorProp; }\n    }\n  }\n\n  // Helper function to check if transform3D is supported.\n  // Should return true for Webkits and Firefox 10+.\n  function checkTransform3dSupport() {\n    div.style[support.transform] = '';\n    div.style[support.transform] = 'rotateY(90deg)';\n    return div.style[support.transform] !== '';\n  }\n\n  var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  // Check for the browser's transitions support.\n  support.transition      = getVendorPropertyName('transition');\n  support.transitionDelay = getVendorPropertyName('transitionDelay');\n  support.transform       = getVendorPropertyName('transform');\n  support.transformOrigin = getVendorPropertyName('transformOrigin');\n  support.filter          = getVendorPropertyName('Filter');\n  support.transform3d     = checkTransform3dSupport();\n\n  var eventNames = {\n    'transition':       'transitionend',\n    'MozTransition':    'transitionend',\n    'OTransition':      'oTransitionEnd',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'msTransition':     'MSTransitionEnd'\n  };\n\n  // Detect the 'transitionend' event needed.\n  var transitionEnd = support.transitionEnd = eventNames[support.transition] || null;\n\n  // Populate jQuery's `$.support` with the vendor prefixes we know.\n  // As per [jQuery's cssHooks documentation](http://api.jquery.com/jQuery.cssHooks/),\n  // we set $.support.transition to a string of the actual property name used.\n  for (var key in support) {\n    if (support.hasOwnProperty(key) && typeof $.support[key] === 'undefined') {\n      $.support[key] = support[key];\n    }\n  }\n\n  // Avoid memory leak in IE.\n  div = null;\n\n  // ## $.cssEase\n  // List of easing aliases that you can use with `$.fn.transition`.\n  $.cssEase = {\n    '_default':       'ease',\n    'in':             'ease-in',\n    'out':            'ease-out',\n    'in-out':         'ease-in-out',\n    'snap':           'cubic-bezier(0,1,.5,1)',\n    // Penner equations\n    'easeInCubic':    'cubic-bezier(.550,.055,.675,.190)',\n    'easeOutCubic':   'cubic-bezier(.215,.61,.355,1)',\n    'easeInOutCubic': 'cubic-bezier(.645,.045,.355,1)',\n    'easeInCirc':     'cubic-bezier(.6,.04,.98,.335)',\n    'easeOutCirc':    'cubic-bezier(.075,.82,.165,1)',\n    'easeInOutCirc':  'cubic-bezier(.785,.135,.15,.86)',\n    'easeInExpo':     'cubic-bezier(.95,.05,.795,.035)',\n    'easeOutExpo':    'cubic-bezier(.19,1,.22,1)',\n    'easeInOutExpo':  'cubic-bezier(1,0,0,1)',\n    'easeInQuad':     'cubic-bezier(.55,.085,.68,.53)',\n    'easeOutQuad':    'cubic-bezier(.25,.46,.45,.94)',\n    'easeInOutQuad':  'cubic-bezier(.455,.03,.515,.955)',\n    'easeInQuart':    'cubic-bezier(.895,.03,.685,.22)',\n    'easeOutQuart':   'cubic-bezier(.165,.84,.44,1)',\n    'easeInOutQuart': 'cubic-bezier(.77,0,.175,1)',\n    'easeInQuint':    'cubic-bezier(.755,.05,.855,.06)',\n    'easeOutQuint':   'cubic-bezier(.23,1,.32,1)',\n    'easeInOutQuint': 'cubic-bezier(.86,0,.07,1)',\n    'easeInSine':     'cubic-bezier(.47,0,.745,.715)',\n    'easeOutSine':    'cubic-bezier(.39,.575,.565,1)',\n    'easeInOutSine':  'cubic-bezier(.445,.05,.55,.95)',\n    'easeInBack':     'cubic-bezier(.6,-.28,.735,.045)',\n    'easeOutBack':    'cubic-bezier(.175, .885,.32,1.275)',\n    'easeInOutBack':  'cubic-bezier(.68,-.55,.265,1.55)'\n  };\n\n  // ## 'transform' CSS hook\n  // Allows you to use the `transform` property in CSS.\n  //\n  //     $(\"#hello\").css({ transform: \"rotate(90deg)\" });\n  //\n  //     $(\"#hello\").css('transform');\n  //     //=> { rotate: '90deg' }\n  //\n  $.cssHooks['transit:transform'] = {\n    // The getter returns a `Transform` object.\n    get: function(elem) {\n      return $(elem).data('transform') || new Transform();\n    },\n\n    // The setter accepts a `Transform` object or a string.\n    set: function(elem, v) {\n      var value = v;\n\n      if (!(value instanceof Transform)) {\n        value = new Transform(value);\n      }\n\n      // We've seen the 3D version of Scale() not work in Chrome when the\n      // element being scaled extends outside of the viewport.  Thus, we're\n      // forcing Chrome to not use the 3d transforms as well.  Not sure if\n      // translate is affectede, but not risking it.  Detection code from\n      // http://davidwalsh.name/detecting-google-chrome-javascript\n      if (support.transform === 'WebkitTransform' && !isChrome) {\n        elem.style[support.transform] = value.toString(true);\n      } else {\n        elem.style[support.transform] = value.toString();\n      }\n\n      $(elem).data('transform', value);\n    }\n  };\n\n  // Add a CSS hook for `.css({ transform: '...' })`.\n  // In jQuery 1.8+, this will intentionally override the default `transform`\n  // CSS hook so it'll play well with Transit. (see issue #62)\n  $.cssHooks.transform = {\n    set: $.cssHooks['transit:transform'].set\n  };\n\n  // ## 'filter' CSS hook\n  // Allows you to use the `filter` property in CSS.\n  //\n  //     $(\"#hello\").css({ filter: 'blur(10px)' });\n  //\n  $.cssHooks.filter = {\n    get: function(elem) {\n      return elem.style[support.filter];\n    },\n    set: function(elem, value) {\n      elem.style[support.filter] = value;\n    }\n  };\n\n  // jQuery 1.8+ supports prefix-free transitions, so these polyfills will not\n  // be necessary.\n  if ($.fn.jquery < \"1.8\") {\n    // ## 'transformOrigin' CSS hook\n    // Allows the use for `transformOrigin` to define where scaling and rotation\n    // is pivoted.\n    //\n    //     $(\"#hello\").css({ transformOrigin: '0 0' });\n    //\n    $.cssHooks.transformOrigin = {\n      get: function(elem) {\n        return elem.style[support.transformOrigin];\n      },\n      set: function(elem, value) {\n        elem.style[support.transformOrigin] = value;\n      }\n    };\n\n    // ## 'transition' CSS hook\n    // Allows you to use the `transition` property in CSS.\n    //\n    //     $(\"#hello\").css({ transition: 'all 0 ease 0' });\n    //\n    $.cssHooks.transition = {\n      get: function(elem) {\n        return elem.style[support.transition];\n      },\n      set: function(elem, value) {\n        elem.style[support.transition] = value;\n      }\n    };\n  }\n\n  // ## Other CSS hooks\n  // Allows you to rotate, scale and translate.\n  registerCssHook('scale');\n  registerCssHook('scaleX');\n  registerCssHook('scaleY');\n  registerCssHook('translate');\n  registerCssHook('rotate');\n  registerCssHook('rotateX');\n  registerCssHook('rotateY');\n  registerCssHook('rotate3d');\n  registerCssHook('perspective');\n  registerCssHook('skewX');\n  registerCssHook('skewY');\n  registerCssHook('x', true);\n  registerCssHook('y', true);\n\n  // ## Transform class\n  // This is the main class of a transformation property that powers\n  // `$.fn.css({ transform: '...' })`.\n  //\n  // This is, in essence, a dictionary object with key/values as `-transform`\n  // properties.\n  //\n  //     var t = new Transform(\"rotate(90) scale(4)\");\n  //\n  //     t.rotate             //=> \"90deg\"\n  //     t.scale              //=> \"4,4\"\n  //\n  // Setters are accounted for.\n  //\n  //     t.set('rotate', 4)\n  //     t.rotate             //=> \"4deg\"\n  //\n  // Convert it to a CSS string using the `toString()` and `toString(true)` (for WebKit)\n  // functions.\n  //\n  //     t.toString()         //=> \"rotate(90deg) scale(4,4)\"\n  //     t.toString(true)     //=> \"rotate(90deg) scale3d(4,4,0)\" (WebKit version)\n  //\n  function Transform(str) {\n    if (typeof str === 'string') { this.parse(str); }\n    return this;\n  }\n\n  Transform.prototype = {\n    // ### setFromString()\n    // Sets a property from a string.\n    //\n    //     t.setFromString('scale', '2,4');\n    //     // Same as set('scale', '2', '4');\n    //\n    setFromString: function(prop, val) {\n      var args =\n        (typeof val === 'string')  ? val.split(',') :\n        (val.constructor === Array) ? val :\n        [ val ];\n\n      args.unshift(prop);\n\n      Transform.prototype.set.apply(this, args);\n    },\n\n    // ### set()\n    // Sets a property.\n    //\n    //     t.set('scale', 2, 4);\n    //\n    set: function(prop) {\n      var args = Array.prototype.slice.apply(arguments, [1]);\n      if (this.setter[prop]) {\n        this.setter[prop].apply(this, args);\n      } else {\n        this[prop] = args.join(',');\n      }\n    },\n\n    get: function(prop) {\n      if (this.getter[prop]) {\n        return this.getter[prop].apply(this);\n      } else {\n        return this[prop] || 0;\n      }\n    },\n\n    setter: {\n      // ### rotate\n      //\n      //     .css({ rotate: 30 })\n      //     .css({ rotate: \"30\" })\n      //     .css({ rotate: \"30deg\" })\n      //     .css({ rotate: \"30deg\" })\n      //\n      rotate: function(theta) {\n        this.rotate = unit(theta, 'deg');\n      },\n\n      rotateX: function(theta) {\n        this.rotateX = unit(theta, 'deg');\n      },\n\n      rotateY: function(theta) {\n        this.rotateY = unit(theta, 'deg');\n      },\n\n      // ### scale\n      //\n      //     .css({ scale: 9 })      //=> \"scale(9,9)\"\n      //     .css({ scale: '3,2' })  //=> \"scale(3,2)\"\n      //\n      scale: function(x, y) {\n        if (y === undefined) { y = x; }\n        this.scale = x + \",\" + y;\n      },\n\n      // ### skewX + skewY\n      skewX: function(x) {\n        this.skewX = unit(x, 'deg');\n      },\n\n      skewY: function(y) {\n        this.skewY = unit(y, 'deg');\n      },\n\n      // ### perspectvie\n      perspective: function(dist) {\n        this.perspective = unit(dist, 'px');\n      },\n\n      // ### x / y\n      // Translations. Notice how this keeps the other value.\n      //\n      //     .css({ x: 4 })       //=> \"translate(4px, 0)\"\n      //     .css({ y: 10 })      //=> \"translate(4px, 10px)\"\n      //\n      x: function(x) {\n        this.set('translate', x, null);\n      },\n\n      y: function(y) {\n        this.set('translate', null, y);\n      },\n\n      // ### translate\n      // Notice how this keeps the other value.\n      //\n      //     .css({ translate: '2, 5' })    //=> \"translate(2px, 5px)\"\n      //\n      translate: function(x, y) {\n        if (this._translateX === undefined) { this._translateX = 0; }\n        if (this._translateY === undefined) { this._translateY = 0; }\n\n        if (x !== null && x !== undefined) { this._translateX = unit(x, 'px'); }\n        if (y !== null && y !== undefined) { this._translateY = unit(y, 'px'); }\n\n        this.translate = this._translateX + \",\" + this._translateY;\n      }\n    },\n\n    getter: {\n      x: function() {\n        return this._translateX || 0;\n      },\n\n      y: function() {\n        return this._translateY || 0;\n      },\n\n      scale: function() {\n        var s = (this.scale || \"1,1\").split(',');\n        if (s[0]) { s[0] = parseFloat(s[0]); }\n        if (s[1]) { s[1] = parseFloat(s[1]); }\n\n        // \"2.5,2.5\" => 2.5\n        // \"2.5,1\" => [2.5,1]\n        return (s[0] === s[1]) ? s[0] : s;\n      },\n\n      rotate3d: function() {\n        var s = (this.rotate3d || \"0,0,0,0deg\").split(',');\n        for (var i=0; i<=3; ++i) {\n          if (s[i]) { s[i] = parseFloat(s[i]); }\n        }\n        if (s[3]) { s[3] = unit(s[3], 'deg'); }\n\n        return s;\n      }\n    },\n\n    // ### parse()\n    // Parses from a string. Called on constructor.\n    parse: function(str) {\n      var self = this;\n      str.replace(/([a-zA-Z0-9]+)\\((.*?)\\)/g, function(x, prop, val) {\n        self.setFromString(prop, val);\n      });\n    },\n\n    // ### toString()\n    // Converts to a `transition` CSS property string. If `use3d` is given,\n    // it converts to a `-webkit-transition` CSS property string instead.\n    toString: function(use3d) {\n      var re = [];\n\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          // Don't use 3D transformations if the browser can't support it.\n          if ((!support.transform3d) && (\n            (i === 'rotateX') ||\n            (i === 'rotateY') ||\n            (i === 'perspective') ||\n            (i === 'transformOrigin'))) { continue; }\n\n          if (i[0] !== '_') {\n            if (use3d && (i === 'scale')) {\n              re.push(i + \"3d(\" + this[i] + \",1)\");\n            } else if (use3d && (i === 'translate')) {\n              re.push(i + \"3d(\" + this[i] + \",0)\");\n            } else {\n              re.push(i + \"(\" + this[i] + \")\");\n            }\n          }\n        }\n      }\n\n      return re.join(\" \");\n    }\n  };\n\n  function callOrQueue(self, queue, fn) {\n    if (queue === true) {\n      self.queue(fn);\n    } else if (queue) {\n      self.queue(queue, fn);\n    } else {\n      self.each(function () {\n                fn.call(this);\n            });\n    }\n  }\n\n  // ### getProperties(dict)\n  // Returns properties (for `transition-property`) for dictionary `props`. The\n  // value of `props` is what you would expect in `$.css(...)`.\n  function getProperties(props) {\n    var re = [];\n\n    $.each(props, function(key) {\n      key = $.camelCase(key); // Convert \"text-align\" => \"textAlign\"\n      key = $.transit.propertyMap[key] || $.cssProps[key] || key;\n      key = uncamel(key); // Convert back to dasherized\n\n      // Get vendor specify propertie\n      if (support[key])\n        key = uncamel(support[key]);\n\n      if ($.inArray(key, re) === -1) { re.push(key); }\n    });\n\n    return re;\n  }\n\n  // ### getTransition()\n  // Returns the transition string to be used for the `transition` CSS property.\n  //\n  // Example:\n  //\n  //     getTransition({ opacity: 1, rotate: 30 }, 500, 'ease');\n  //     //=> 'opacity 500ms ease, -webkit-transform 500ms ease'\n  //\n  function getTransition(properties, duration, easing, delay) {\n    // Get the CSS properties needed.\n    var props = getProperties(properties);\n\n    // Account for aliases (`in` => `ease-in`).\n    if ($.cssEase[easing]) { easing = $.cssEase[easing]; }\n\n    // Build the duration/easing/delay attributes for it.\n    var attribs = '' + toMS(duration) + ' ' + easing;\n    if (parseInt(delay, 10) > 0) { attribs += ' ' + toMS(delay); }\n\n    // For more properties, add them this way:\n    // \"margin 200ms ease, padding 200ms ease, ...\"\n    var transitions = [];\n    $.each(props, function(i, name) {\n      transitions.push(name + ' ' + attribs);\n    });\n\n    return transitions.join(', ');\n  }\n\n  // ## $.fn.transition\n  // Works like $.fn.animate(), but uses CSS transitions.\n  //\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 });\n  //\n  //     // Specific duration\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500);\n  //\n  //     // With duration and easing\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in');\n  //\n  //     // With callback\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, function() { ... });\n  //\n  //     // With everything\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in', function() { ... });\n  //\n  //     // Alternate syntax\n  //     $(\"...\").transition({\n  //       opacity: 0.1,\n  //       duration: 200,\n  //       delay: 40,\n  //       easing: 'in',\n  //       complete: function() { /* ... */ }\n  //      });\n  //\n  $.fn.transition = $.fn.transit = function(properties, duration, easing, callback) {\n    var self  = this;\n    var delay = 0;\n    var queue = true;\n\n    var theseProperties = $.extend(true, {}, properties);\n\n    // Account for `.transition(properties, callback)`.\n    if (typeof duration === 'function') {\n      callback = duration;\n      duration = undefined;\n    }\n\n    // Account for `.transition(properties, options)`.\n    if (typeof duration === 'object') {\n      easing = duration.easing;\n      delay = duration.delay || 0;\n      queue = typeof duration.queue === \"undefined\" ? true : duration.queue;\n      callback = duration.complete;\n      duration = duration.duration;\n    }\n\n    // Account for `.transition(properties, duration, callback)`.\n    if (typeof easing === 'function') {\n      callback = easing;\n      easing = undefined;\n    }\n\n    // Alternate syntax.\n    if (typeof theseProperties.easing !== 'undefined') {\n      easing = theseProperties.easing;\n      delete theseProperties.easing;\n    }\n\n    if (typeof theseProperties.duration !== 'undefined') {\n      duration = theseProperties.duration;\n      delete theseProperties.duration;\n    }\n\n    if (typeof theseProperties.complete !== 'undefined') {\n      callback = theseProperties.complete;\n      delete theseProperties.complete;\n    }\n\n    if (typeof theseProperties.queue !== 'undefined') {\n      queue = theseProperties.queue;\n      delete theseProperties.queue;\n    }\n\n    if (typeof theseProperties.delay !== 'undefined') {\n      delay = theseProperties.delay;\n      delete theseProperties.delay;\n    }\n\n    // Set defaults. (`400` duration, `ease` easing)\n    if (typeof duration === 'undefined') { duration = $.fx.speeds._default; }\n    if (typeof easing === 'undefined')   { easing = $.cssEase._default; }\n\n    duration = toMS(duration);\n\n    // Build the `transition` property.\n    var transitionValue = getTransition(theseProperties, duration, easing, delay);\n\n    // Compute delay until callback.\n    // If this becomes 0, don't bother setting the transition property.\n    var work = $.transit.enabled && support.transition;\n    var i = work ? (parseInt(duration, 10) + parseInt(delay, 10)) : 0;\n\n    // If there's nothing to do...\n    if (i === 0) {\n      var fn = function(next) {\n        self.css(theseProperties);\n        if (callback) { callback.apply(self); }\n        if (next) { next(); }\n      };\n\n      callOrQueue(self, queue, fn);\n      return self;\n    }\n\n    // Save the old transitions of each element so we can restore it later.\n    var oldTransitions = {};\n\n    var run = function(nextCall) {\n      var bound = false;\n\n      // Prepare the callback.\n      var cb = function() {\n        if (bound) { self.unbind(transitionEnd, cb); }\n\n        if (i > 0) {\n          self.each(function() {\n            this.style[support.transition] = (oldTransitions[this] || null);\n          });\n        }\n\n        if (typeof callback === 'function') { callback.apply(self); }\n        if (typeof nextCall === 'function') { nextCall(); }\n      };\n\n      if ((i > 0) && (transitionEnd) && ($.transit.useTransitionEnd)) {\n        // Use the 'transitionend' event if it's available.\n        bound = true;\n        self.bind(transitionEnd, cb);\n      } else {\n        // Fallback to timers if the 'transitionend' event isn't supported.\n        window.setTimeout(cb, i);\n      }\n\n      // Apply transitions.\n      self.each(function() {\n        if (i > 0) {\n          this.style[support.transition] = transitionValue;\n        }\n        $(this).css(theseProperties);\n      });\n    };\n\n    // Defer running. This allows the browser to paint any pending CSS it hasn't\n    // painted yet before doing the transitions.\n    var deferredRun = function(next) {\n        this.offsetWidth; // force a repaint\n        run(next);\n    };\n\n    // Use jQuery's fx queue.\n    callOrQueue(self, queue, deferredRun);\n\n    // Chainability.\n    return this;\n  };\n\n  function registerCssHook(prop, isPixels) {\n    // For certain properties, the 'px' should not be implied.\n    if (!isPixels) { $.cssNumber[prop] = true; }\n\n    $.transit.propertyMap[prop] = support.transform;\n\n    $.cssHooks[prop] = {\n      get: function(elem) {\n        var t = $(elem).css('transit:transform');\n        return t.get(prop);\n      },\n\n      set: function(elem, value) {\n        var t = $(elem).css('transit:transform');\n        t.setFromString(prop, value);\n\n        $(elem).css({ 'transit:transform': t });\n      }\n    };\n\n  }\n\n  // ### uncamel(str)\n  // Converts a camelcase string to a dasherized string.\n  // (`marginLeft` => `margin-left`)\n  function uncamel(str) {\n    return str.replace(/([A-Z])/g, function(letter) { return '-' + letter.toLowerCase(); });\n  }\n\n  // ### unit(number, unit)\n  // Ensures that number `number` has a unit. If no unit is found, assume the\n  // default is `unit`.\n  //\n  //     unit(2, 'px')          //=> \"2px\"\n  //     unit(\"30deg\", 'rad')   //=> \"30deg\"\n  //\n  function unit(i, units) {\n    if ((typeof i === \"string\") && (!i.match(/^[\\-0-9\\.]+$/))) {\n      return i;\n    } else {\n      return \"\" + i + units;\n    }\n  }\n\n  // ### toMS(duration)\n  // Converts given `duration` to a millisecond string.\n  //\n  // toMS('fast') => $.fx.speeds[i] => \"200ms\"\n  // toMS('normal') //=> $.fx.speeds._default => \"400ms\"\n  // toMS(10) //=> '10ms'\n  // toMS('100ms') //=> '100ms'  \n  //\n  function toMS(duration) {\n    var i = duration;\n\n    // Allow string durations like 'fast' and 'slow', without overriding numeric values.\n    if (typeof i === 'string' && (!i.match(/^[\\-0-9\\.]+/))) { i = $.fx.speeds[i] || $.fx.speeds._default; }\n\n    return unit(i, 'ms');\n  }\n\n  // Export some functions for testable-ness.\n  $.transit.getTransitionValue = getTransition;\n\n  return $;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jquery.transit/jquery.transit.js\n// module id = 535\n// module chunks = 1","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-04381e03\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./elements.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./elements.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-04381e03\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./elements.vue\"),\n  /* scopeId */\n  \"data-v-04381e03\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/elements.vue\n// module id = 536\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {}, [_c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Buttons\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-default\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Default\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-primary\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Primary\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-success\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Success\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-info\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Info\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-danger\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Danger\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Card\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"card\"\n  }, [_c('div', {\n    staticClass: \"card-header ch-alt\"\n  }, [_c('h2', {\n    staticClass: \"title\"\n  }, [_vm._v(\"Título do card\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"card-body card-padding\"\n  }, [_c('p', [_vm._v(\"\\n                Some content to card\\n            \")])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Form\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"form-group\"\n  }, [_c('input', {\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"Qualquer valor\"\n    }\n  })])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-04381e03\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/elements.vue\n// module id = 540\n// module chunks = 1","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"first-container\"\n  }, [_c('main-header', {\n    attrs: {\n      \"title\": 'home',\n      \"type\": 'main',\n      \"cursor\": false\n    }\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"appear\": \"\",\n      \"mode\": \"in-out\",\n      \"enter-active-class\": \"animated fadeIn\",\n      \"leave-active-class\": \"animated fadeOut\"\n    }\n  }, [_c('div', {\n    staticClass: \"main\"\n  }, [_c('div', {\n    staticClass: \"container\"\n  }, [_c('h1', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.places.length),\n      expression: \"!places.length\"\n    }],\n    staticClass: \"text-center m-b-30\"\n  }, [_vm._v(\"\\n                    \" + _vm._s(_vm.translations.end_list) + \"\\n                \")]), _vm._v(\" \"), (_vm.places.length) ? _c('div', {\n    staticClass: \"cards\"\n  }, [_c('div', {\n    ref: \"cardAnimated\",\n    staticClass: \"card m-0\",\n    attrs: {\n      \"id\": \"card-animated\"\n    }\n  }, [_c('div', {\n    staticClass: \"card-header cover\",\n    style: ({\n      backgroundImage: (\"url(\" + (_vm.places[0].avatar) + \")\")\n    })\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.up),\n      expression: \"interactions.up\"\n    }],\n    staticClass: \"card-action up\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.up) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.down),\n      expression: \"interactions.down\"\n    }],\n    staticClass: \"card-action down\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.down) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.skip),\n      expression: \"interactions.skip\"\n    }],\n    staticClass: \"card-action skip\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.skip) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.favorite),\n      expression: \"interactions.favorite\"\n    }],\n    staticClass: \"card-action save\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.favorite) + \"\\n                            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ch-content\"\n  }, [_c('h3', {\n    staticClass: \"title f-700 t-overflow\"\n  }, [_vm._v(_vm._s(_vm.places[0].name))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-bottom\": \"0px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-ios-location m-r-5\"\n  }), _vm._v(\" \" + _vm._s(_vm.places[0].city) + \" - \" + _vm._s(_vm.places[0].state))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-top\": \"0px\",\n      \"margin-bottom\": \"-5px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-android-calendar m-r-5\"\n  }), _vm._v(\"\\n                                    \" + _vm._s(_vm.places[0].best_day) + \"\\n                                \")])]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"icon-information ion-ios-information\",\n    attrs: {\n      \"tag\": \"span\",\n      \"to\": {\n        name: 'general.places.show',\n        params: {\n          place_slug: _vm.places[0].slug\n        }\n      }\n    }\n  })], 1)]), _vm._v(\" \"), (_vm.places.length > 1) ? _c('div', {\n    staticClass: \"card m-0\"\n  }, [_c('div', {\n    staticClass: \"card-header cover\",\n    style: ({\n      backgroundImage: (\"url(\" + (_vm.places[1].avatar) + \")\")\n    })\n  }, [_c('div', {\n    staticClass: \"ch-content\"\n  }, [_c('h3', {\n    staticClass: \"title f-700 t-overflow\"\n  }, [_vm._v(_vm._s(_vm.places[1].name))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-bottom\": \"0px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-ios-location m-r-5\"\n  }), _vm._v(\" \" + _vm._s(_vm.places[1].city) + \" - \" + _vm._s(_vm.places[1].state))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-top\": \"0px\",\n      \"margin-bottom\": \"-5px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-android-calendar m-r-5\"\n  }), _vm._v(\"\\n                                    \" + _vm._s(_vm.places[1].best_day) + \"\\n                                \")])]), _vm._v(\" \"), _c('span', {\n    staticClass: \"icon-information ion-ios-information\"\n  })])]) : _vm._e()]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-sm-12\"\n  }, [_c('div', {\n    staticClass: \"actions\"\n  }, [(!_vm.places.length) ? _c('div', [_c('span', {\n    staticClass: \"action\",\n    on: {\n      \"click\": function($event) {\n        _vm.getPlaces()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-refresh f-default\"\n  })])]) : _vm._e(), _vm._v(\" \"), (_vm.places.length) ? _c('div', [_c('span', {\n    staticClass: \"action skip\",\n    on: {\n      \"click\": function($event) {\n        _vm.skip()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-ios-rewind f-default\"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action xl down\",\n    on: {\n      \"click\": function($event) {\n        _vm.goDown()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-chevron-down f-red \"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action xl up\",\n    on: {\n      \"click\": function($event) {\n        _vm.goUp()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-chevron-up f-green\"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action favorite\",\n    on: {\n      \"click\": function($event) {\n        _vm.favorite()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-ios-star f-primary\"\n  })])]) : _vm._e()])])])])])])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-1484b8b2\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/modules/general/explorer/components/show.vue\n// module id = 541\n// module chunks = 1"],"sourceRoot":""}