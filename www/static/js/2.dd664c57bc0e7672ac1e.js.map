{"version":3,"sources":["webpack:///static/js/2.dd664c57bc0e7672ac1e.js","webpack:///./src/modules/general/explorer/components/show.vue","webpack:///elements.vue","webpack:///show.vue?3f21","webpack:///./src/translations/pages/index.js","webpack:///./src/components/elements.vue?f15f","webpack:///./src/modules/general/explorer/components/show.vue?5a0a","webpack:///./src/components/elements.vue?703f","webpack:///./src/modules/general/explorer/components/show.vue?8e71","webpack:///./~/hammerjs/hammer.js","webpack:///./~/jquery.transit/jquery.transit.js","webpack:///./src/components/elements.vue","webpack:///./src/components/elements.vue?d3e7","webpack:///./src/modules/general/explorer/components/show.vue?065d"],"names":["webpackJsonp","332","module","exports","__webpack_require__","Component","667","__webpack_exports__","668","671","Object","defineProperty","value","name","components","data","computed","mounted","methods","685","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default","__WEBPACK_IMPORTED_MODULE_2_hammerjs__","__WEBPACK_IMPORTED_MODULE_2_hammerjs___default","__WEBPACK_IMPORTED_MODULE_3_jquery_transit__","__WEBPACK_IMPORTED_MODULE_4_vuex__","__WEBPACK_IMPORTED_MODULE_5__components_main_header_vue__","__WEBPACK_IMPORTED_MODULE_5__components_main_header_vue___default","__WEBPACK_IMPORTED_MODULE_6__components_elements_vue__","__WEBPACK_IMPORTED_MODULE_6__components_elements_vue___default","__WEBPACK_IMPORTED_MODULE_8__translations_pages_index__","__WEBPACK_IMPORTED_MODULE_9_moment__","__WEBPACK_IMPORTED_MODULE_9_moment___default","mainHeader","a","elements","interactions","up","down","skip","favorite","is_loading","starting","placeholder","events","active","top","left","currentLocation","lat","lng","city","state","newLocation","currentCity","cities","i","translations","this","language","that","window","cordova","locationRequest","last_location","localStorage","getItem","add","isAfter","getLocation","console","log","getLocationByCoordinates","JSON","parse","citiesSwiper","mountHammer","hammerCards","length","setTimeout","$refs","cardAnimated","get","set","direction","DIRECTION_ALL","on","ev","animateCurrentCard","$","bind","touchend","transition","x","y","opacity","resetPosition","interaction","_","cloneDeep","user_id","currentUser","id","event_id","handleInteraction","splice","e","isFinal","deltaY","deltaX","goUp","_this","goDown","_this2","_this3","_this4","checkToAsk","parseInt","now","unix","navigator","permissions","query","then","result","iziToast","show","icon","title","location","notification","message","position","image","imageWidth","color","backgroundColor","titleColor","messageColor","timeout","layout","buttons","notNow","instance","toast","hide","transitionOut","setItem","infoNotify","permissionDenied","getEvents","enable","removeItem","drag","setLoading","geolocation","getCurrentPosition","navigatorSuccess","navigatorError","errorNotify","notSupported","coords","latitude","longitude","unavailable","geolocationInit","onSuccess","clearWatch","watchID","onError","error","watchPosition","get_cities","arguments","undefined","geocoder","google","maps","Geocoder","latlng","LatLng","geocode","latLng","results","status","GeocoderStatus","OK","address_components","map","current","types","type","short_name","getNearByCities","handleDistance","distance","parseFloat","toFixed","$http","post","radius","response","catch","swiperTabs","Swiper","citiesSlider","spaceBetween","slidesPerView","initialSlide","loop","centeredSlides","slideToClickedSlide","prevButton","nextButton","onSlideChangeEnd","swiper","realIndex","breakpoints","350","480","768","city_id","current_city","isLogged","698","d","en","pt","end_list","filter","nearCities","noCity","makeLogin","goToLogin","label","success","change","cancel","702","push","version","sources","names","mappings","file","sourceRoot","705","sourcesContent","717","content","locals","720","732","__WEBPACK_AMD_DEFINE_RESULT__","document","exportName","setTimeoutContext","fn","context","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","forEach","call","hasOwnProperty","deprecate","method","deprecationMessage","Error","stack","replace","warn","apply","inherit","child","base","properties","childP","baseP","prototype","create","constructor","_super","assign","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","target","handler","splitStr","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","src","findByKey","toArray","slice","uniqueArray","key","sort","values","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","self","options","inputTarget","domHandler","init","createInputInstance","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","getDistance","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","abs","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","last","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","t","dx","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","item","recognizeWith","requireFailure","style","cssProps","triggerDomEvent","event","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","TypeError","output","index","source","nextKey","extend","dest","merge","keys","MOBILE_REGEX","test","userAgent","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","existing","remove","off","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","733","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","root","factory","getVendorPropertyName","div","prefixes","prop_","charAt","substr","vendorProp","Transform","callOrQueue","queue","getProperties","re","camelCase","transit","propertyMap","uncamel","support","getTransition","duration","easing","delay","cssEase","attribs","toMS","transitions","registerCssHook","isPixels","cssNumber","transform","cssHooks","elem","css","setFromString","transit:transform","letter","unit","units","match","fx","speeds","_default","marginLeft","marginRight","marginBottom","marginTop","paddingLeft","paddingRight","paddingBottom","paddingTop","enabled","useTransitionEnd","isChrome","transitionDelay","transformOrigin","transform3d","eventNames","MozTransition","OTransition","WebkitTransition","msTransition","transitionEnd","in","out","in-out","snap","easeInCubic","easeOutCubic","easeInOutCubic","easeInCirc","easeOutCirc","easeInOutCirc","easeInExpo","easeOutExpo","easeInOutExpo","easeInQuad","easeOutQuad","easeInOutQuad","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInBack","easeOutBack","easeInOutBack","toString","jquery","unshift","setter","getter","rotate","theta","rotateX","rotateY","skewX","skewY","perspective","dist","translate","_translateX","_translateY","s","rotate3d","use3d","theseProperties","complete","transitionValue","work","next","oldTransitions","run","nextCall","bound","cb","unbind","offsetWidth","getTransitionValue","734","739","render","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","742","cursor","appear","mode","enter-active-class","leave-active-class","_s","_e","ref","_l","$index","class","cursor-pointer","label-success","directives","rawName","expression","backgroundImage","staticStyle","margin-bottom","tag","to","params","event_slug","slug","favorited_count","click","$event"],"mappings":"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","file":"static/js/2.dd664c57bc0e7672ac1e.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 332:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(720)\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(685),\n  /* template */\n  __webpack_require__(742),\n  /* scopeId */\n  \"data-v-1484b8b2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 667:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony default export */ var _unused_webpack_default_export = ({\n    id: 'commentID01',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum gravida volutpat fringilla.',\n    from: {\n        last_name: 'Doe',\n        full_name: 'John Doe',\n        avatar: 'https://maisbartenders.com.br/img/portfolio/My_garden_Mais_Bartenders.png'\n    }\n});\n\n/***/ }),\n\n/***/ 668:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export cleanPlaceModel */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Comments__ = __webpack_require__(667);\n\n\nfunction cleanPlaceModel() {\n    return {\n        id: '',\n        google_placeId: '',\n        name: '',\n        slug: '',\n        avatar: '',\n        description: '',\n        best_day_is_weekly: false,\n        best_day: '',\n        is_owner: true,\n        category: {\n            name_en: '',\n            name_pt: '',\n            subcategories: []\n        },\n        style: '',\n        phone: '',\n        website: '',\n        ranking: 0,\n\n        city: '',\n        state: '',\n        address: '',\n        lat: 0,\n        lng: 0,\n\n        photos: [],\n\n        comments: []\n\n    };\n}\n\n/***/ }),\n\n/***/ 671:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    name: 'ui-element',\n\n    components: {},\n\n    data: function data() {\n        return {};\n    },\n\n\n    computed: {},\n\n    mounted: function mounted() {},\n\n\n    methods: {}\n});\n\n/***/ }),\n\n/***/ 685:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(79);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hammerjs__ = __webpack_require__(732);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_hammerjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_hammerjs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery_transit__ = __webpack_require__(733);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery_transit___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_jquery_transit__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_vuex__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_main_header_vue__ = __webpack_require__(42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_main_header_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5__components_main_header_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_elements_vue__ = __webpack_require__(734);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__components_elements_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__components_elements_vue__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__models_Place__ = __webpack_require__(668);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__translations_pages_index__ = __webpack_require__(698);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_moment__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__store_getters__ = __webpack_require__(322);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    name: 'landing',\n\n    components: {\n        mainHeader: __WEBPACK_IMPORTED_MODULE_5__components_main_header_vue___default.a,\n        elements: __WEBPACK_IMPORTED_MODULE_6__components_elements_vue___default.a\n    },\n\n    data: function data() {\n        return {\n            interactions: {\n                up: false,\n                down: false,\n                skip: false,\n                favorite: false,\n                is_loading: true\n            },\n            starting: true,\n            placeholder: true,\n            events: [],\n            active: false,\n            top: 0,\n            left: 0,\n            currentLocation: {\n                lat: -23.5505199,\n                lng: -46.63330940000003,\n                city: 'São Paulo',\n                state: 'SP',\n                newLocation: ''\n            },\n            currentCity: null,\n            cities: []\n        };\n    },\n\n\n    computed: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_vuex__[\"a\" /* mapGetters */])(['language', 'language', 'isLogged', 'currentUser']), {\n\n        'translations': function translations() {\n\n            if (this.language === 'en') {\n                return __WEBPACK_IMPORTED_MODULE_8__translations_pages_index__[\"a\" /* en */];\n            }\n            if (this.language === 'pt') {\n                return __WEBPACK_IMPORTED_MODULE_8__translations_pages_index__[\"b\" /* pt */];\n            }\n        }\n    }),\n\n    mounted: function mounted() {\n\n        var that = this;\n\n        if (!window.cordova) {\n            this.locationRequest();\n        }\n\n        var last_location = localStorage.getItem('last_location_getted');\n\n        if (window.cordova && __WEBPACK_IMPORTED_MODULE_9_moment___default()().add(1, 'days').isAfter(__WEBPACK_IMPORTED_MODULE_9_moment___default()('DD/MM/YYYY HH:mm:ss', last_location)) || window.cordova && !last_location) {\n            this.getLocation();\n        } else {\n\n            console.log('local_storage found');\n            that.currentLocation.lat = localStorage.getItem('user_lat');\n            that.currentLocation.lng = localStorage.getItem('user_lng');\n\n            that.getLocationByCoordinates(false);\n\n            that.cities = JSON.parse(localStorage.getItem('cities'));\n            that.citiesSwiper();\n        }\n    },\n\n\n    methods: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_vuex__[\"b\" /* mapActions */])(['setLoading']), {\n        mountHammer: function mountHammer() {\n            var that = this;\n\n            if (that.hammerCards) {\n                that.hammerCards = false;\n            }\n\n            if (this.events.length) {\n                setTimeout(function () {\n                    that.hammerCards = new __WEBPACK_IMPORTED_MODULE_2_hammerjs___default.a(that.$refs.cardAnimated);\n                    that.hammerCards.get('pan').set({ direction: __WEBPACK_IMPORTED_MODULE_2_hammerjs___default.a.DIRECTION_ALL });\n                    that.hammerCards.on('panleft panright panup pandown tap press', function (ev) {\n                        that.animateCurrentCard(ev);\n                    });\n\n                    $('#card-animated').bind('touchend', function (ev) {\n                        that.touchend();\n                    });\n                }, 200);\n            }\n        },\n        touchend: function touchend(top) {\n            var that = this;\n\n            if (that.top > -75 && that.top < 75 && that.left > -75 && that.left < 75) {\n                $('#card-animated').transition({ x: 0, y: 0 }, 300);\n            } else {\n                if (that.top < -75) {\n                    $('#card-animated').transition({ y: -200, opacity: 0 }, 300, function () {\n                        return that.resetPosition();\n                    });\n                }\n\n                if (that.top > 75) {\n                    $('#card-animated').transition({ y: 200, opacity: 0 }, 300, function () {\n                        return that.resetPosition();\n                    });\n                }\n\n                if (that.left > 75) {\n                    $('#card-animated').transition({ x: 300, opacity: 0 }, 300, function () {\n                        return that.resetPosition();\n                    });\n                }\n\n                if (that.left < -75) {\n                    $('#card-animated').transition({ x: -300, opacity: 0 }, 300, function () {\n                        return that.resetPosition();\n                    });\n                }\n            }\n        },\n        resetPosition: function resetPosition() {\n\n            var interaction = _.cloneDeep(this.interactions);\n            interaction.user_id = this.currentUser.id;\n            interaction.event_id = this.events[0].id;\n\n            this.handleInteraction(interaction);\n\n            this.top = 0;\n            this.left = 0;\n\n            this.interactions.up = false;\n            this.interactions.down = false;\n            this.interactions.skip = false;\n            this.interactions.favorite = false;\n\n            this.events.splice(0, 1);\n            $(this.$refs.cardAnimated).transition({ x: 0, y: 0, opacity: 1 }, 0);\n        },\n        animateCurrentCard: function animateCurrentCard(e) {\n\n            var that = this;\n\n            if (!e.isFinal) {\n                var top = e.deltaY;\n                var left = e.deltaX;\n\n                that.top = top;\n                that.left = left;\n\n                $('#card-animated').transition({ x: left, y: top }, 0);\n\n                if (top > -75 && top < 75 && left > -75 && left < 75) {\n                    that.interactions.up = false;\n                    that.interactions.down = false;\n                    that.interactions.favorite = false;\n                    that.interactions.skip = false;\n                } else {\n                    if (top < -75) {\n                        that.interactions.up = true;\n                        that.interactions.down = false;\n                        that.interactions.favorite = false;\n                        that.interactions.skip = false;\n                        return;\n                    }\n\n                    if (top > 75) {\n                        that.interactions.up = false;\n                        that.interactions.down = true;\n                        that.interactions.favorite = false;\n                        that.interactions.skip = false;\n                        return;\n                    }\n\n                    if (left > 75 && top > -75 && top < 75) {\n                        that.interactions.up = false;\n                        that.interactions.down = false;\n                        that.interactions.favorite = true;\n                        that.interactions.skip = false;\n                        return;\n                    }\n\n                    if (left < -75 && top > -75 && top < 75) {\n                        that.interactions.up = false;\n                        that.interactions.down = false;\n                        that.interactions.favorite = false;\n                        that.interactions.skip = true;\n                        return;\n                    }\n                }\n            }\n        },\n        goUp: function goUp() {\n            var _this = this;\n\n            this.interactions.up = true;\n\n            $('#card-animated').transition({ x: 0, y: -100, opacity: 0 }, 1000, function () {\n                return _this.resetPosition();\n            });\n        },\n        goDown: function goDown() {\n            var _this2 = this;\n\n            this.interactions.down = true;\n            $('#card-animated').transition({ x: 0, y: 100, opacity: 0 }, 1000, function () {\n                return _this2.resetPosition();\n            });\n        },\n        favorite: function favorite() {\n            var _this3 = this;\n\n            this.interactions.favorite = true;\n            $('#card-animated').transition({ x: 100, y: 0, opacity: 0 }, 1000, function () {\n                return _this3.resetPosition();\n            });\n        },\n        skip: function skip() {\n            var _this4 = this;\n\n            this.interactions.skip = true;\n            $('#card-animated').transition({ x: -100, y: 0, opacity: 0 }, 1000, function () {\n                return _this4.resetPosition();\n            });\n        },\n        locationRequest: function locationRequest() {\n            var that = this;\n            var checkToAsk = parseInt(localStorage.getItem('location-request'));\n            var now = __WEBPACK_IMPORTED_MODULE_9_moment___default()().unix();\n\n            if (!checkToAsk || now > checkToAsk) {\n                navigator.permissions.query({ name: 'geolocation' }).then(function (result) {\n                    if (result.state === 'granted') {\n                        that.getLocation();\n                    } else if (result.state === 'prompt') {\n                        iziToast.show({\n                            icon: 'icon-contacts',\n                            title: '' + that.translations.location.notification.title,\n                            message: '' + that.translations.location.notification.message,\n                            position: 'topCenter',\n                            image: '/static/assets/img/logos/LOGOS-05.png',\n                            imageWidth: 70,\n                            color: 'dark',\n                            backgroundColor: '#561F9F',\n                            titleColor: '#fff',\n                            messageColor: '#fff',\n                            timeout: 0,\n                            layout: 2,\n                            buttons: [['<button class=\"btn-notification\">' + that.translations.location.notification.buttons.notNow + '</button>', function (instance, toast) {\n                                instance.hide({\n                                    transitionOut: 'fadeOutUp'\n                                }, toast, 'close', 'btn2');\n\n                                localStorage.setItem('location-request', __WEBPACK_IMPORTED_MODULE_9_moment___default()().add(1, 'hour').unix());\n\n                                infoNotify('', that.translations.location.permissionDenied);\n                                that.getEvents();\n                            }, false], ['<button class=\"btn btn-primary transparent\">' + that.translations.location.notification.buttons.enable + '</button>', function (instance, toast) {\n                                instance.hide({\n                                    transitionOut: 'fadeOutUp'\n                                }, toast, 'close', 'btn2');\n\n                                if (checkToAsk) {\n                                    localStorage.removeItem('location-request');\n                                }\n\n                                that.getLocation();\n                            }, true]],\n                            drag: false\n                        });\n                    }\n                });\n            } else {\n                that.getEvents();\n            }\n        },\n        getLocation: function getLocation() {\n            var that = this;\n\n            that.setLoading({ is_loading: true, message: '' });\n\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(that.navigatorSuccess, that.navigatorError);\n            } else {\n                errorNotify('', that.translations.location.notSupported);\n            }\n        },\n        navigatorSuccess: function navigatorSuccess(position) {\n            var that = this;\n\n            that.setLoading({ is_loading: true, message: '' });\n\n            that.currentLocation.lat = position.coords.latitude;\n            that.currentLocation.lng = position.coords.longitude;\n\n            that.getLocationByCoordinates();\n        },\n        navigatorError: function navigatorError() {\n            this.setLoading({ is_loading: false, message: '' });\n            errorNotify('', this.translations.location.unavailable);\n        },\n\n\n        geolocationInit: function geolocationInit() {\n            var that = this;\n            function onSuccess(position) {\n                that.currentLocation.lat = position.coords.latitude;\n                that.currentLocation.lng = position.coords.longitude;\n\n                navigator.geolocation.clearWatch(watchID);\n\n                that.getLocationByCoordinates();\n            }\n\n            function onError(error) {\n                console.log(error);\n                errorNotify('', that.translations.location.unavailable);\n            }\n\n            var watchID = navigator.geolocation.watchPosition(onSuccess, onError, { timeout: 30000 });\n        },\n\n        getLocationByCoordinates: function getLocationByCoordinates() {\n            var get_cities = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n\n            var that = this;\n\n            var geocoder = new google.maps.Geocoder();\n\n            var latlng = new google.maps.LatLng(that.currentLocation.lat, that.currentLocation.lng);\n\n            geocoder.geocode({\n                'latLng': latlng\n            }, function (results, status) {\n\n                if (status === google.maps.GeocoderStatus.OK) {\n\n                    if (results) {\n\n                        results[0].address_components.map(function (current) {\n                            current.types.map(function (type) {\n                                if (type == 'administrative_area_level_1') {\n                                    that.currentLocation.state = current.short_name;\n                                }\n                                if (type == 'administrative_area_level_2') {\n                                    that.currentLocation.city = current.short_name;\n                                }\n                            });\n                        });\n\n                        console.log('lat: ' + that.currentLocation.lat + ' | lng: ' + that.currentLocation.lng);\n                        console.log('Current location: ' + that.currentLocation.city + ' - ' + that.currentLocation.state);\n\n                        that.getEvents();\n\n                        if (get_cities) {\n                            that.getNearByCities();\n                        }\n                    } else {\n                        errorNotify('', that.translations.location.unavailable);\n                    }\n                }\n            });\n        },\n        handleDistance: function handleDistance(distance) {\n            distance = parseFloat(distance);\n            return distance.toFixed(2) + ' km';\n        },\n        getNearByCities: function getNearByCities() {\n            var that = this;\n\n            that.$http.post('city/near_by_location', {\n                lat: that.currentLocation.lat,\n                lng: that.currentLocation.lng,\n                radius: that.radius\n            }).then(function (response) {\n                that.cities = response.data.cities;\n                that.citiesSwiper();\n\n                localStorage.setItem('cities', __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(that.cities));\n            }).catch(function (error) {\n                console.log(error);\n            });\n        },\n        citiesSwiper: function citiesSwiper() {\n            var that = this;\n\n            setTimeout(function () {\n                that.swiperTabs = new Swiper(that.$refs.citiesSlider, {\n                    spaceBetween: 0,\n                    slidesPerView: 5,\n                    initialSlide: 0,\n                    loop: false,\n                    centeredSlides: true,\n                    slideToClickedSlide: true,\n                    prevButton: '.swiper-button-prev',\n                    nextButton: '.swiper-button-next',\n                    onSlideChangeEnd: function onSlideChangeEnd(swiper) {\n                        that.currentCity = that.cities[swiper.realIndex].id;\n                        that.getEvents();\n                    },\n                    breakpoints: {\n                        350: {\n                            slidesPerView: 2\n                        },\n                        480: {\n                            slidesPerView: 2\n                        },\n                        768: {\n                            slidesPerView: 3\n                        }\n                    }\n                });\n            }, 100);\n        },\n        getEvents: function getEvents() {\n            var that = this;\n            that.$http.post('event/explorer/list', {\n                language: that.language,\n                lat: that.currentLocation.lat,\n                lng: that.currentLocation.lng,\n                city_id: that.currentCity\n            }).then(function (response) {\n\n                that.events = response.data.events;\n                that.currentCity = response.data.current_city;\n                that.interactions.is_loading = false;\n\n\n                if (that.isLogged) {\n                    that.mountHammer();\n                }\n            }).catch(function (error) {\n                console.log(error);\n                that.interactions.is_loading = false;\n            });\n        },\n        handleInteraction: function handleInteraction(interaction) {\n            var that = this;\n            that.$http.post('event/interaction/store', interaction).then(function (response) {\n\n                console.log(response);\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n    })\n});\n\n/***/ }),\n\n/***/ 698:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return en; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return pt; });\nvar en = {\n    end_list: 'No events nearby',\n    up: 'Go Up',\n    down: 'Go Down',\n    skip: 'Skip',\n    favorite: 'Save',\n    filter: 'Filter',\n\n    nearCities: 'Cidades próximas',\n    noCity: 'No city nearby.',\n    makeLogin: 'Sign in to interact with events',\n    goToLogin: 'Go to login',\n\n    location: {\n        label: 'Current location',\n        notSupported: 'Your browser doesn\\'t support geolocation, you can change its location by clicking the change location option.',\n        permissionDenied: 'You can change your location by clicking the change location option.',\n        success: 'Location enabled successfully.',\n        unavailable: 'Unable to determine your location. Change your location manually.',\n        newLocation: 'Enter an address, location, or city',\n        buttons: {\n            change: 'Change Location',\n            cancel: 'cancel'\n        },\n\n        notification: {\n            title: 'Location',\n            message: 'GoUp needs your permission to access your location and find events near you.',\n            buttons: {\n                notNow: 'Later',\n                enable: 'Enable Location'\n            }\n        }\n    }\n};\n\nvar pt = {\n    end_list: 'Nenhum evento nas proximidades',\n    up: 'Go Up',\n    down: 'Go Down',\n    skip: 'Pular',\n    favorite: 'Salvar',\n    filter: 'Filtro',\n\n    nearCities: 'Cidades próximas',\n    noCity: 'Nenhuma cidade encontrada.',\n    makeLogin: 'Faça login para interagir com os eventos',\n    goToLogin: 'Ir para login',\n\n    location: {\n        label: 'Localização atual',\n        notSupported: 'Seu browser não suporta geolocalização, você pode alterar sua localização clicando na opção alterar localização.',\n        permissionDenied: 'Você pode alterar sua localização clicando na opção alterar localização.',\n        success: 'Localização ativada com sucesso.',\n        unavailable: 'Não foi possível determinar sua localização. Altere sua localização manualmente.',\n        newLocation: 'Informe um endereço, local ou cidade',\n        buttons: {\n            change: 'Alterar localização',\n            cancel: 'Cancelar'\n        },\n\n        notification: {\n            title: 'Localização',\n            message: 'GoUp precisa da sua permissão para acessar sua localização e encontrar eventos próximos a você.',\n            buttons: {\n                notNow: 'Depois',\n                enable: 'Ativar localização'\n            }\n        }\n    }\n};\n\n/***/ }),\n\n/***/ 702:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(664)();\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"elements.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 705:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(664)();\n// imports\n\n\n// module\nexports.push([module.i, \".cards[data-v-1484b8b2]{position:relative;height:388px}.cards .card .card-header .card-header-container[data-v-1484b8b2]{position:absolute;top:0;left:0;bottom:0;right:0;width:100%;height:100%;z-index:10}@media (max-width:360px){.cards[data-v-1484b8b2]{height:330px}}.card[data-v-1484b8b2]{position:absolute;width:100%;left:0}.card .card-header.cover[data-v-1484b8b2]{position:relative;background-position:50%;background-size:cover;background-repeat:no-repeat}.cards #card-animated[data-v-1484b8b2]{z-index:10}.fadeInLeft[data-v-1484b8b2]{transition:.1s}.icon-information[data-v-1484b8b2]{position:absolute;top:0;right:10px;font-size:30px;color:#fff;z-index:7}.icon-favorite[data-v-1484b8b2]{position:absolute;top:0;left:10px;font-size:30px;color:#fff;z-index:7}.card .card-header .ch-content[data-v-1484b8b2]{position:absolute;bottom:0;left:0;width:100%;text-align:left;padding:10px;color:#fff!important}\", \"\", {\"version\":3,\"sources\":[\"/Users/igortrindade/Code/goup-front/src/modules/general/explorer/components/show.vue\"],\"names\":[],\"mappings\":\"AACA,wBACI,kBAAmB,AACnB,YAAc,CACjB,AACD,kEACI,kBAAmB,AACnB,MAAO,AAAC,OAAQ,AAChB,SAAU,AAAC,QAAS,AACpB,WAAY,AAAC,YAAa,AAC1B,UAAY,CACf,AACD,yBACA,wBAAyB,YAAa,CACrC,CACA,AACD,uBACI,kBAAmB,AACnB,WAAY,AACZ,MAAQ,CACX,AACD,0CACI,kBAAmB,AACnB,wBAAmC,AACnC,sBAAuB,AACvB,2BAA6B,CAChC,AACD,uCAAwC,UAAY,CACnD,AACD,6BACI,cAAiB,CACpB,AACD,mCACI,kBAAmB,AACnB,MAAS,AACT,WAAY,AACZ,eAAgB,AAChB,WAAY,AACZ,SAAW,CACd,AACD,gCACI,kBAAmB,AACnB,MAAS,AACT,UAAW,AACX,eAAgB,AAChB,WAAY,AACZ,SAAW,CACd,AACD,gDACI,kBAAmB,AACnB,SAAU,AACV,OAAQ,AACR,WAAY,AACZ,gBAAiB,AACjB,aAAc,AACd,oBAAuB,CAC1B\",\"file\":\"show.vue\",\"sourcesContent\":[\"\\n.cards[data-v-1484b8b2] {\\n    position: relative;\\n    height: 388px;\\n}\\n.cards .card .card-header .card-header-container[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0; left: 0;\\n    bottom: 0; right: 0;\\n    width: 100%; height: 100%;\\n    z-index: 10;\\n}\\n@media (max-width: 360px) {\\n.cards[data-v-1484b8b2]{ height: 330px\\n}\\n}\\n.card[data-v-1484b8b2] {\\n    position: absolute;\\n    width: 100%;\\n    left: 0;\\n}\\n.card .card-header.cover[data-v-1484b8b2] {\\n    position: relative;\\n    background-position: center center;\\n    background-size: cover;\\n    background-repeat: no-repeat;\\n}\\n.cards #card-animated[data-v-1484b8b2]{ z-index: 10;\\n}\\n.fadeInLeft[data-v-1484b8b2]{\\n    transition: 0.1s;\\n}\\n.icon-information[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0px;\\n    right: 10px;\\n    font-size: 30px;\\n    color: #fff;\\n    z-index: 7;\\n}\\n.icon-favorite[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0px;\\n    left: 10px;\\n    font-size: 30px;\\n    color: #fff;\\n    z-index: 7;\\n}\\n.card .card-header .ch-content[data-v-1484b8b2] {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    text-align: left;\\n    padding: 10px;\\n    color: #fff !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 717:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(702);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(665)(\"981c6922\", content, true);\n\n/***/ }),\n\n/***/ 720:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(705);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(665)(\"7e1e4792\", content, true);\n\n/***/ }),\n\n/***/ 732:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return Hammer;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n/***/ }),\n\n/***/ 733:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery Transit - CSS3 transitions and transformations\n * (c) 2011-2014 Rico Sta. Cruz\n * MIT Licensed.\n *\n * http://ricostacruz.com/jquery.transit\n * http://github.com/rstacruz/jquery.transit\n */\n\n/* jshint expr: true */\n\n;(function (root, factory) {\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(760)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('jquery'));\n  } else {\n    factory(root.jQuery);\n  }\n\n}(this, function($) {\n\n  $.transit = {\n    version: \"0.9.12\",\n\n    // Map of $.css() keys to values for 'transitionProperty'.\n    // See https://developer.mozilla.org/en/CSS/CSS_transitions#Properties_that_can_be_animated\n    propertyMap: {\n      marginLeft    : 'margin',\n      marginRight   : 'margin',\n      marginBottom  : 'margin',\n      marginTop     : 'margin',\n      paddingLeft   : 'padding',\n      paddingRight  : 'padding',\n      paddingBottom : 'padding',\n      paddingTop    : 'padding'\n    },\n\n    // Will simply transition \"instantly\" if false\n    enabled: true,\n\n    // Set this to false if you don't want to use the transition end property.\n    useTransitionEnd: false\n  };\n\n  var div = document.createElement('div');\n  var support = {};\n\n  // Helper function to get the proper vendor property name.\n  // (`transition` => `WebkitTransition`)\n  function getVendorPropertyName(prop) {\n    // Handle unprefixed versions (FF16+, for example)\n    if (prop in div.style) return prop;\n\n    var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n    var prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (var i=0; i<prefixes.length; ++i) {\n      var vendorProp = prefixes[i] + prop_;\n      if (vendorProp in div.style) { return vendorProp; }\n    }\n  }\n\n  // Helper function to check if transform3D is supported.\n  // Should return true for Webkits and Firefox 10+.\n  function checkTransform3dSupport() {\n    div.style[support.transform] = '';\n    div.style[support.transform] = 'rotateY(90deg)';\n    return div.style[support.transform] !== '';\n  }\n\n  var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  // Check for the browser's transitions support.\n  support.transition      = getVendorPropertyName('transition');\n  support.transitionDelay = getVendorPropertyName('transitionDelay');\n  support.transform       = getVendorPropertyName('transform');\n  support.transformOrigin = getVendorPropertyName('transformOrigin');\n  support.filter          = getVendorPropertyName('Filter');\n  support.transform3d     = checkTransform3dSupport();\n\n  var eventNames = {\n    'transition':       'transitionend',\n    'MozTransition':    'transitionend',\n    'OTransition':      'oTransitionEnd',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'msTransition':     'MSTransitionEnd'\n  };\n\n  // Detect the 'transitionend' event needed.\n  var transitionEnd = support.transitionEnd = eventNames[support.transition] || null;\n\n  // Populate jQuery's `$.support` with the vendor prefixes we know.\n  // As per [jQuery's cssHooks documentation](http://api.jquery.com/jQuery.cssHooks/),\n  // we set $.support.transition to a string of the actual property name used.\n  for (var key in support) {\n    if (support.hasOwnProperty(key) && typeof $.support[key] === 'undefined') {\n      $.support[key] = support[key];\n    }\n  }\n\n  // Avoid memory leak in IE.\n  div = null;\n\n  // ## $.cssEase\n  // List of easing aliases that you can use with `$.fn.transition`.\n  $.cssEase = {\n    '_default':       'ease',\n    'in':             'ease-in',\n    'out':            'ease-out',\n    'in-out':         'ease-in-out',\n    'snap':           'cubic-bezier(0,1,.5,1)',\n    // Penner equations\n    'easeInCubic':    'cubic-bezier(.550,.055,.675,.190)',\n    'easeOutCubic':   'cubic-bezier(.215,.61,.355,1)',\n    'easeInOutCubic': 'cubic-bezier(.645,.045,.355,1)',\n    'easeInCirc':     'cubic-bezier(.6,.04,.98,.335)',\n    'easeOutCirc':    'cubic-bezier(.075,.82,.165,1)',\n    'easeInOutCirc':  'cubic-bezier(.785,.135,.15,.86)',\n    'easeInExpo':     'cubic-bezier(.95,.05,.795,.035)',\n    'easeOutExpo':    'cubic-bezier(.19,1,.22,1)',\n    'easeInOutExpo':  'cubic-bezier(1,0,0,1)',\n    'easeInQuad':     'cubic-bezier(.55,.085,.68,.53)',\n    'easeOutQuad':    'cubic-bezier(.25,.46,.45,.94)',\n    'easeInOutQuad':  'cubic-bezier(.455,.03,.515,.955)',\n    'easeInQuart':    'cubic-bezier(.895,.03,.685,.22)',\n    'easeOutQuart':   'cubic-bezier(.165,.84,.44,1)',\n    'easeInOutQuart': 'cubic-bezier(.77,0,.175,1)',\n    'easeInQuint':    'cubic-bezier(.755,.05,.855,.06)',\n    'easeOutQuint':   'cubic-bezier(.23,1,.32,1)',\n    'easeInOutQuint': 'cubic-bezier(.86,0,.07,1)',\n    'easeInSine':     'cubic-bezier(.47,0,.745,.715)',\n    'easeOutSine':    'cubic-bezier(.39,.575,.565,1)',\n    'easeInOutSine':  'cubic-bezier(.445,.05,.55,.95)',\n    'easeInBack':     'cubic-bezier(.6,-.28,.735,.045)',\n    'easeOutBack':    'cubic-bezier(.175, .885,.32,1.275)',\n    'easeInOutBack':  'cubic-bezier(.68,-.55,.265,1.55)'\n  };\n\n  // ## 'transform' CSS hook\n  // Allows you to use the `transform` property in CSS.\n  //\n  //     $(\"#hello\").css({ transform: \"rotate(90deg)\" });\n  //\n  //     $(\"#hello\").css('transform');\n  //     //=> { rotate: '90deg' }\n  //\n  $.cssHooks['transit:transform'] = {\n    // The getter returns a `Transform` object.\n    get: function(elem) {\n      return $(elem).data('transform') || new Transform();\n    },\n\n    // The setter accepts a `Transform` object or a string.\n    set: function(elem, v) {\n      var value = v;\n\n      if (!(value instanceof Transform)) {\n        value = new Transform(value);\n      }\n\n      // We've seen the 3D version of Scale() not work in Chrome when the\n      // element being scaled extends outside of the viewport.  Thus, we're\n      // forcing Chrome to not use the 3d transforms as well.  Not sure if\n      // translate is affectede, but not risking it.  Detection code from\n      // http://davidwalsh.name/detecting-google-chrome-javascript\n      if (support.transform === 'WebkitTransform' && !isChrome) {\n        elem.style[support.transform] = value.toString(true);\n      } else {\n        elem.style[support.transform] = value.toString();\n      }\n\n      $(elem).data('transform', value);\n    }\n  };\n\n  // Add a CSS hook for `.css({ transform: '...' })`.\n  // In jQuery 1.8+, this will intentionally override the default `transform`\n  // CSS hook so it'll play well with Transit. (see issue #62)\n  $.cssHooks.transform = {\n    set: $.cssHooks['transit:transform'].set\n  };\n\n  // ## 'filter' CSS hook\n  // Allows you to use the `filter` property in CSS.\n  //\n  //     $(\"#hello\").css({ filter: 'blur(10px)' });\n  //\n  $.cssHooks.filter = {\n    get: function(elem) {\n      return elem.style[support.filter];\n    },\n    set: function(elem, value) {\n      elem.style[support.filter] = value;\n    }\n  };\n\n  // jQuery 1.8+ supports prefix-free transitions, so these polyfills will not\n  // be necessary.\n  if ($.fn.jquery < \"1.8\") {\n    // ## 'transformOrigin' CSS hook\n    // Allows the use for `transformOrigin` to define where scaling and rotation\n    // is pivoted.\n    //\n    //     $(\"#hello\").css({ transformOrigin: '0 0' });\n    //\n    $.cssHooks.transformOrigin = {\n      get: function(elem) {\n        return elem.style[support.transformOrigin];\n      },\n      set: function(elem, value) {\n        elem.style[support.transformOrigin] = value;\n      }\n    };\n\n    // ## 'transition' CSS hook\n    // Allows you to use the `transition` property in CSS.\n    //\n    //     $(\"#hello\").css({ transition: 'all 0 ease 0' });\n    //\n    $.cssHooks.transition = {\n      get: function(elem) {\n        return elem.style[support.transition];\n      },\n      set: function(elem, value) {\n        elem.style[support.transition] = value;\n      }\n    };\n  }\n\n  // ## Other CSS hooks\n  // Allows you to rotate, scale and translate.\n  registerCssHook('scale');\n  registerCssHook('scaleX');\n  registerCssHook('scaleY');\n  registerCssHook('translate');\n  registerCssHook('rotate');\n  registerCssHook('rotateX');\n  registerCssHook('rotateY');\n  registerCssHook('rotate3d');\n  registerCssHook('perspective');\n  registerCssHook('skewX');\n  registerCssHook('skewY');\n  registerCssHook('x', true);\n  registerCssHook('y', true);\n\n  // ## Transform class\n  // This is the main class of a transformation property that powers\n  // `$.fn.css({ transform: '...' })`.\n  //\n  // This is, in essence, a dictionary object with key/values as `-transform`\n  // properties.\n  //\n  //     var t = new Transform(\"rotate(90) scale(4)\");\n  //\n  //     t.rotate             //=> \"90deg\"\n  //     t.scale              //=> \"4,4\"\n  //\n  // Setters are accounted for.\n  //\n  //     t.set('rotate', 4)\n  //     t.rotate             //=> \"4deg\"\n  //\n  // Convert it to a CSS string using the `toString()` and `toString(true)` (for WebKit)\n  // functions.\n  //\n  //     t.toString()         //=> \"rotate(90deg) scale(4,4)\"\n  //     t.toString(true)     //=> \"rotate(90deg) scale3d(4,4,0)\" (WebKit version)\n  //\n  function Transform(str) {\n    if (typeof str === 'string') { this.parse(str); }\n    return this;\n  }\n\n  Transform.prototype = {\n    // ### setFromString()\n    // Sets a property from a string.\n    //\n    //     t.setFromString('scale', '2,4');\n    //     // Same as set('scale', '2', '4');\n    //\n    setFromString: function(prop, val) {\n      var args =\n        (typeof val === 'string')  ? val.split(',') :\n        (val.constructor === Array) ? val :\n        [ val ];\n\n      args.unshift(prop);\n\n      Transform.prototype.set.apply(this, args);\n    },\n\n    // ### set()\n    // Sets a property.\n    //\n    //     t.set('scale', 2, 4);\n    //\n    set: function(prop) {\n      var args = Array.prototype.slice.apply(arguments, [1]);\n      if (this.setter[prop]) {\n        this.setter[prop].apply(this, args);\n      } else {\n        this[prop] = args.join(',');\n      }\n    },\n\n    get: function(prop) {\n      if (this.getter[prop]) {\n        return this.getter[prop].apply(this);\n      } else {\n        return this[prop] || 0;\n      }\n    },\n\n    setter: {\n      // ### rotate\n      //\n      //     .css({ rotate: 30 })\n      //     .css({ rotate: \"30\" })\n      //     .css({ rotate: \"30deg\" })\n      //     .css({ rotate: \"30deg\" })\n      //\n      rotate: function(theta) {\n        this.rotate = unit(theta, 'deg');\n      },\n\n      rotateX: function(theta) {\n        this.rotateX = unit(theta, 'deg');\n      },\n\n      rotateY: function(theta) {\n        this.rotateY = unit(theta, 'deg');\n      },\n\n      // ### scale\n      //\n      //     .css({ scale: 9 })      //=> \"scale(9,9)\"\n      //     .css({ scale: '3,2' })  //=> \"scale(3,2)\"\n      //\n      scale: function(x, y) {\n        if (y === undefined) { y = x; }\n        this.scale = x + \",\" + y;\n      },\n\n      // ### skewX + skewY\n      skewX: function(x) {\n        this.skewX = unit(x, 'deg');\n      },\n\n      skewY: function(y) {\n        this.skewY = unit(y, 'deg');\n      },\n\n      // ### perspectvie\n      perspective: function(dist) {\n        this.perspective = unit(dist, 'px');\n      },\n\n      // ### x / y\n      // Translations. Notice how this keeps the other value.\n      //\n      //     .css({ x: 4 })       //=> \"translate(4px, 0)\"\n      //     .css({ y: 10 })      //=> \"translate(4px, 10px)\"\n      //\n      x: function(x) {\n        this.set('translate', x, null);\n      },\n\n      y: function(y) {\n        this.set('translate', null, y);\n      },\n\n      // ### translate\n      // Notice how this keeps the other value.\n      //\n      //     .css({ translate: '2, 5' })    //=> \"translate(2px, 5px)\"\n      //\n      translate: function(x, y) {\n        if (this._translateX === undefined) { this._translateX = 0; }\n        if (this._translateY === undefined) { this._translateY = 0; }\n\n        if (x !== null && x !== undefined) { this._translateX = unit(x, 'px'); }\n        if (y !== null && y !== undefined) { this._translateY = unit(y, 'px'); }\n\n        this.translate = this._translateX + \",\" + this._translateY;\n      }\n    },\n\n    getter: {\n      x: function() {\n        return this._translateX || 0;\n      },\n\n      y: function() {\n        return this._translateY || 0;\n      },\n\n      scale: function() {\n        var s = (this.scale || \"1,1\").split(',');\n        if (s[0]) { s[0] = parseFloat(s[0]); }\n        if (s[1]) { s[1] = parseFloat(s[1]); }\n\n        // \"2.5,2.5\" => 2.5\n        // \"2.5,1\" => [2.5,1]\n        return (s[0] === s[1]) ? s[0] : s;\n      },\n\n      rotate3d: function() {\n        var s = (this.rotate3d || \"0,0,0,0deg\").split(',');\n        for (var i=0; i<=3; ++i) {\n          if (s[i]) { s[i] = parseFloat(s[i]); }\n        }\n        if (s[3]) { s[3] = unit(s[3], 'deg'); }\n\n        return s;\n      }\n    },\n\n    // ### parse()\n    // Parses from a string. Called on constructor.\n    parse: function(str) {\n      var self = this;\n      str.replace(/([a-zA-Z0-9]+)\\((.*?)\\)/g, function(x, prop, val) {\n        self.setFromString(prop, val);\n      });\n    },\n\n    // ### toString()\n    // Converts to a `transition` CSS property string. If `use3d` is given,\n    // it converts to a `-webkit-transition` CSS property string instead.\n    toString: function(use3d) {\n      var re = [];\n\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          // Don't use 3D transformations if the browser can't support it.\n          if ((!support.transform3d) && (\n            (i === 'rotateX') ||\n            (i === 'rotateY') ||\n            (i === 'perspective') ||\n            (i === 'transformOrigin'))) { continue; }\n\n          if (i[0] !== '_') {\n            if (use3d && (i === 'scale')) {\n              re.push(i + \"3d(\" + this[i] + \",1)\");\n            } else if (use3d && (i === 'translate')) {\n              re.push(i + \"3d(\" + this[i] + \",0)\");\n            } else {\n              re.push(i + \"(\" + this[i] + \")\");\n            }\n          }\n        }\n      }\n\n      return re.join(\" \");\n    }\n  };\n\n  function callOrQueue(self, queue, fn) {\n    if (queue === true) {\n      self.queue(fn);\n    } else if (queue) {\n      self.queue(queue, fn);\n    } else {\n      self.each(function () {\n                fn.call(this);\n            });\n    }\n  }\n\n  // ### getProperties(dict)\n  // Returns properties (for `transition-property`) for dictionary `props`. The\n  // value of `props` is what you would expect in `$.css(...)`.\n  function getProperties(props) {\n    var re = [];\n\n    $.each(props, function(key) {\n      key = $.camelCase(key); // Convert \"text-align\" => \"textAlign\"\n      key = $.transit.propertyMap[key] || $.cssProps[key] || key;\n      key = uncamel(key); // Convert back to dasherized\n\n      // Get vendor specify propertie\n      if (support[key])\n        key = uncamel(support[key]);\n\n      if ($.inArray(key, re) === -1) { re.push(key); }\n    });\n\n    return re;\n  }\n\n  // ### getTransition()\n  // Returns the transition string to be used for the `transition` CSS property.\n  //\n  // Example:\n  //\n  //     getTransition({ opacity: 1, rotate: 30 }, 500, 'ease');\n  //     //=> 'opacity 500ms ease, -webkit-transform 500ms ease'\n  //\n  function getTransition(properties, duration, easing, delay) {\n    // Get the CSS properties needed.\n    var props = getProperties(properties);\n\n    // Account for aliases (`in` => `ease-in`).\n    if ($.cssEase[easing]) { easing = $.cssEase[easing]; }\n\n    // Build the duration/easing/delay attributes for it.\n    var attribs = '' + toMS(duration) + ' ' + easing;\n    if (parseInt(delay, 10) > 0) { attribs += ' ' + toMS(delay); }\n\n    // For more properties, add them this way:\n    // \"margin 200ms ease, padding 200ms ease, ...\"\n    var transitions = [];\n    $.each(props, function(i, name) {\n      transitions.push(name + ' ' + attribs);\n    });\n\n    return transitions.join(', ');\n  }\n\n  // ## $.fn.transition\n  // Works like $.fn.animate(), but uses CSS transitions.\n  //\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 });\n  //\n  //     // Specific duration\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500);\n  //\n  //     // With duration and easing\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in');\n  //\n  //     // With callback\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, function() { ... });\n  //\n  //     // With everything\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in', function() { ... });\n  //\n  //     // Alternate syntax\n  //     $(\"...\").transition({\n  //       opacity: 0.1,\n  //       duration: 200,\n  //       delay: 40,\n  //       easing: 'in',\n  //       complete: function() { /* ... */ }\n  //      });\n  //\n  $.fn.transition = $.fn.transit = function(properties, duration, easing, callback) {\n    var self  = this;\n    var delay = 0;\n    var queue = true;\n\n    var theseProperties = $.extend(true, {}, properties);\n\n    // Account for `.transition(properties, callback)`.\n    if (typeof duration === 'function') {\n      callback = duration;\n      duration = undefined;\n    }\n\n    // Account for `.transition(properties, options)`.\n    if (typeof duration === 'object') {\n      easing = duration.easing;\n      delay = duration.delay || 0;\n      queue = typeof duration.queue === \"undefined\" ? true : duration.queue;\n      callback = duration.complete;\n      duration = duration.duration;\n    }\n\n    // Account for `.transition(properties, duration, callback)`.\n    if (typeof easing === 'function') {\n      callback = easing;\n      easing = undefined;\n    }\n\n    // Alternate syntax.\n    if (typeof theseProperties.easing !== 'undefined') {\n      easing = theseProperties.easing;\n      delete theseProperties.easing;\n    }\n\n    if (typeof theseProperties.duration !== 'undefined') {\n      duration = theseProperties.duration;\n      delete theseProperties.duration;\n    }\n\n    if (typeof theseProperties.complete !== 'undefined') {\n      callback = theseProperties.complete;\n      delete theseProperties.complete;\n    }\n\n    if (typeof theseProperties.queue !== 'undefined') {\n      queue = theseProperties.queue;\n      delete theseProperties.queue;\n    }\n\n    if (typeof theseProperties.delay !== 'undefined') {\n      delay = theseProperties.delay;\n      delete theseProperties.delay;\n    }\n\n    // Set defaults. (`400` duration, `ease` easing)\n    if (typeof duration === 'undefined') { duration = $.fx.speeds._default; }\n    if (typeof easing === 'undefined')   { easing = $.cssEase._default; }\n\n    duration = toMS(duration);\n\n    // Build the `transition` property.\n    var transitionValue = getTransition(theseProperties, duration, easing, delay);\n\n    // Compute delay until callback.\n    // If this becomes 0, don't bother setting the transition property.\n    var work = $.transit.enabled && support.transition;\n    var i = work ? (parseInt(duration, 10) + parseInt(delay, 10)) : 0;\n\n    // If there's nothing to do...\n    if (i === 0) {\n      var fn = function(next) {\n        self.css(theseProperties);\n        if (callback) { callback.apply(self); }\n        if (next) { next(); }\n      };\n\n      callOrQueue(self, queue, fn);\n      return self;\n    }\n\n    // Save the old transitions of each element so we can restore it later.\n    var oldTransitions = {};\n\n    var run = function(nextCall) {\n      var bound = false;\n\n      // Prepare the callback.\n      var cb = function() {\n        if (bound) { self.unbind(transitionEnd, cb); }\n\n        if (i > 0) {\n          self.each(function() {\n            this.style[support.transition] = (oldTransitions[this] || null);\n          });\n        }\n\n        if (typeof callback === 'function') { callback.apply(self); }\n        if (typeof nextCall === 'function') { nextCall(); }\n      };\n\n      if ((i > 0) && (transitionEnd) && ($.transit.useTransitionEnd)) {\n        // Use the 'transitionend' event if it's available.\n        bound = true;\n        self.bind(transitionEnd, cb);\n      } else {\n        // Fallback to timers if the 'transitionend' event isn't supported.\n        window.setTimeout(cb, i);\n      }\n\n      // Apply transitions.\n      self.each(function() {\n        if (i > 0) {\n          this.style[support.transition] = transitionValue;\n        }\n        $(this).css(theseProperties);\n      });\n    };\n\n    // Defer running. This allows the browser to paint any pending CSS it hasn't\n    // painted yet before doing the transitions.\n    var deferredRun = function(next) {\n        this.offsetWidth; // force a repaint\n        run(next);\n    };\n\n    // Use jQuery's fx queue.\n    callOrQueue(self, queue, deferredRun);\n\n    // Chainability.\n    return this;\n  };\n\n  function registerCssHook(prop, isPixels) {\n    // For certain properties, the 'px' should not be implied.\n    if (!isPixels) { $.cssNumber[prop] = true; }\n\n    $.transit.propertyMap[prop] = support.transform;\n\n    $.cssHooks[prop] = {\n      get: function(elem) {\n        var t = $(elem).css('transit:transform');\n        return t.get(prop);\n      },\n\n      set: function(elem, value) {\n        var t = $(elem).css('transit:transform');\n        t.setFromString(prop, value);\n\n        $(elem).css({ 'transit:transform': t });\n      }\n    };\n\n  }\n\n  // ### uncamel(str)\n  // Converts a camelcase string to a dasherized string.\n  // (`marginLeft` => `margin-left`)\n  function uncamel(str) {\n    return str.replace(/([A-Z])/g, function(letter) { return '-' + letter.toLowerCase(); });\n  }\n\n  // ### unit(number, unit)\n  // Ensures that number `number` has a unit. If no unit is found, assume the\n  // default is `unit`.\n  //\n  //     unit(2, 'px')          //=> \"2px\"\n  //     unit(\"30deg\", 'rad')   //=> \"30deg\"\n  //\n  function unit(i, units) {\n    if ((typeof i === \"string\") && (!i.match(/^[\\-0-9\\.]+$/))) {\n      return i;\n    } else {\n      return \"\" + i + units;\n    }\n  }\n\n  // ### toMS(duration)\n  // Converts given `duration` to a millisecond string.\n  //\n  // toMS('fast') => $.fx.speeds[i] => \"200ms\"\n  // toMS('normal') //=> $.fx.speeds._default => \"400ms\"\n  // toMS(10) //=> '10ms'\n  // toMS('100ms') //=> '100ms'  \n  //\n  function toMS(duration) {\n    var i = duration;\n\n    // Allow string durations like 'fast' and 'slow', without overriding numeric values.\n    if (typeof i === 'string' && (!i.match(/^[\\-0-9\\.]+/))) { i = $.fx.speeds[i] || $.fx.speeds._default; }\n\n    return unit(i, 'ms');\n  }\n\n  // Export some functions for testable-ness.\n  $.transit.getTransitionValue = getTransition;\n\n  return $;\n}));\n\n\n/***/ }),\n\n/***/ 734:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(717)\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(671),\n  /* template */\n  __webpack_require__(739),\n  /* scopeId */\n  \"data-v-04381e03\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 739:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {}, [_c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Buttons\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-default\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Default\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-primary\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Primary\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-success\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Success\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-info\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Info\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-danger\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Danger\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Card\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"card\"\n  }, [_c('div', {\n    staticClass: \"card-header ch-alt\"\n  }, [_c('h2', {\n    staticClass: \"title\"\n  }, [_vm._v(\"Título do card\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"card-body card-padding\"\n  }, [_c('p', [_vm._v(\"\\n                Some content to card\\n            \")])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Form\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"form-group\"\n  }, [_c('input', {\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"Qualquer valor\"\n    }\n  })])])\n}]}\n\n/***/ }),\n\n/***/ 742:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"first-container\"\n  }, [_c('main-header', {\n    attrs: {\n      \"title\": 'home',\n      \"type\": 'main',\n      \"cursor\": false\n    }\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"appear\": \"\",\n      \"mode\": \"in-out\",\n      \"enter-active-class\": \"animated fadeIn\",\n      \"leave-active-class\": \"animated fadeOut\"\n    }\n  }, [_c('div', {\n    staticClass: \"main\"\n  }, [_c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"row m-t-10\"\n  }, [_c('div', {\n    staticClass: \"col-sm-12 text-center\"\n  }, [_c('label', [_vm._v(_vm._s(_vm.translations.nearCities))]), _vm._v(\" \"), (!_vm.cities.length && !_vm.interactions.is_loading) ? _c('p', [_vm._v(_vm._s(_vm.translations.noCity))]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    ref: \"citiesSlider\",\n    staticClass: \"swiper-container\"\n  }, [_c('div', {\n    staticClass: \"swiper-wrapper\"\n  }, _vm._l((_vm.cities), function(city, $index) {\n    return _c('div', {\n      key: $index,\n      staticClass: \"swiper-slide label transparent m-5 cursor-pointer\",\n      class: {\n        'cursor-pointer': _vm.currentCity != city.id, 'label-success': _vm.currentCity == city.id\n      }\n    }, [(_vm.currentCity == city.id) ? _c('span', [_vm._v(\"\\n                                         \" + _vm._s(city.name) + \" - \" + _vm._s(city.state) + \"\\n                                     \")]) : _vm._e(), _vm._v(\" \"), (_vm.currentCity != city.id) ? _c('span', [_vm._v(\"\\n                                        \" + _vm._s(city.name) + \" - \" + _vm._s(city.state) + \"\\n                                    \")]) : _vm._e()])\n  }))])])]), _vm._v(\" \"), _c('h4', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.events.length && !_vm.interactions.is_loading),\n      expression: \"!events.length && !interactions.is_loading\"\n    }],\n    staticClass: \"text-center m-b-30 m-t-30\"\n  }, [_vm._v(\"\\n                    \" + _vm._s(_vm.translations.end_list) + \"\\n                \")]), _vm._v(\" \"), (_vm.events.length) ? _c('div', {\n    staticClass: \"cards m-t-30\"\n  }, [_c('div', {\n    ref: \"cardAnimated\",\n    staticClass: \"card m-0\",\n    attrs: {\n      \"id\": \"card-animated\"\n    }\n  }, [_c('div', {\n    staticClass: \"card-header cover\",\n    style: ({\n      backgroundImage: (\"url(\" + (_vm.events[0].cover) + \")\")\n    })\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.up),\n      expression: \"interactions.up\"\n    }],\n    staticClass: \"card-action up\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.up) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.down),\n      expression: \"interactions.down\"\n    }],\n    staticClass: \"card-action down\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.down) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.skip),\n      expression: \"interactions.skip\"\n    }],\n    staticClass: \"card-action skip\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.skip) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.favorite),\n      expression: \"interactions.favorite\"\n    }],\n    staticClass: \"card-action save\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.favorite) + \"\\n                            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ch-content\"\n  }, [_c('h3', {\n    staticClass: \"title f-700 t-overflow\"\n  }, [_vm._v(_vm._s(_vm.events[0].name))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-bottom\": \"0px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-ios-location m-r-5\"\n  }), _vm._v(\" \" + _vm._s(_vm.events[0].city.name) + \" - \" + _vm._s(_vm.events[0].city.state))])]), _vm._v(\" \"), (_vm.events[0].slug) ? _c('router-link', {\n    staticClass: \"icon-information ion-ios-information\",\n    attrs: {\n      \"tag\": \"span\",\n      \"to\": {\n        name: 'general.events.show',\n        params: {\n          event_slug: _vm.events[0].slug\n        }\n      }\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('span', {\n    staticClass: \"icon-favorite\"\n  }, [_c('i', {\n    staticClass: \"ion-ios-star f-primary\"\n  }), _vm._v(\" \" + _vm._s(_vm.events[0].favorited_count) + \"\\n                           \")])], 1)]), _vm._v(\" \"), (_vm.events.length > 1) ? _c('div', {\n    staticClass: \"card m-0\"\n  }, [_c('div', {\n    staticClass: \"card-header cover\",\n    style: ({\n      backgroundImage: (\"url(\" + (_vm.events[1].cover) + \")\")\n    })\n  }, [_c('div', {\n    staticClass: \"ch-content\"\n  }, [_c('h3', {\n    staticClass: \"title f-700 t-overflow\"\n  }, [_vm._v(_vm._s(_vm.events[1].name))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-bottom\": \"0px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-ios-location m-r-5\"\n  }), _vm._v(\" \" + _vm._s(_vm.events[1].city.name) + \" - \" + _vm._s(_vm.events[1].city.state))])]), _vm._v(\" \"), _c('span', {\n    staticClass: \"icon-information ion-ios-information\"\n  })])]) : _vm._e()]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-sm-12\"\n  }, [_c('div', {\n    staticClass: \"actions\"\n  }, [(_vm.events.length && _vm.isLogged) ? _c('div', [_c('span', {\n    staticClass: \"action skip\",\n    on: {\n      \"click\": function($event) {\n        _vm.skip()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-ios-rewind f-default\"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action xl down\",\n    on: {\n      \"click\": function($event) {\n        _vm.goDown()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-chevron-down f-red \"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action xl up\",\n    on: {\n      \"click\": function($event) {\n        _vm.goUp()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-chevron-up f-green\"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action favorite\",\n    on: {\n      \"click\": function($event) {\n        _vm.favorite()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-ios-star f-primary\"\n  })])]) : _vm._e(), _vm._v(\" \"), (!_vm.isLogged) ? _c('div', [_c('p', [_c('strong', [_vm._v(_vm._s(_vm.translations.makeLogin))])]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"btn btn-block btn-primary\",\n    attrs: {\n      \"type\": \"button\",\n      \"to\": {\n        name: 'general.auth.login'\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.translations.goToLogin))])], 1) : _vm._e()])])])])])])], 1)\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/2.dd664c57bc0e7672ac1e.js","\n/* styles */\nrequire(\"!!../../../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-1484b8b2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./show.vue\")\n\nvar Component = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./show.vue\"),\n  /* template */\n  require(\"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1484b8b2\\\"}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./show.vue\"),\n  /* scopeId */\n  \"data-v-1484b8b2\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/general/explorer/components/show.vue\n// module id = 332\n// module chunks = 2","<template lang=\"html\">\n    <div class=\"\">\n        <h1 class=\"title m-b-30\">Buttons</h1>\n\n        <button type=\"button\" class=\"btn btn-block btn-default\">Default</button>\n        <button type=\"button\" class=\"btn btn-block btn-primary\">Primary</button>\n        <button type=\"button\" class=\"btn btn-block btn-success\">Success</button>\n        <button type=\"button\" class=\"btn btn-block btn-info\">Info</button>\n        <button type=\"button\" class=\"btn btn-block btn-danger\">Danger</button>\n\n        <hr>\n\n        <h1 class=\"title m-b-30\">Card</h1>\n\n        <div class=\"card\">\n            <div class=\"card-header ch-alt\">\n                <h2 class=\"title\">Título do card</h2>\n            </div>\n            <div class=\"card-body card-padding\">\n                <p>\n                    Some content to card\n                </p>\n            </div>\n        </div>\n\n        <hr>\n\n        <h1 class=\"title m-b-30\">Form</h1>\n\n        <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Qualquer valor\">\n        </div>\n\n    </div>\n</template>\n\n<script>\n\n    export default {\n        name: 'ui-element',\n\n        components: {\n        },\n\n        data () {\n            return {\n            }\n        },\n\n        computed: {\n\n        },\n\n        mounted(){\n        },\n\n        methods: {\n\n        }\n    }\n</script>\n\n<style scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// elements.vue?f7cc7f9e","<template>\n\n    <div class=\"first-container\">\n\n        <main-header\n            :title=\"'home'\"\n            :type=\"'main'\"\n            :cursor=\"false\"\n        ></main-header>\n\n        <transition appear mode=\"in-out\" enter-active-class=\"animated fadeIn\" leave-active-class=\"animated fadeOut\">\n            <div class=\"main\">\n                <div class=\"container\">\n\n                    <!--Cities-->\n                    <div class=\"row m-t-10\">\n                        <div class=\"col-sm-12 text-center\">\n\n                            <label>{{ translations.nearCities }}</label>\n                            <p v-if=\"!cities.length && !interactions.is_loading\">{{ translations.noCity }}</p>\n                            <div class=\"swiper-container\" ref=\"citiesSlider\">\n                                <div class=\"swiper-wrapper\">\n                                    <div class=\"swiper-slide label transparent m-5 cursor-pointer\"\n                                         v-for=\"(city, $index) in cities\"\n                                         :key=\"$index\"\n                                         :class=\"{'cursor-pointer': currentCity != city.id, 'label-success':currentCity == city.id}\">\n                                         <span v-if=\"currentCity == city.id\">\n                                             {{city.name}} - {{city.state}}\n                                         </span>\n                                        <span v-if=\"currentCity != city.id\">\n                                            {{city.name}} - {{city.state}}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!--Cities-->\n\n\n                    <h4 class=\"text-center m-b-30 m-t-30\" v-show=\"!events.length && !interactions.is_loading\">\n                        {{ translations.end_list }}\n                    </h4>\n\n                    <!-- Cards -->\n                    <div class=\"cards m-t-30\" v-if=\"events.length\">\n\n                        <!-- FIRST PLACE -->\n                        <div id=\"card-animated\" class=\"card m-0\" ref=\"cardAnimated\">\n                            <!-- Card Header -->\n                            <div class=\"card-header cover\" :style=\"{ backgroundImage: `url(${ events[0].cover })` }\">\n                                <!-- Current Action -->\n                                <span class=\"card-action up\" v-show=\"interactions.up\">\n                                    {{ translations.up }}\n                                </span>\n                                <span class=\"card-action down\" v-show=\"interactions.down\">\n                                    {{ translations.down }}\n                                </span>\n                                <span class=\"card-action skip\" v-show=\"interactions.skip\">\n                                    {{ translations.skip }}\n                                </span>\n                                <span class=\"card-action save\" v-show=\"interactions.favorite\">\n                                    {{ translations.favorite }}\n                                </span>\n                                <!-- / Current Action -->\n\n                                <div class=\"ch-content\">\n                                    <h3 class=\"title f-700 t-overflow\">{{ events[0].name }}</h3>\n                                    <p class=\"title f-700 t-overflow\" style=\"margin-bottom: 0px;\"><i class=\"ion-ios-location m-r-5\"></i> {{ events[0].city.name }} - {{events[0].city.state}}</p>\n                                </div>\n\n                                <router-link\n                                    tag=\"span\"\n                                    class=\"icon-information ion-ios-information\"\n                                    v-if=\"events[0].slug\"\n                                    :to=\"{ name: 'general.events.show', params: { event_slug: events[0].slug } }\"\n                                >\n                                </router-link>\n\n                               <span class=\"icon-favorite\">\n                                    <i class=\"ion-ios-star f-primary\"></i> {{events[0].favorited_count}}\n                               </span>\n\n                            </div>\n                            <!-- / Card Header -->\n                        </div>\n                        <!-- / FIRST PLACE -->\n\n                        <!-- SECOND PLACE -->\n                        <div class=\"card m-0\" v-if=\"events.length > 1\">\n                            <!-- Card Header -->\n                            <div class=\"card-header cover\" :style=\"{ backgroundImage: `url(${ events[1].cover })` }\">\n                                <div class=\"ch-content\">\n                                    <h3 class=\"title f-700 t-overflow\">{{ events[1].name }}</h3>\n                                    <p class=\"title f-700 t-overflow\" style=\"margin-bottom: 0px;\"><i class=\"ion-ios-location m-r-5\"></i> {{ events[1].city.name }} - {{events[1].city.state}}</p>\n                                </div>\n                                <span class=\"icon-information ion-ios-information\">\n                                </span>\n                            </div>\n                            <!-- / Card Header -->\n                        </div>\n                        <!-- SECOND PLACE -->\n\n                    </div>\n                    <!-- Cards -->\n\n                    <!-- Actions -->\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"actions\">\n\n                                <div v-if=\"events.length && isLogged\">\n                                    <span class=\"action skip\" @click=\"skip()\">\n                                        <span class=\"ion-ios-rewind f-default\"></span>\n                                    </span>\n\n                                    <span class=\"action xl down\"  @click=\"goDown()\">\n                                        <span class=\"ion-chevron-down f-red \"></span>\n                                    </span>\n\n                                    <span class=\"action xl up\" @click=\"goUp()\">\n                                        <span class=\"ion-chevron-up f-green\"></span>\n                                    </span>\n\n                                    <span class=\"action favorite\" @click=\"favorite()\">\n                                        <span class=\"ion-ios-star f-primary\"></span>\n                                    </span>\n                                </div>\n\n                                <div v-if=\"!isLogged\">\n                                   <p><strong>{{translations.makeLogin}}</strong></p>\n\n                                    <router-link type=\"button\" class=\"btn btn-block btn-primary\" :to=\"{name: 'general.auth.login'}\">{{ translations.goToLogin }}</router-link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- / Actions -->\n\n                </div>\n            </div>\n        </transition>\n\n    </div>\n\n</template>\n\n<script>\n    import Hammer from 'hammerjs'\n    import { transition } from 'jquery.transit'\n    import { mapGetters, mapActions } from 'vuex'\n\n    import mainHeader from '@/components/main-header.vue'\n    import elements from '@/components/elements.vue'\n    import { cleanPlaceModel } from '@/models/Place'\n\n    import * as translations from '@/translations/pages/index'\n    import moment from 'moment'\n    import {language} from \"../../../../store/getters\";\n\n    export default {\n        name: 'landing',\n\n        components: {\n            mainHeader,\n            elements,\n        },\n\n        data () {\n            return {\n                interactions: {\n                    up: false,\n                    down: false,\n                    skip: false,\n                    favorite: false,\n                    is_loading: true,\n                },\n                starting: true,\n                placeholder: true,\n                events: [],\n                active: false,\n                top: 0,\n                left: 0,\n                currentLocation:{\n                    lat:-23.5505199,\n                    lng:-46.63330940000003,\n                    city: 'São Paulo',\n                    state: 'SP',\n                    newLocation: ''\n                },\n                currentCity: null,\n                cities: []\n            }\n        },\n\n        computed: {\n\n            ...mapGetters(['language', 'language', 'isLogged', 'currentUser']),\n\n            'translations': function() {\n\n                if (this.language === 'en') {\n                    return translations.en\n                }\n                if (this.language === 'pt') {\n                    return translations.pt\n                }\n            }\n        },\n\n        mounted(){\n\n            var that = this;\n\n            if(!window.cordova){\n                this.locationRequest()\n            }\n\n            var last_location = localStorage.getItem('last_location_getted')\n\n\n            if( window.cordova && moment().add(1, 'days').isAfter(moment('DD/MM/YYYY HH:mm:ss', last_location)) || window.cordova && !last_location  ){\n\n                //this.geolocationInit();\n                this.getLocation()\n\n            } else {\n\n                console.log('local_storage found');\n                that.currentLocation.lat = localStorage.getItem('user_lat');\n                that.currentLocation.lng = localStorage.getItem('user_lng');\n\n                that.getLocationByCoordinates(false);\n\n                that.cities = JSON.parse(localStorage.getItem('cities'));\n                that.citiesSwiper();\n\n            }\n        },\n\n\n        methods: {\n\n            ...mapActions(['setLoading']),\n\n            mountHammer() {\n                let that = this\n\n                if (that.hammerCards) {\n                    that.hammerCards = false\n                }\n\n                if (this.events.length) {\n                    setTimeout(() => {\n                        that.hammerCards = new Hammer(that.$refs.cardAnimated)\n                        that.hammerCards.get('pan').set({ direction: Hammer.DIRECTION_ALL })\n                        that.hammerCards.on('panleft panright panup pandown tap press', function(ev) {\n                            that.animateCurrentCard(ev)\n                        })\n\n                        $('#card-animated').bind('touchend', function(ev) {\n                            that.touchend()\n                        })\n\n                    }, 200)\n                }\n            },\n\n            touchend(top) {\n                let that = this\n                // Não passou da distancia minima para nenhum lado. Volta a posição inicial\n                if (that.top > -75 && that.top < 75 && that.left > -75 && that.left < 75) {\n                    $('#card-animated').transition({ x: 0, y: 0 }, 300)\n                } else {\n                    // UP\n                    if (that.top < -75) {\n                        $('#card-animated').transition({ y: -200, opacity: 0 }, 300, () => that.resetPosition())\n                    }\n                    // DOWN\n                    if (that.top > 75) {\n                        $('#card-animated').transition({ y: 200, opacity: 0 }, 300, () => that.resetPosition())\n                    }\n                    // Skip\n                    if (that.left > 75) {\n                        $('#card-animated').transition({ x: 300, opacity: 0 }, 300, () => that.resetPosition())\n                    }\n                    // Favorite\n                    if (that.left < -75) {\n                        $('#card-animated').transition({ x: -300, opacity: 0 }, 300, () => that.resetPosition())\n                    }\n                }\n            },\n\n            resetPosition() {\n\n                let interaction = _.cloneDeep(this.interactions)\n                interaction.user_id = this.currentUser.id\n                interaction.event_id =  this.events[0].id\n\n                this.handleInteraction(interaction)\n\n                // Reset Global Top And Left\n                this.top = 0\n                this.left = 0\n\n                // Reset Interactions\n                this.interactions.up = false\n                this.interactions.down = false\n                this.interactions.skip = false\n                this.interactions.favorite = false\n\n\n                // Remove From Array\n                this.events.splice(0, 1)\n                $(this.$refs.cardAnimated).transition({ x: 0, y: 0, opacity: 1 }, 0)\n\n                // Update localStorage\n                /*localStorage.removeItem('events')\n                localStorage.setItem('events', JSON.stringify(this.events))*/\n            },\n\n            animateCurrentCard(e) {\n\n                let that = this\n\n                if (!e.isFinal) {\n                    const top = e.deltaY\n                    const left = e.deltaX\n\n                    that.top = top\n                    that.left = left\n\n                    $('#card-animated').transition({ x: left, y: top }, 0)\n\n                    if (top > -75 && top < 75 && left > -75 && left < 75) {\n                        // Do nothing just reset position\n                        that.interactions.up = false\n                        that.interactions.down = false\n                        that.interactions.favorite = false\n                        that.interactions.skip = false\n                    } else {\n                        // UP\n                        if (top < -75) {\n                            that.interactions.up = true\n                            that.interactions.down = false\n                            that.interactions.favorite = false\n                            that.interactions.skip = false\n                            return\n                        }\n                        // DOWN\n                        if(top > 75) {\n                            that.interactions.up = false\n                            that.interactions.down = true\n                            that.interactions.favorite = false\n                            that.interactions.skip = false\n                            return\n                        }\n                        // FAVORITE\n                        if (left > 75 && (top > -75 && top < 75)) {\n                            that.interactions.up = false\n                            that.interactions.down = false\n                            that.interactions.favorite = true\n                            that.interactions.skip = false\n                            return\n                        }\n                        // SKIP\n                        if (left < -75 && (top > -75 && top < 75)) {\n                            that.interactions.up = false\n                            that.interactions.down = false\n                            that.interactions.favorite = false\n                            that.interactions.skip = true\n                            return\n                        }\n                    }\n                }\n            },\n\n            // Button Action UP\n            goUp() {\n                this.interactions.up = true\n\n                $('#card-animated').transition({ x: 0, y: -100, opacity: 0 }, 1000, () => this.resetPosition())\n            },\n            // Button Action DOWN\n            goDown() {\n                this.interactions.down = true\n                $('#card-animated').transition({ x: 0, y: 100, opacity: 0 }, 1000, () => this.resetPosition())\n            },\n            // Button Action FAVORITE\n            favorite() {\n                this.interactions.favorite = true\n                $('#card-animated').transition({ x: 100, y: 0, opacity: 0 }, 1000, () => this.resetPosition())\n            },\n            // Button Action SKIP\n            skip() {\n                this.interactions.skip = true\n                $('#card-animated').transition({ x: -100, y: 0, opacity: 0 }, 1000, () => this.resetPosition())\n            },\n\n            locationRequest() {\n                let that = this\n                let checkToAsk = parseInt(localStorage.getItem('location-request'))\n                let now = moment().unix()\n\n                if(!checkToAsk || now > checkToAsk){\n                    navigator.permissions.query({name:'geolocation'}).then(function(result) {\n                        if (result.state === 'granted') {\n                            //get current location\n                            that.getLocation()\n                        } else if (result.state === 'prompt') {\n\n                            //Request user permission\n                            iziToast.show({\n                                icon: 'icon-contacts',\n                                title: `${that.translations.location.notification.title}`,\n                                message: `${that.translations.location.notification.message}`,\n                                position: 'topCenter',\n                                image: '/static/assets/img/logos/LOGOS-05.png',\n                                imageWidth: 70,\n                                color: 'dark',\n                                backgroundColor: '#561F9F',\n                                titleColor: '#fff',\n                                messageColor: '#fff',\n                                timeout: 0,\n                                layout: 2,\n                                buttons: [\n                                    [`<button class=\"btn-notification\">${that.translations.location.notification.buttons.notNow}</button>`, function (instance, toast) {\n                                        instance.hide({\n                                            transitionOut: 'fadeOutUp',\n                                        }, toast, 'close', 'btn2');\n\n                                        localStorage.setItem('location-request', moment().add(1, 'hour').unix())\n\n                                        infoNotify('', that.translations.location.permissionDenied)\n                                        that.getEvents()\n\n                                    }, false],\n                                    [`<button class=\"btn btn-primary transparent\">${that.translations.location.notification.buttons.enable}</button>`, function (instance, toast) {\n                                        instance.hide({\n                                            transitionOut: 'fadeOutUp',\n                                        }, toast, 'close', 'btn2');\n\n                                        if(checkToAsk){\n                                            localStorage.removeItem('location-request')\n                                        }\n\n                                        that.getLocation()\n\n                                    }, true]\n                                ],\n                                drag: false\n                            });\n                        }\n\n                    });\n                }else{\n                    that.getEvents()\n                }\n\n            },\n\n            getLocation(){\n                let that = this\n\n                that.setLoading({is_loading: true, message: ''})\n\n                if (navigator.geolocation) {\n                    navigator.geolocation.getCurrentPosition(that.navigatorSuccess, that.navigatorError);\n                } else {\n                    errorNotify('', that.translations.location.notSupported);\n                }\n            },\n\n            navigatorSuccess(position) {\n                let that = this\n\n                that.setLoading({is_loading: true, message: ''})\n\n                that.currentLocation.lat = position.coords.latitude\n                that.currentLocation.lng = position.coords.longitude\n\n                that.getLocationByCoordinates()\n\n            },\n\n            navigatorError() {\n                this.setLoading({is_loading: false, message: ''})\n                errorNotify('', this.translations.location.unavailable);\n            },\n\n            geolocationInit: function(){\n                let that = this\n                function onSuccess(position) {\n                    that.currentLocation.lat = position.coords.latitude;\n                    that.currentLocation.lng =  position.coords.longitude;\n\n                    navigator.geolocation.clearWatch(watchID);\n\n                    that.getLocationByCoordinates();\n                }\n\n                // onError Callback receives a PositionError object\n                function onError(error) {\n                    console.log(error)\n                    errorNotify('', that.translations.location.unavailable);\n                }\n\n                // Options: throw an error if no update is received every 30 seconds.\n                var watchID = navigator.geolocation.watchPosition(onSuccess, onError, { timeout: 30000 });\n            },\n\n            getLocationByCoordinates(get_cities = true){\n\n                let that = this\n\n                let geocoder = new google.maps.Geocoder;\n\n                let latlng = new google.maps.LatLng(that.currentLocation.lat, that.currentLocation.lng);\n\n                geocoder.geocode({\n                    'latLng': latlng\n                }, function (results, status) {\n\n                    if (status === google.maps.GeocoderStatus.OK) {\n\n                        if (results) {\n\n                            results[0].address_components.map((current) =>{\n                                current.types.map((type) => {\n                                    if(type == 'administrative_area_level_1'){\n                                        that.currentLocation.state = current.short_name\n                                    }\n                                    if(type == 'administrative_area_level_2'){\n                                        that.currentLocation.city  = current.short_name\n                                    }\n                                })\n                            })\n\n                            console.log(`lat: ${that.currentLocation.lat} | lng: ${that.currentLocation.lng}`)\n                            console.log(`Current location: ${that.currentLocation.city} - ${that.currentLocation.state}`)\n\n                            that.getEvents()\n\n                            if(get_cities){\n                                that.getNearByCities()\n                            }\n\n                        } else {\n                            errorNotify('', that.translations.location.unavailable);\n                        }\n                    }\n                });\n\n            },\n\n            handleDistance(distance){\n                distance = parseFloat(distance);\n                return `${distance.toFixed(2)} km`\n            },\n\n            getNearByCities() {\n                let that = this\n\n                that.$http.post(`city/near_by_location`, {\n                    lat: that.currentLocation.lat,\n                    lng: that.currentLocation.lng,\n                    radius: that.radius\n                })\n                    .then(function (response) {\n                        that.cities = response.data.cities\n                        that.citiesSwiper()\n\n                        localStorage.setItem('cities', JSON.stringify(that.cities));\n\n                    })\n                    .catch(function (error) {\n                        console.log(error)\n                    });\n            },\n\n            citiesSwiper() {\n                let that = this\n\n                setTimeout(() => {\n                    that.swiperTabs = new Swiper(that.$refs.citiesSlider, {\n                        spaceBetween: 0,\n                        slidesPerView: 5,\n                        initialSlide: 0,\n                        loop: false,\n                        centeredSlides: true,\n                        slideToClickedSlide: true,\n                        prevButton: '.swiper-button-prev',\n                        nextButton: '.swiper-button-next',\n                        onSlideChangeEnd: swiper => {\n                            that.currentCity = that.cities[swiper.realIndex].id\n                            that.getEvents();\n                        },\n                        breakpoints: {\n                            350: {\n                                slidesPerView: 2,\n                            },\n                            480: {\n                                slidesPerView: 2,\n                            },\n                            768: {\n                                slidesPerView: 3,\n                            },\n                        }\n                    })\n\n                }, 100)\n            },\n\n            getEvents() {\n                let that = this\n                that.$http.post('event/explorer/list', {\n                    language: that.language,\n                    lat: that.currentLocation.lat,\n                    lng: that.currentLocation.lng,\n                    city_id: that.currentCity,\n                })\n                    .then(function (response) {\n\n                        that.events = response.data.events\n                        that.currentCity = response.data.current_city\n                        that.interactions.is_loading = false;\n                        /*if (that.starting) {\n\n                            that.starting = false\n\n                            if (localStorage.getItem('events')) {\n                                that.events = JSON.parse(localStorage.getItem('events'))\n                            } else {\n                                localStorage.setItem('events', JSON.stringify(that.events))\n                            }\n\n                        } else {\n                            localStorage.removeItem('events')\n                            localStorage.setItem('events', JSON.stringify(that.events))\n                        }\n*/\n\n\n                        if(that.isLogged){\n                            that.mountHammer()\n                        }\n                    }).catch(function (error) {\n                    console.log(error)\n                    that.interactions.is_loading = false;\n                });\n\n            },\n\n            handleInteraction(interaction) {\n                let that = this\n                that.$http.post('event/interaction/store', interaction)\n                    .then(function (response) {\n\n                     console.log(response)\n\n                    }).catch(function (error) {\n                    console.log(error)\n                });\n\n            },\n        }\n    }\n</script>\n\n<style scoped>\n    .cards {\n        position: relative;\n        height: 388px;\n    }\n    .cards .card .card-header .card-header-container {\n        position: absolute;\n        top: 0; left: 0;\n        bottom: 0; right: 0;\n        width: 100%; height: 100%;\n        z-index: 10;\n    }\n\n    @media (max-width: 360px) {\n        .cards{ height: 330px}\n    }\n\n    .card {\n        position: absolute;\n        width: 100%;\n        left: 0;\n    }\n\n    .card .card-header.cover {\n        position: relative;\n        background-position: center center;\n        background-size: cover;\n        background-repeat: no-repeat;\n    }\n\n    .cards #card-animated{ z-index: 10; }\n\n    .fadeInLeft{\n        transition: 0.1s;\n    }\n\n    .icon-information {\n        position: absolute;\n        top: 0px;\n        right: 10px;\n        font-size: 30px;\n        color: #fff;\n        z-index: 7;\n    }\n\n    .icon-favorite {\n        position: absolute;\n        top: 0px;\n        left: 10px;\n        font-size: 30px;\n        color: #fff;\n        z-index: 7;\n    }\n\n    .card .card-header .ch-content {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        text-align: left;\n        padding: 10px;\n        color: #fff !important;\n    }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// show.vue?5d0a40ee","export const en = {\n    end_list: 'No events nearby',\n    up: 'Go Up',\n    down: 'Go Down',\n    skip: 'Skip',\n    favorite: 'Save',\n    filter: 'Filter',\n\n    nearCities: 'Cidades próximas',\n    noCity: 'No city nearby.',\n    makeLogin: 'Sign in to interact with events',\n    goToLogin: 'Go to login',\n\n    location:{\n        label: 'Current location',\n        notSupported: `Your browser doesn't support geolocation, you can change its location by clicking the change location option.`,\n        permissionDenied: 'You can change your location by clicking the change location option.',\n        success: 'Location enabled successfully.',\n        unavailable: 'Unable to determine your location. Change your location manually.',\n        newLocation: 'Enter an address, location, or city',\n        buttons:{\n            change: 'Change Location',\n            cancel: 'cancel'\n        },\n\n        notification:{\n            title:'Location',\n            message: 'GoUp needs your permission to access your location and find events near you.',\n            buttons: {\n                notNow: 'Later',\n                enable: 'Enable Location'\n            },\n        }\n    }\n}\n\nexport const pt = {\n    end_list: 'Nenhum evento nas proximidades',\n    up: 'Go Up',\n    down: 'Go Down',\n    skip: 'Pular',\n    favorite: 'Salvar',\n    filter: 'Filtro',\n\n    nearCities: 'Cidades próximas',\n    noCity: 'Nenhuma cidade encontrada.',\n    makeLogin: 'Faça login para interagir com os eventos',\n    goToLogin: 'Ir para login',\n\n    location:{\n        label: 'Localização atual',\n        notSupported: 'Seu browser não suporta geolocalização, você pode alterar sua localização clicando na opção alterar localização.',\n        permissionDenied: 'Você pode alterar sua localização clicando na opção alterar localização.',\n        success: 'Localização ativada com sucesso.',\n        unavailable: 'Não foi possível determinar sua localização. Altere sua localização manualmente.',\n        newLocation: 'Informe um endereço, local ou cidade',\n        buttons:{\n            change: 'Alterar localização',\n            cancel: 'Cancelar'\n        },\n\n        notification:{\n            title:'Localização',\n            message: 'GoUp precisa da sua permissão para acessar sua localização e encontrar eventos próximos a você.',\n            buttons: {\n                notNow: 'Depois',\n                enable: 'Ativar localização'\n            },\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/translations/pages/index.js","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\", {\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"elements.vue\",\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-04381e03\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/elements.vue\n// module id = 702\n// module chunks = 2","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".cards[data-v-1484b8b2]{position:relative;height:388px}.cards .card .card-header .card-header-container[data-v-1484b8b2]{position:absolute;top:0;left:0;bottom:0;right:0;width:100%;height:100%;z-index:10}@media (max-width:360px){.cards[data-v-1484b8b2]{height:330px}}.card[data-v-1484b8b2]{position:absolute;width:100%;left:0}.card .card-header.cover[data-v-1484b8b2]{position:relative;background-position:50%;background-size:cover;background-repeat:no-repeat}.cards #card-animated[data-v-1484b8b2]{z-index:10}.fadeInLeft[data-v-1484b8b2]{transition:.1s}.icon-information[data-v-1484b8b2]{position:absolute;top:0;right:10px;font-size:30px;color:#fff;z-index:7}.icon-favorite[data-v-1484b8b2]{position:absolute;top:0;left:10px;font-size:30px;color:#fff;z-index:7}.card .card-header .ch-content[data-v-1484b8b2]{position:absolute;bottom:0;left:0;width:100%;text-align:left;padding:10px;color:#fff!important}\", \"\", {\"version\":3,\"sources\":[\"/Users/igortrindade/Code/goup-front/src/modules/general/explorer/components/show.vue\"],\"names\":[],\"mappings\":\"AACA,wBACI,kBAAmB,AACnB,YAAc,CACjB,AACD,kEACI,kBAAmB,AACnB,MAAO,AAAC,OAAQ,AAChB,SAAU,AAAC,QAAS,AACpB,WAAY,AAAC,YAAa,AAC1B,UAAY,CACf,AACD,yBACA,wBAAyB,YAAa,CACrC,CACA,AACD,uBACI,kBAAmB,AACnB,WAAY,AACZ,MAAQ,CACX,AACD,0CACI,kBAAmB,AACnB,wBAAmC,AACnC,sBAAuB,AACvB,2BAA6B,CAChC,AACD,uCAAwC,UAAY,CACnD,AACD,6BACI,cAAiB,CACpB,AACD,mCACI,kBAAmB,AACnB,MAAS,AACT,WAAY,AACZ,eAAgB,AAChB,WAAY,AACZ,SAAW,CACd,AACD,gCACI,kBAAmB,AACnB,MAAS,AACT,UAAW,AACX,eAAgB,AAChB,WAAY,AACZ,SAAW,CACd,AACD,gDACI,kBAAmB,AACnB,SAAU,AACV,OAAQ,AACR,WAAY,AACZ,gBAAiB,AACjB,aAAc,AACd,oBAAuB,CAC1B\",\"file\":\"show.vue\",\"sourcesContent\":[\"\\n.cards[data-v-1484b8b2] {\\n    position: relative;\\n    height: 388px;\\n}\\n.cards .card .card-header .card-header-container[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0; left: 0;\\n    bottom: 0; right: 0;\\n    width: 100%; height: 100%;\\n    z-index: 10;\\n}\\n@media (max-width: 360px) {\\n.cards[data-v-1484b8b2]{ height: 330px\\n}\\n}\\n.card[data-v-1484b8b2] {\\n    position: absolute;\\n    width: 100%;\\n    left: 0;\\n}\\n.card .card-header.cover[data-v-1484b8b2] {\\n    position: relative;\\n    background-position: center center;\\n    background-size: cover;\\n    background-repeat: no-repeat;\\n}\\n.cards #card-animated[data-v-1484b8b2]{ z-index: 10;\\n}\\n.fadeInLeft[data-v-1484b8b2]{\\n    transition: 0.1s;\\n}\\n.icon-information[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0px;\\n    right: 10px;\\n    font-size: 30px;\\n    color: #fff;\\n    z-index: 7;\\n}\\n.icon-favorite[data-v-1484b8b2] {\\n    position: absolute;\\n    top: 0px;\\n    left: 10px;\\n    font-size: 30px;\\n    color: #fff;\\n    z-index: 7;\\n}\\n.card .card-header .ch-content[data-v-1484b8b2] {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    width: 100%;\\n    text-align: left;\\n    padding: 10px;\\n    color: #fff !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-1484b8b2\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/modules/general/explorer/components/show.vue\n// module id = 705\n// module chunks = 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-04381e03\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./elements.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"981c6922\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-04381e03\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/elements.vue\n// module id = 717\n// module chunks = 2","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-1484b8b2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./show.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"7e1e4792\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-1484b8b2\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/modules/general/explorer/components/show.vue\n// module id = 720\n// module chunks = 2","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/hammerjs/hammer.js\n// module id = 732\n// module chunks = 2","/*!\n * jQuery Transit - CSS3 transitions and transformations\n * (c) 2011-2014 Rico Sta. Cruz\n * MIT Licensed.\n *\n * http://ricostacruz.com/jquery.transit\n * http://github.com/rstacruz/jquery.transit\n */\n\n/* jshint expr: true */\n\n;(function (root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(['jquery'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('jquery'));\n  } else {\n    factory(root.jQuery);\n  }\n\n}(this, function($) {\n\n  $.transit = {\n    version: \"0.9.12\",\n\n    // Map of $.css() keys to values for 'transitionProperty'.\n    // See https://developer.mozilla.org/en/CSS/CSS_transitions#Properties_that_can_be_animated\n    propertyMap: {\n      marginLeft    : 'margin',\n      marginRight   : 'margin',\n      marginBottom  : 'margin',\n      marginTop     : 'margin',\n      paddingLeft   : 'padding',\n      paddingRight  : 'padding',\n      paddingBottom : 'padding',\n      paddingTop    : 'padding'\n    },\n\n    // Will simply transition \"instantly\" if false\n    enabled: true,\n\n    // Set this to false if you don't want to use the transition end property.\n    useTransitionEnd: false\n  };\n\n  var div = document.createElement('div');\n  var support = {};\n\n  // Helper function to get the proper vendor property name.\n  // (`transition` => `WebkitTransition`)\n  function getVendorPropertyName(prop) {\n    // Handle unprefixed versions (FF16+, for example)\n    if (prop in div.style) return prop;\n\n    var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n    var prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (var i=0; i<prefixes.length; ++i) {\n      var vendorProp = prefixes[i] + prop_;\n      if (vendorProp in div.style) { return vendorProp; }\n    }\n  }\n\n  // Helper function to check if transform3D is supported.\n  // Should return true for Webkits and Firefox 10+.\n  function checkTransform3dSupport() {\n    div.style[support.transform] = '';\n    div.style[support.transform] = 'rotateY(90deg)';\n    return div.style[support.transform] !== '';\n  }\n\n  var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n\n  // Check for the browser's transitions support.\n  support.transition      = getVendorPropertyName('transition');\n  support.transitionDelay = getVendorPropertyName('transitionDelay');\n  support.transform       = getVendorPropertyName('transform');\n  support.transformOrigin = getVendorPropertyName('transformOrigin');\n  support.filter          = getVendorPropertyName('Filter');\n  support.transform3d     = checkTransform3dSupport();\n\n  var eventNames = {\n    'transition':       'transitionend',\n    'MozTransition':    'transitionend',\n    'OTransition':      'oTransitionEnd',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'msTransition':     'MSTransitionEnd'\n  };\n\n  // Detect the 'transitionend' event needed.\n  var transitionEnd = support.transitionEnd = eventNames[support.transition] || null;\n\n  // Populate jQuery's `$.support` with the vendor prefixes we know.\n  // As per [jQuery's cssHooks documentation](http://api.jquery.com/jQuery.cssHooks/),\n  // we set $.support.transition to a string of the actual property name used.\n  for (var key in support) {\n    if (support.hasOwnProperty(key) && typeof $.support[key] === 'undefined') {\n      $.support[key] = support[key];\n    }\n  }\n\n  // Avoid memory leak in IE.\n  div = null;\n\n  // ## $.cssEase\n  // List of easing aliases that you can use with `$.fn.transition`.\n  $.cssEase = {\n    '_default':       'ease',\n    'in':             'ease-in',\n    'out':            'ease-out',\n    'in-out':         'ease-in-out',\n    'snap':           'cubic-bezier(0,1,.5,1)',\n    // Penner equations\n    'easeInCubic':    'cubic-bezier(.550,.055,.675,.190)',\n    'easeOutCubic':   'cubic-bezier(.215,.61,.355,1)',\n    'easeInOutCubic': 'cubic-bezier(.645,.045,.355,1)',\n    'easeInCirc':     'cubic-bezier(.6,.04,.98,.335)',\n    'easeOutCirc':    'cubic-bezier(.075,.82,.165,1)',\n    'easeInOutCirc':  'cubic-bezier(.785,.135,.15,.86)',\n    'easeInExpo':     'cubic-bezier(.95,.05,.795,.035)',\n    'easeOutExpo':    'cubic-bezier(.19,1,.22,1)',\n    'easeInOutExpo':  'cubic-bezier(1,0,0,1)',\n    'easeInQuad':     'cubic-bezier(.55,.085,.68,.53)',\n    'easeOutQuad':    'cubic-bezier(.25,.46,.45,.94)',\n    'easeInOutQuad':  'cubic-bezier(.455,.03,.515,.955)',\n    'easeInQuart':    'cubic-bezier(.895,.03,.685,.22)',\n    'easeOutQuart':   'cubic-bezier(.165,.84,.44,1)',\n    'easeInOutQuart': 'cubic-bezier(.77,0,.175,1)',\n    'easeInQuint':    'cubic-bezier(.755,.05,.855,.06)',\n    'easeOutQuint':   'cubic-bezier(.23,1,.32,1)',\n    'easeInOutQuint': 'cubic-bezier(.86,0,.07,1)',\n    'easeInSine':     'cubic-bezier(.47,0,.745,.715)',\n    'easeOutSine':    'cubic-bezier(.39,.575,.565,1)',\n    'easeInOutSine':  'cubic-bezier(.445,.05,.55,.95)',\n    'easeInBack':     'cubic-bezier(.6,-.28,.735,.045)',\n    'easeOutBack':    'cubic-bezier(.175, .885,.32,1.275)',\n    'easeInOutBack':  'cubic-bezier(.68,-.55,.265,1.55)'\n  };\n\n  // ## 'transform' CSS hook\n  // Allows you to use the `transform` property in CSS.\n  //\n  //     $(\"#hello\").css({ transform: \"rotate(90deg)\" });\n  //\n  //     $(\"#hello\").css('transform');\n  //     //=> { rotate: '90deg' }\n  //\n  $.cssHooks['transit:transform'] = {\n    // The getter returns a `Transform` object.\n    get: function(elem) {\n      return $(elem).data('transform') || new Transform();\n    },\n\n    // The setter accepts a `Transform` object or a string.\n    set: function(elem, v) {\n      var value = v;\n\n      if (!(value instanceof Transform)) {\n        value = new Transform(value);\n      }\n\n      // We've seen the 3D version of Scale() not work in Chrome when the\n      // element being scaled extends outside of the viewport.  Thus, we're\n      // forcing Chrome to not use the 3d transforms as well.  Not sure if\n      // translate is affectede, but not risking it.  Detection code from\n      // http://davidwalsh.name/detecting-google-chrome-javascript\n      if (support.transform === 'WebkitTransform' && !isChrome) {\n        elem.style[support.transform] = value.toString(true);\n      } else {\n        elem.style[support.transform] = value.toString();\n      }\n\n      $(elem).data('transform', value);\n    }\n  };\n\n  // Add a CSS hook for `.css({ transform: '...' })`.\n  // In jQuery 1.8+, this will intentionally override the default `transform`\n  // CSS hook so it'll play well with Transit. (see issue #62)\n  $.cssHooks.transform = {\n    set: $.cssHooks['transit:transform'].set\n  };\n\n  // ## 'filter' CSS hook\n  // Allows you to use the `filter` property in CSS.\n  //\n  //     $(\"#hello\").css({ filter: 'blur(10px)' });\n  //\n  $.cssHooks.filter = {\n    get: function(elem) {\n      return elem.style[support.filter];\n    },\n    set: function(elem, value) {\n      elem.style[support.filter] = value;\n    }\n  };\n\n  // jQuery 1.8+ supports prefix-free transitions, so these polyfills will not\n  // be necessary.\n  if ($.fn.jquery < \"1.8\") {\n    // ## 'transformOrigin' CSS hook\n    // Allows the use for `transformOrigin` to define where scaling and rotation\n    // is pivoted.\n    //\n    //     $(\"#hello\").css({ transformOrigin: '0 0' });\n    //\n    $.cssHooks.transformOrigin = {\n      get: function(elem) {\n        return elem.style[support.transformOrigin];\n      },\n      set: function(elem, value) {\n        elem.style[support.transformOrigin] = value;\n      }\n    };\n\n    // ## 'transition' CSS hook\n    // Allows you to use the `transition` property in CSS.\n    //\n    //     $(\"#hello\").css({ transition: 'all 0 ease 0' });\n    //\n    $.cssHooks.transition = {\n      get: function(elem) {\n        return elem.style[support.transition];\n      },\n      set: function(elem, value) {\n        elem.style[support.transition] = value;\n      }\n    };\n  }\n\n  // ## Other CSS hooks\n  // Allows you to rotate, scale and translate.\n  registerCssHook('scale');\n  registerCssHook('scaleX');\n  registerCssHook('scaleY');\n  registerCssHook('translate');\n  registerCssHook('rotate');\n  registerCssHook('rotateX');\n  registerCssHook('rotateY');\n  registerCssHook('rotate3d');\n  registerCssHook('perspective');\n  registerCssHook('skewX');\n  registerCssHook('skewY');\n  registerCssHook('x', true);\n  registerCssHook('y', true);\n\n  // ## Transform class\n  // This is the main class of a transformation property that powers\n  // `$.fn.css({ transform: '...' })`.\n  //\n  // This is, in essence, a dictionary object with key/values as `-transform`\n  // properties.\n  //\n  //     var t = new Transform(\"rotate(90) scale(4)\");\n  //\n  //     t.rotate             //=> \"90deg\"\n  //     t.scale              //=> \"4,4\"\n  //\n  // Setters are accounted for.\n  //\n  //     t.set('rotate', 4)\n  //     t.rotate             //=> \"4deg\"\n  //\n  // Convert it to a CSS string using the `toString()` and `toString(true)` (for WebKit)\n  // functions.\n  //\n  //     t.toString()         //=> \"rotate(90deg) scale(4,4)\"\n  //     t.toString(true)     //=> \"rotate(90deg) scale3d(4,4,0)\" (WebKit version)\n  //\n  function Transform(str) {\n    if (typeof str === 'string') { this.parse(str); }\n    return this;\n  }\n\n  Transform.prototype = {\n    // ### setFromString()\n    // Sets a property from a string.\n    //\n    //     t.setFromString('scale', '2,4');\n    //     // Same as set('scale', '2', '4');\n    //\n    setFromString: function(prop, val) {\n      var args =\n        (typeof val === 'string')  ? val.split(',') :\n        (val.constructor === Array) ? val :\n        [ val ];\n\n      args.unshift(prop);\n\n      Transform.prototype.set.apply(this, args);\n    },\n\n    // ### set()\n    // Sets a property.\n    //\n    //     t.set('scale', 2, 4);\n    //\n    set: function(prop) {\n      var args = Array.prototype.slice.apply(arguments, [1]);\n      if (this.setter[prop]) {\n        this.setter[prop].apply(this, args);\n      } else {\n        this[prop] = args.join(',');\n      }\n    },\n\n    get: function(prop) {\n      if (this.getter[prop]) {\n        return this.getter[prop].apply(this);\n      } else {\n        return this[prop] || 0;\n      }\n    },\n\n    setter: {\n      // ### rotate\n      //\n      //     .css({ rotate: 30 })\n      //     .css({ rotate: \"30\" })\n      //     .css({ rotate: \"30deg\" })\n      //     .css({ rotate: \"30deg\" })\n      //\n      rotate: function(theta) {\n        this.rotate = unit(theta, 'deg');\n      },\n\n      rotateX: function(theta) {\n        this.rotateX = unit(theta, 'deg');\n      },\n\n      rotateY: function(theta) {\n        this.rotateY = unit(theta, 'deg');\n      },\n\n      // ### scale\n      //\n      //     .css({ scale: 9 })      //=> \"scale(9,9)\"\n      //     .css({ scale: '3,2' })  //=> \"scale(3,2)\"\n      //\n      scale: function(x, y) {\n        if (y === undefined) { y = x; }\n        this.scale = x + \",\" + y;\n      },\n\n      // ### skewX + skewY\n      skewX: function(x) {\n        this.skewX = unit(x, 'deg');\n      },\n\n      skewY: function(y) {\n        this.skewY = unit(y, 'deg');\n      },\n\n      // ### perspectvie\n      perspective: function(dist) {\n        this.perspective = unit(dist, 'px');\n      },\n\n      // ### x / y\n      // Translations. Notice how this keeps the other value.\n      //\n      //     .css({ x: 4 })       //=> \"translate(4px, 0)\"\n      //     .css({ y: 10 })      //=> \"translate(4px, 10px)\"\n      //\n      x: function(x) {\n        this.set('translate', x, null);\n      },\n\n      y: function(y) {\n        this.set('translate', null, y);\n      },\n\n      // ### translate\n      // Notice how this keeps the other value.\n      //\n      //     .css({ translate: '2, 5' })    //=> \"translate(2px, 5px)\"\n      //\n      translate: function(x, y) {\n        if (this._translateX === undefined) { this._translateX = 0; }\n        if (this._translateY === undefined) { this._translateY = 0; }\n\n        if (x !== null && x !== undefined) { this._translateX = unit(x, 'px'); }\n        if (y !== null && y !== undefined) { this._translateY = unit(y, 'px'); }\n\n        this.translate = this._translateX + \",\" + this._translateY;\n      }\n    },\n\n    getter: {\n      x: function() {\n        return this._translateX || 0;\n      },\n\n      y: function() {\n        return this._translateY || 0;\n      },\n\n      scale: function() {\n        var s = (this.scale || \"1,1\").split(',');\n        if (s[0]) { s[0] = parseFloat(s[0]); }\n        if (s[1]) { s[1] = parseFloat(s[1]); }\n\n        // \"2.5,2.5\" => 2.5\n        // \"2.5,1\" => [2.5,1]\n        return (s[0] === s[1]) ? s[0] : s;\n      },\n\n      rotate3d: function() {\n        var s = (this.rotate3d || \"0,0,0,0deg\").split(',');\n        for (var i=0; i<=3; ++i) {\n          if (s[i]) { s[i] = parseFloat(s[i]); }\n        }\n        if (s[3]) { s[3] = unit(s[3], 'deg'); }\n\n        return s;\n      }\n    },\n\n    // ### parse()\n    // Parses from a string. Called on constructor.\n    parse: function(str) {\n      var self = this;\n      str.replace(/([a-zA-Z0-9]+)\\((.*?)\\)/g, function(x, prop, val) {\n        self.setFromString(prop, val);\n      });\n    },\n\n    // ### toString()\n    // Converts to a `transition` CSS property string. If `use3d` is given,\n    // it converts to a `-webkit-transition` CSS property string instead.\n    toString: function(use3d) {\n      var re = [];\n\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          // Don't use 3D transformations if the browser can't support it.\n          if ((!support.transform3d) && (\n            (i === 'rotateX') ||\n            (i === 'rotateY') ||\n            (i === 'perspective') ||\n            (i === 'transformOrigin'))) { continue; }\n\n          if (i[0] !== '_') {\n            if (use3d && (i === 'scale')) {\n              re.push(i + \"3d(\" + this[i] + \",1)\");\n            } else if (use3d && (i === 'translate')) {\n              re.push(i + \"3d(\" + this[i] + \",0)\");\n            } else {\n              re.push(i + \"(\" + this[i] + \")\");\n            }\n          }\n        }\n      }\n\n      return re.join(\" \");\n    }\n  };\n\n  function callOrQueue(self, queue, fn) {\n    if (queue === true) {\n      self.queue(fn);\n    } else if (queue) {\n      self.queue(queue, fn);\n    } else {\n      self.each(function () {\n                fn.call(this);\n            });\n    }\n  }\n\n  // ### getProperties(dict)\n  // Returns properties (for `transition-property`) for dictionary `props`. The\n  // value of `props` is what you would expect in `$.css(...)`.\n  function getProperties(props) {\n    var re = [];\n\n    $.each(props, function(key) {\n      key = $.camelCase(key); // Convert \"text-align\" => \"textAlign\"\n      key = $.transit.propertyMap[key] || $.cssProps[key] || key;\n      key = uncamel(key); // Convert back to dasherized\n\n      // Get vendor specify propertie\n      if (support[key])\n        key = uncamel(support[key]);\n\n      if ($.inArray(key, re) === -1) { re.push(key); }\n    });\n\n    return re;\n  }\n\n  // ### getTransition()\n  // Returns the transition string to be used for the `transition` CSS property.\n  //\n  // Example:\n  //\n  //     getTransition({ opacity: 1, rotate: 30 }, 500, 'ease');\n  //     //=> 'opacity 500ms ease, -webkit-transform 500ms ease'\n  //\n  function getTransition(properties, duration, easing, delay) {\n    // Get the CSS properties needed.\n    var props = getProperties(properties);\n\n    // Account for aliases (`in` => `ease-in`).\n    if ($.cssEase[easing]) { easing = $.cssEase[easing]; }\n\n    // Build the duration/easing/delay attributes for it.\n    var attribs = '' + toMS(duration) + ' ' + easing;\n    if (parseInt(delay, 10) > 0) { attribs += ' ' + toMS(delay); }\n\n    // For more properties, add them this way:\n    // \"margin 200ms ease, padding 200ms ease, ...\"\n    var transitions = [];\n    $.each(props, function(i, name) {\n      transitions.push(name + ' ' + attribs);\n    });\n\n    return transitions.join(', ');\n  }\n\n  // ## $.fn.transition\n  // Works like $.fn.animate(), but uses CSS transitions.\n  //\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 });\n  //\n  //     // Specific duration\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500);\n  //\n  //     // With duration and easing\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in');\n  //\n  //     // With callback\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, function() { ... });\n  //\n  //     // With everything\n  //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in', function() { ... });\n  //\n  //     // Alternate syntax\n  //     $(\"...\").transition({\n  //       opacity: 0.1,\n  //       duration: 200,\n  //       delay: 40,\n  //       easing: 'in',\n  //       complete: function() { /* ... */ }\n  //      });\n  //\n  $.fn.transition = $.fn.transit = function(properties, duration, easing, callback) {\n    var self  = this;\n    var delay = 0;\n    var queue = true;\n\n    var theseProperties = $.extend(true, {}, properties);\n\n    // Account for `.transition(properties, callback)`.\n    if (typeof duration === 'function') {\n      callback = duration;\n      duration = undefined;\n    }\n\n    // Account for `.transition(properties, options)`.\n    if (typeof duration === 'object') {\n      easing = duration.easing;\n      delay = duration.delay || 0;\n      queue = typeof duration.queue === \"undefined\" ? true : duration.queue;\n      callback = duration.complete;\n      duration = duration.duration;\n    }\n\n    // Account for `.transition(properties, duration, callback)`.\n    if (typeof easing === 'function') {\n      callback = easing;\n      easing = undefined;\n    }\n\n    // Alternate syntax.\n    if (typeof theseProperties.easing !== 'undefined') {\n      easing = theseProperties.easing;\n      delete theseProperties.easing;\n    }\n\n    if (typeof theseProperties.duration !== 'undefined') {\n      duration = theseProperties.duration;\n      delete theseProperties.duration;\n    }\n\n    if (typeof theseProperties.complete !== 'undefined') {\n      callback = theseProperties.complete;\n      delete theseProperties.complete;\n    }\n\n    if (typeof theseProperties.queue !== 'undefined') {\n      queue = theseProperties.queue;\n      delete theseProperties.queue;\n    }\n\n    if (typeof theseProperties.delay !== 'undefined') {\n      delay = theseProperties.delay;\n      delete theseProperties.delay;\n    }\n\n    // Set defaults. (`400` duration, `ease` easing)\n    if (typeof duration === 'undefined') { duration = $.fx.speeds._default; }\n    if (typeof easing === 'undefined')   { easing = $.cssEase._default; }\n\n    duration = toMS(duration);\n\n    // Build the `transition` property.\n    var transitionValue = getTransition(theseProperties, duration, easing, delay);\n\n    // Compute delay until callback.\n    // If this becomes 0, don't bother setting the transition property.\n    var work = $.transit.enabled && support.transition;\n    var i = work ? (parseInt(duration, 10) + parseInt(delay, 10)) : 0;\n\n    // If there's nothing to do...\n    if (i === 0) {\n      var fn = function(next) {\n        self.css(theseProperties);\n        if (callback) { callback.apply(self); }\n        if (next) { next(); }\n      };\n\n      callOrQueue(self, queue, fn);\n      return self;\n    }\n\n    // Save the old transitions of each element so we can restore it later.\n    var oldTransitions = {};\n\n    var run = function(nextCall) {\n      var bound = false;\n\n      // Prepare the callback.\n      var cb = function() {\n        if (bound) { self.unbind(transitionEnd, cb); }\n\n        if (i > 0) {\n          self.each(function() {\n            this.style[support.transition] = (oldTransitions[this] || null);\n          });\n        }\n\n        if (typeof callback === 'function') { callback.apply(self); }\n        if (typeof nextCall === 'function') { nextCall(); }\n      };\n\n      if ((i > 0) && (transitionEnd) && ($.transit.useTransitionEnd)) {\n        // Use the 'transitionend' event if it's available.\n        bound = true;\n        self.bind(transitionEnd, cb);\n      } else {\n        // Fallback to timers if the 'transitionend' event isn't supported.\n        window.setTimeout(cb, i);\n      }\n\n      // Apply transitions.\n      self.each(function() {\n        if (i > 0) {\n          this.style[support.transition] = transitionValue;\n        }\n        $(this).css(theseProperties);\n      });\n    };\n\n    // Defer running. This allows the browser to paint any pending CSS it hasn't\n    // painted yet before doing the transitions.\n    var deferredRun = function(next) {\n        this.offsetWidth; // force a repaint\n        run(next);\n    };\n\n    // Use jQuery's fx queue.\n    callOrQueue(self, queue, deferredRun);\n\n    // Chainability.\n    return this;\n  };\n\n  function registerCssHook(prop, isPixels) {\n    // For certain properties, the 'px' should not be implied.\n    if (!isPixels) { $.cssNumber[prop] = true; }\n\n    $.transit.propertyMap[prop] = support.transform;\n\n    $.cssHooks[prop] = {\n      get: function(elem) {\n        var t = $(elem).css('transit:transform');\n        return t.get(prop);\n      },\n\n      set: function(elem, value) {\n        var t = $(elem).css('transit:transform');\n        t.setFromString(prop, value);\n\n        $(elem).css({ 'transit:transform': t });\n      }\n    };\n\n  }\n\n  // ### uncamel(str)\n  // Converts a camelcase string to a dasherized string.\n  // (`marginLeft` => `margin-left`)\n  function uncamel(str) {\n    return str.replace(/([A-Z])/g, function(letter) { return '-' + letter.toLowerCase(); });\n  }\n\n  // ### unit(number, unit)\n  // Ensures that number `number` has a unit. If no unit is found, assume the\n  // default is `unit`.\n  //\n  //     unit(2, 'px')          //=> \"2px\"\n  //     unit(\"30deg\", 'rad')   //=> \"30deg\"\n  //\n  function unit(i, units) {\n    if ((typeof i === \"string\") && (!i.match(/^[\\-0-9\\.]+$/))) {\n      return i;\n    } else {\n      return \"\" + i + units;\n    }\n  }\n\n  // ### toMS(duration)\n  // Converts given `duration` to a millisecond string.\n  //\n  // toMS('fast') => $.fx.speeds[i] => \"200ms\"\n  // toMS('normal') //=> $.fx.speeds._default => \"400ms\"\n  // toMS(10) //=> '10ms'\n  // toMS('100ms') //=> '100ms'  \n  //\n  function toMS(duration) {\n    var i = duration;\n\n    // Allow string durations like 'fast' and 'slow', without overriding numeric values.\n    if (typeof i === 'string' && (!i.match(/^[\\-0-9\\.]+/))) { i = $.fx.speeds[i] || $.fx.speeds._default; }\n\n    return unit(i, 'ms');\n  }\n\n  // Export some functions for testable-ness.\n  $.transit.getTransitionValue = getTransition;\n\n  return $;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/jquery.transit/jquery.transit.js\n// module id = 733\n// module chunks = 2","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-04381e03\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./elements.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./elements.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-04381e03\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./elements.vue\"),\n  /* scopeId */\n  \"data-v-04381e03\",\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/elements.vue\n// module id = 734\n// module chunks = 2","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _vm._m(0)\n},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {}, [_c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Buttons\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-default\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Default\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-primary\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Primary\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-success\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Success\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-info\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Info\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"btn btn-block btn-danger\",\n    attrs: {\n      \"type\": \"button\"\n    }\n  }, [_vm._v(\"Danger\")]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Card\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"card\"\n  }, [_c('div', {\n    staticClass: \"card-header ch-alt\"\n  }, [_c('h2', {\n    staticClass: \"title\"\n  }, [_vm._v(\"Título do card\")])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"card-body card-padding\"\n  }, [_c('p', [_vm._v(\"\\n                Some content to card\\n            \")])])]), _vm._v(\" \"), _c('hr'), _vm._v(\" \"), _c('h1', {\n    staticClass: \"title m-b-30\"\n  }, [_vm._v(\"Form\")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"form-group\"\n  }, [_c('input', {\n    staticClass: \"form-control\",\n    attrs: {\n      \"type\": \"text\",\n      \"placeholder\": \"Qualquer valor\"\n    }\n  })])])\n}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-04381e03\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/elements.vue\n// module id = 739\n// module chunks = 2","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"first-container\"\n  }, [_c('main-header', {\n    attrs: {\n      \"title\": 'home',\n      \"type\": 'main',\n      \"cursor\": false\n    }\n  }), _vm._v(\" \"), _c('transition', {\n    attrs: {\n      \"appear\": \"\",\n      \"mode\": \"in-out\",\n      \"enter-active-class\": \"animated fadeIn\",\n      \"leave-active-class\": \"animated fadeOut\"\n    }\n  }, [_c('div', {\n    staticClass: \"main\"\n  }, [_c('div', {\n    staticClass: \"container\"\n  }, [_c('div', {\n    staticClass: \"row m-t-10\"\n  }, [_c('div', {\n    staticClass: \"col-sm-12 text-center\"\n  }, [_c('label', [_vm._v(_vm._s(_vm.translations.nearCities))]), _vm._v(\" \"), (!_vm.cities.length && !_vm.interactions.is_loading) ? _c('p', [_vm._v(_vm._s(_vm.translations.noCity))]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    ref: \"citiesSlider\",\n    staticClass: \"swiper-container\"\n  }, [_c('div', {\n    staticClass: \"swiper-wrapper\"\n  }, _vm._l((_vm.cities), function(city, $index) {\n    return _c('div', {\n      key: $index,\n      staticClass: \"swiper-slide label transparent m-5 cursor-pointer\",\n      class: {\n        'cursor-pointer': _vm.currentCity != city.id, 'label-success': _vm.currentCity == city.id\n      }\n    }, [(_vm.currentCity == city.id) ? _c('span', [_vm._v(\"\\n                                         \" + _vm._s(city.name) + \" - \" + _vm._s(city.state) + \"\\n                                     \")]) : _vm._e(), _vm._v(\" \"), (_vm.currentCity != city.id) ? _c('span', [_vm._v(\"\\n                                        \" + _vm._s(city.name) + \" - \" + _vm._s(city.state) + \"\\n                                    \")]) : _vm._e()])\n  }))])])]), _vm._v(\" \"), _c('h4', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (!_vm.events.length && !_vm.interactions.is_loading),\n      expression: \"!events.length && !interactions.is_loading\"\n    }],\n    staticClass: \"text-center m-b-30 m-t-30\"\n  }, [_vm._v(\"\\n                    \" + _vm._s(_vm.translations.end_list) + \"\\n                \")]), _vm._v(\" \"), (_vm.events.length) ? _c('div', {\n    staticClass: \"cards m-t-30\"\n  }, [_c('div', {\n    ref: \"cardAnimated\",\n    staticClass: \"card m-0\",\n    attrs: {\n      \"id\": \"card-animated\"\n    }\n  }, [_c('div', {\n    staticClass: \"card-header cover\",\n    style: ({\n      backgroundImage: (\"url(\" + (_vm.events[0].cover) + \")\")\n    })\n  }, [_c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.up),\n      expression: \"interactions.up\"\n    }],\n    staticClass: \"card-action up\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.up) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.down),\n      expression: \"interactions.down\"\n    }],\n    staticClass: \"card-action down\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.down) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.skip),\n      expression: \"interactions.skip\"\n    }],\n    staticClass: \"card-action skip\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.skip) + \"\\n                            \")]), _vm._v(\" \"), _c('span', {\n    directives: [{\n      name: \"show\",\n      rawName: \"v-show\",\n      value: (_vm.interactions.favorite),\n      expression: \"interactions.favorite\"\n    }],\n    staticClass: \"card-action save\"\n  }, [_vm._v(\"\\n                                \" + _vm._s(_vm.translations.favorite) + \"\\n                            \")]), _vm._v(\" \"), _c('div', {\n    staticClass: \"ch-content\"\n  }, [_c('h3', {\n    staticClass: \"title f-700 t-overflow\"\n  }, [_vm._v(_vm._s(_vm.events[0].name))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-bottom\": \"0px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-ios-location m-r-5\"\n  }), _vm._v(\" \" + _vm._s(_vm.events[0].city.name) + \" - \" + _vm._s(_vm.events[0].city.state))])]), _vm._v(\" \"), (_vm.events[0].slug) ? _c('router-link', {\n    staticClass: \"icon-information ion-ios-information\",\n    attrs: {\n      \"tag\": \"span\",\n      \"to\": {\n        name: 'general.events.show',\n        params: {\n          event_slug: _vm.events[0].slug\n        }\n      }\n    }\n  }) : _vm._e(), _vm._v(\" \"), _c('span', {\n    staticClass: \"icon-favorite\"\n  }, [_c('i', {\n    staticClass: \"ion-ios-star f-primary\"\n  }), _vm._v(\" \" + _vm._s(_vm.events[0].favorited_count) + \"\\n                           \")])], 1)]), _vm._v(\" \"), (_vm.events.length > 1) ? _c('div', {\n    staticClass: \"card m-0\"\n  }, [_c('div', {\n    staticClass: \"card-header cover\",\n    style: ({\n      backgroundImage: (\"url(\" + (_vm.events[1].cover) + \")\")\n    })\n  }, [_c('div', {\n    staticClass: \"ch-content\"\n  }, [_c('h3', {\n    staticClass: \"title f-700 t-overflow\"\n  }, [_vm._v(_vm._s(_vm.events[1].name))]), _vm._v(\" \"), _c('p', {\n    staticClass: \"title f-700 t-overflow\",\n    staticStyle: {\n      \"margin-bottom\": \"0px\"\n    }\n  }, [_c('i', {\n    staticClass: \"ion-ios-location m-r-5\"\n  }), _vm._v(\" \" + _vm._s(_vm.events[1].city.name) + \" - \" + _vm._s(_vm.events[1].city.state))])]), _vm._v(\" \"), _c('span', {\n    staticClass: \"icon-information ion-ios-information\"\n  })])]) : _vm._e()]) : _vm._e(), _vm._v(\" \"), _c('div', {\n    staticClass: \"row\"\n  }, [_c('div', {\n    staticClass: \"col-sm-12\"\n  }, [_c('div', {\n    staticClass: \"actions\"\n  }, [(_vm.events.length && _vm.isLogged) ? _c('div', [_c('span', {\n    staticClass: \"action skip\",\n    on: {\n      \"click\": function($event) {\n        _vm.skip()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-ios-rewind f-default\"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action xl down\",\n    on: {\n      \"click\": function($event) {\n        _vm.goDown()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-chevron-down f-red \"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action xl up\",\n    on: {\n      \"click\": function($event) {\n        _vm.goUp()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-chevron-up f-green\"\n  })]), _vm._v(\" \"), _c('span', {\n    staticClass: \"action favorite\",\n    on: {\n      \"click\": function($event) {\n        _vm.favorite()\n      }\n    }\n  }, [_c('span', {\n    staticClass: \"ion-ios-star f-primary\"\n  })])]) : _vm._e(), _vm._v(\" \"), (!_vm.isLogged) ? _c('div', [_c('p', [_c('strong', [_vm._v(_vm._s(_vm.translations.makeLogin))])]), _vm._v(\" \"), _c('router-link', {\n    staticClass: \"btn btn-block btn-primary\",\n    attrs: {\n      \"type\": \"button\",\n      \"to\": {\n        name: 'general.auth.login'\n      }\n    }\n  }, [_vm._v(_vm._s(_vm.translations.goToLogin))])], 1) : _vm._e()])])])])])])], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-1484b8b2\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/modules/general/explorer/components/show.vue\n// module id = 742\n// module chunks = 2"],"sourceRoot":""}